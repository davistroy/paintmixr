
> paintmixr@0.1.0 test
> jest --coverage --passWithNoTests --maxWorkers=2

FAIL tests/integration/auth-signin.test.ts
  ‚óè Test suite failed to run

    ReferenceError: Request is not defined

      18 |     },
      19 |   })),
    > 20 | }))
         |    ^
      21 |
      22 | // Import the actual API route handler (this will fail initially)
      23 | // import { POST } from '@/app/api/auth/email-signin/route'

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:15:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/integration/auth-signin.test.ts:20:17)

FAIL __tests__/accessibility/enhanced-mixing-ui.test.ts
  ‚óè Test suite failed to run


      [31mx[0m Expected '>', got 'data'
        ,-[[36;1;4m/home/davistroy/dev/paintmixr/__tests__/accessibility/enhanced-mixing-ui.test.ts[0m:15:1]
     [2m15[0m | 
     [2m16[0m | // Mock components - will be replaced with actual implementations
     [2m17[0m | const MockEnhancedColorMixer = () => (
     [2m18[0m |   <div data-testid="enhanced-color-mixer">
        : [31;1m       ^^^^[0m
     [2m19[0m |     <h1>Enhanced Color Mixing</h1>
     [2m20[0m |     <div role="form" aria-label="Color mixing configuration">
     [2m21[0m |       <div className="color-inputs">
        `----


    Caused by:
        Syntax Error

      at Object.transformSync (node_modules/next/src/build/swc/index.ts:1433:25)
      at transformSync (node_modules/next/src/build/swc/index.ts:1550:19)
      at Object.process (node_modules/next/src/build/swc/jest-transformer.ts:104:25)
      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)
      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)
      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)

FAIL tests/performance/auth-performance.test.ts
  ‚óè Authentication Performance Tests ‚Ä∫ NFR-001: Sign-in Response Time ‚Ä∫ MUST FAIL: should complete OAuth sign-in within 5 seconds

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      151 |     it('MUST FAIL: should complete OAuth sign-in within 5 seconds', async () => {
      152 |       // This test will fail until the auth route is implemented
    > 153 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      154 |
      155 |       /*
      156 |       // Mock OAuth callback request

      at Object.toBe (tests/performance/auth-performance.test.ts:153:20)

  ‚óè Authentication Performance Tests ‚Ä∫ NFR-001: Sign-in Response Time ‚Ä∫ MUST FAIL: should complete token exchange within 2 seconds

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      186 |     it('MUST FAIL: should complete token exchange within 2 seconds', async () => {
      187 |       // This test will fail until the auth route is implemented
    > 188 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      189 |
      190 |       /*
      191 |       // Mock Supabase token exchange

      at Object.toBe (tests/performance/auth-performance.test.ts:188:20)

  ‚óè Authentication Performance Tests ‚Ä∫ NFR-001: Sign-in Response Time ‚Ä∫ MUST FAIL: should handle session creation within 1 second

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      225 |     it('MUST FAIL: should handle session creation within 1 second', async () => {
      226 |       // This test will fail until the auth route is implemented
    > 227 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      228 |
      229 |       /*
      230 |       // Mock session creation in Supabase

      at Object.toBe (tests/performance/auth-performance.test.ts:227:20)

  ‚óè Authentication Performance Tests ‚Ä∫ NFR-001: Sign-in Response Time ‚Ä∫ should handle multiple concurrent sign-in attempts efficiently

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      264 |     it('should handle multiple concurrent sign-in attempts efficiently', async () => {
      265 |       // This test will fail until the auth route is implemented
    > 266 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      267 |
      268 |       /*
      269 |       const concurrentRequests = 10

      at Object.toBe (tests/performance/auth-performance.test.ts:266:20)

  ‚óè Authentication Performance Tests ‚Ä∫ UI Interaction Performance (60fps requirement) ‚Ä∫ should maintain 60fps during sign-in button interaction

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      307 |     it('should maintain 60fps during sign-in button interaction', () => {
      308 |       // This test will fail until the auth route is implemented
    > 309 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      310 |
      311 |       /*
      312 |       frameMonitor.start()

      at Object.toBe (tests/performance/auth-performance.test.ts:309:20)

  ‚óè Authentication Performance Tests ‚Ä∫ UI Interaction Performance (60fps requirement) ‚Ä∫ should maintain 60fps during redirect after sign-in

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      340 |     it('should maintain 60fps during redirect after sign-in', () => {
      341 |       // This test will fail until the auth route is implemented
    > 342 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      343 |
      344 |       /*
      345 |       frameMonitor.start()

      at Object.toBe (tests/performance/auth-performance.test.ts:342:20)

  ‚óè Authentication Performance Tests ‚Ä∫ UI Interaction Performance (60fps requirement) ‚Ä∫ should maintain 60fps during loading state transitions

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      373 |     it('should maintain 60fps during loading state transitions', () => {
      374 |       // This test will fail until the auth route is implemented
    > 375 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      376 |
      377 |       /*
      378 |       frameMonitor.start()

      at Object.toBe (tests/performance/auth-performance.test.ts:375:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Performance Baseline Establishment ‚Ä∫ should establish baseline for auth flow timing

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      406 |     it('should establish baseline for auth flow timing', async () => {
      407 |       // This test will fail until the auth route is implemented
    > 408 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      409 |
      410 |       /*
      411 |       const iterations = 20

      at Object.toBe (tests/performance/auth-performance.test.ts:408:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Performance Baseline Establishment ‚Ä∫ should track performance metrics for regression detection

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      461 |     it('should track performance metrics for regression detection', async () => {
      462 |       // This test will fail until the auth route is implemented
    > 463 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      464 |
      465 |       /*
      466 |       // Simulate 10 auth flows

      at Object.toBe (tests/performance/auth-performance.test.ts:463:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Regression Detection ‚Ä∫ should detect performance regressions

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      511 |     it('should detect performance regressions', async () => {
      512 |       // This test will fail until the auth route is implemented
    > 513 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      514 |
      515 |       /*
      516 |       // Baseline performance (simulated from previous runs)

      at Object.toBe (tests/performance/auth-performance.test.ts:513:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Regression Detection ‚Ä∫ should alert on performance degradation trends

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      562 |     it('should alert on performance degradation trends', async () => {
      563 |       // This test will fail until the auth route is implemented
    > 564 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      565 |
      566 |       /*
      567 |       // Simulate historical performance data

      at Object.toBe (tests/performance/auth-performance.test.ts:564:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Network Conditions Impact ‚Ä∫ should handle slow network conditions gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      600 |     it('should handle slow network conditions gracefully', async () => {
      601 |       // This test will fail until the auth route is implemented
    > 602 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      603 |
      604 |       /*
      605 |       // Simulate slow network (3G)

      at Object.toBe (tests/performance/auth-performance.test.ts:602:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Network Conditions Impact ‚Ä∫ should optimize for fast network conditions

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      628 |     it('should optimize for fast network conditions', async () => {
      629 |       // This test will fail until the auth route is implemented
    > 630 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      631 |
      632 |       /*
      633 |       // Simulate fast network (4G/5G)

      at Object.toBe (tests/performance/auth-performance.test.ts:630:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Error Handling Performance ‚Ä∫ should fail fast on authentication errors

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      658 |     it('should fail fast on authentication errors', async () => {
      659 |       // This test will fail until the auth route is implemented
    > 660 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      661 |
      662 |       /*
      663 |       timer.start('auth_error')

      at Object.toBe (tests/performance/auth-performance.test.ts:660:20)

  ‚óè Authentication Performance Tests ‚Ä∫ Error Handling Performance ‚Ä∫ should handle timeout scenarios appropriately

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      684 |     it('should handle timeout scenarios appropriately', async () => {
      685 |       // This test will fail until the auth route is implemented
    > 686 |       expect(true).toBe(false) // Intentional failure for TDD
          |                    ^
      687 |
      688 |       /*
      689 |       timer.start('timeout_test')

      at Object.toBe (tests/performance/auth-performance.test.ts:686:20)

FAIL src/lib/optimization/__tests__/tpe-hybrid.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../tpe-hybrid' from 'src/lib/optimization/__tests__/tpe-hybrid.test.ts'

       6 | import { TPEHybridOptimizer } from '../tpe-hybrid';
       7 | import { LABColor } from '@/lib/color-science/types';
    >  8 | import { EnhancedPaintRow } from '@/lib/database/database.types';
         |                    ^
       9 |
      10 | // Reuse mock paint data (subset for focused testing)
      11 | const mockPaints: EnhancedPaintRow[] = [

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (src/lib/optimization/__tests__/tpe-hybrid.test.ts:8:20)

FAIL src/lib/optimization/__tests__/differential-evolution.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../differential-evolution' from 'src/lib/optimization/__tests__/differential-evolution.test.ts'

       6 | import { DifferentialEvolutionOptimizer } from '../differential-evolution';
       7 | import { LABColor } from '@/lib/color-science/types';
    >  8 | import { EnhancedPaintRow } from '@/lib/database/database.types';
         |                                ^
       9 | import { calculateDeltaE } from '@/lib/color-science/delta-e';
      10 |
      11 | // Mock paint data for testing

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (src/lib/optimization/__tests__/differential-evolution.test.ts:8:32)

FAIL tests/accessibility/wcag.test.ts
  ‚óè WCAG 2.1 AA Accessibility Compliance ‚Ä∫ should fail initially - components not implemented

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      21 |   // This will fail because components don't exist yet
      22 |   it('should fail initially - components not implemented', () => {
    > 23 |     expect(true).toBe(false) // Intentional failure for TDD
         |                  ^
      24 |   })
      25 |
      26 |   // DISABLED: Implementation pending

      at Object.toBe (tests/accessibility/wcag.test.ts:23:18)

PASS tests/accessibility/signin-page.test.tsx (38.21 s)
  ‚óè Console

    console.error
      Warning: An update to SignInPageComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at error (/home/davistroy/dev/paintmixr/tests/accessibility/signin-page.test.tsx:28:3)

      37 |
      38 |   const handleOAuthSignIn = async (provider: string) => {
    > 39 |     setLoadingProvider(provider)
         |     ^
      40 |     // Mock OAuth flow
      41 |     await new Promise(resolve => setTimeout(resolve, 100))
      42 |     setLoadingProvider(null)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setLoadingProvider (tests/accessibility/signin-page.test.tsx:39:5)
      at handleOAuthSignIn (tests/accessibility/signin-page.test.tsx:92:30)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at node_modules/@testing-library/user-event/dist/cjs/event/behavior/keypress.js:14:26
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:41:13)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at KeyboardHost.keydown (node_modules/@testing-library/user-event/dist/cjs/system/keyboard.js:76:22)
      at keyboardAction (node_modules/@testing-library/user-event/dist/cjs/keyboard/index.js:22:35)
      at Object.keyboard (node_modules/@testing-library/user-event/dist/cjs/keyboard/index.js:11:15)
      at Object.<anonymous> (tests/accessibility/signin-page.test.tsx:361:7)

    console.error
      Warning: An update to SignInPageComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at error (/home/davistroy/dev/paintmixr/tests/accessibility/signin-page.test.tsx:28:3)

      37 |
      38 |   const handleOAuthSignIn = async (provider: string) => {
    > 39 |     setLoadingProvider(provider)
         |     ^
      40 |     // Mock OAuth flow
      41 |     await new Promise(resolve => setTimeout(resolve, 100))
      42 |     setLoadingProvider(null)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setLoadingProvider (tests/accessibility/signin-page.test.tsx:39:5)
      at handleOAuthSignIn (tests/accessibility/signin-page.test.tsx:111:30)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at node_modules/@testing-library/user-event/dist/cjs/event/behavior/keyup.js:14:33
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:41:13)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at KeyboardHost.keyup (node_modules/@testing-library/user-event/dist/cjs/system/keyboard.js:91:18)
      at keyboardAction (node_modules/@testing-library/user-event/dist/cjs/keyboard/index.js:29:35)
      at Object.keyboard (node_modules/@testing-library/user-event/dist/cjs/keyboard/index.js:11:9)
      at Object.<anonymous> (tests/accessibility/signin-page.test.tsx:378:7)

    console.error
      Warning: An update to SignInPageComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at error (/home/davistroy/dev/paintmixr/tests/accessibility/signin-page.test.tsx:28:3)

      37 |
      38 |   const handleOAuthSignIn = async (provider: string) => {
    > 39 |     setLoadingProvider(provider)
         |     ^
      40 |     // Mock OAuth flow
      41 |     await new Promise(resolve => setTimeout(resolve, 100))
      42 |     setLoadingProvider(null)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setLoadingProvider (tests/accessibility/signin-page.test.tsx:39:5)
      at handleOAuthSignIn (tests/accessibility/signin-page.test.tsx:92:30)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at node_modules/@testing-library/user-event/dist/cjs/event/behavior/keypress.js:14:26
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:41:13)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at KeyboardHost.keydown (node_modules/@testing-library/user-event/dist/cjs/system/keyboard.js:76:22)
      at keyboardAction (node_modules/@testing-library/user-event/dist/cjs/keyboard/index.js:22:35)
      at Object.keyboard (node_modules/@testing-library/user-event/dist/cjs/keyboard/index.js:11:15)
      at Object.<anonymous> (tests/accessibility/signin-page.test.tsx:395:7)

    console.error
      Warning: An update to SignInPageComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at error (/home/davistroy/dev/paintmixr/tests/accessibility/signin-page.test.tsx:28:3)

      37 |
      38 |   const handleOAuthSignIn = async (provider: string) => {
    > 39 |     setLoadingProvider(provider)
         |     ^
      40 |     // Mock OAuth flow
      41 |     await new Promise(resolve => setTimeout(resolve, 100))
      42 |     setLoadingProvider(null)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setLoadingProvider (tests/accessibility/signin-page.test.tsx:39:5)
      at handleOAuthSignIn (tests/accessibility/signin-page.test.tsx:92:30)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/accessibility/signin-page.test.tsx:686:7)

    console.error
      Warning: An update to SignInPageComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at error (/home/davistroy/dev/paintmixr/tests/accessibility/signin-page.test.tsx:28:3)

      37 |
      38 |   const handleOAuthSignIn = async (provider: string) => {
    > 39 |     setLoadingProvider(provider)
         |     ^
      40 |     // Mock OAuth flow
      41 |     await new Promise(resolve => setTimeout(resolve, 100))
      42 |     setLoadingProvider(null)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setLoadingProvider (tests/accessibility/signin-page.test.tsx:39:5)
      at handleOAuthSignIn (tests/accessibility/signin-page.test.tsx:92:30)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/accessibility/signin-page.test.tsx:703:7)

FAIL __tests__/contract/data-fetching-hooks.test.ts (6.949 s)
  ‚óè Console

    console.error
      Warning: An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at TestComponent (/home/davistroy/dev/paintmixr/node_modules/@testing-library/react/dist/pure.js:307:5)

      36 |       setData(null)
      37 |     } else {
    > 38 |       setData(response.data!)
         |       ^
      39 |       setError(null)
      40 |     }
      41 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setData (src/lib/hooks/useDataFetch.ts:38:7)

    console.error
      Warning: An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at TestComponent (/home/davistroy/dev/paintmixr/node_modules/@testing-library/react/dist/pure.js:307:5)

      37 |     } else {
      38 |       setData(response.data!)
    > 39 |       setError(null)
         |       ^
      40 |     }
      41 |
      42 |     setLoading(false)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setError (src/lib/hooks/useDataFetch.ts:39:7)

    console.error
      Warning: An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at TestComponent (/home/davistroy/dev/paintmixr/node_modules/@testing-library/react/dist/pure.js:307:5)

      40 |     }
      41 |
    > 42 |     setLoading(false)
         |     ^
      43 |   }
      44 |
      45 |   useEffect(() => {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setLoading (src/lib/hooks/useDataFetch.ts:42:5)

    console.error
      Warning: An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at TestComponent (/home/davistroy/dev/paintmixr/node_modules/@testing-library/react/dist/pure.js:307:5)

      36 |       setData(null)
      37 |     } else {
    > 38 |       setData(response.data!)
         |       ^
      39 |       setError(null)
      40 |     }
      41 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setData (src/lib/hooks/useDataFetch.ts:38:7)

    console.error
      Warning: An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at TestComponent (/home/davistroy/dev/paintmixr/node_modules/@testing-library/react/dist/pure.js:307:5)

      37 |     } else {
      38 |       setData(response.data!)
    > 39 |       setError(null)
         |       ^
      40 |     }
      41 |
      42 |     setLoading(false)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setError (src/lib/hooks/useDataFetch.ts:39:7)

    console.error
      Warning: An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at TestComponent (/home/davistroy/dev/paintmixr/node_modules/@testing-library/react/dist/pure.js:307:5)

      40 |     }
      41 |
    > 42 |     setLoading(false)
         |     ^
      43 |   }
      44 |
      45 |   useEffect(() => {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setLoading (src/lib/hooks/useDataFetch.ts:42:5)

  ‚óè Data Fetching Hooks Contract ‚Ä∫ usePagination Hook ‚Ä∫ should navigate to previous page

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 2

      58 |       })
      59 |
    > 60 |       expect(result.current.currentPage).toBe(3)
         |                                          ^
      61 |
      62 |       act(() => {
      63 |         result.current.previousPage()

      at Object.toBe (__tests__/contract/data-fetching-hooks.test.ts:60:42)

  ‚óè Data Fetching Hooks Contract ‚Ä∫ useDataFetch Hook ‚Ä∫ should set loading state during refetch

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      509 |       })
      510 |
    > 511 |       expect(loadingDuringRefetch).toBe(true)
          |                                    ^
      512 |     })
      513 |
      514 |     it('should refetch when dependencies change', async () => {

      at Object.toBe (__tests__/contract/data-fetching-hooks.test.ts:511:36)

  ‚óè Data Fetching Hooks Contract ‚Ä∫ Hook Composition ‚Ä∫ should compose filtering with data fetching

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/api/paints?brand=Golden"
    Received: "/api/paints?brand="

    Number of calls: 1

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div />[39m
        [36m<div />[39m
      [36m</body>[39m
    [36m</html>[39m

      660 |       // Should trigger refetch due to dependency change
      661 |       await waitFor(() => {
    > 662 |         expect(apiGet).toHaveBeenCalledWith('/api/paints?brand=Golden')
          |                        ^
      663 |       })
      664 |     })
      665 |

      at toHaveBeenCalledWith (__tests__/contract/data-fetching-hooks.test.ts:662:24)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè Data Fetching Hooks Contract ‚Ä∫ Hook Composition ‚Ä∫ should handle filter changes triggering data refetch and pagination reset

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 1

      722 |       })
      723 |
    > 724 |       expect(paginationResult.current.currentPage).toBe(3)
          |                                                    ^
      725 |
      726 |       // Change filter - should reset pagination
      727 |       act(() => {

      at Object.toBe (__tests__/contract/data-fetching-hooks.test.ts:724:52)

FAIL tests/accessibility/accessibility.test.tsx
  ‚óè Test suite failed to run

    Cannot find module '../../src/components/optimization/ColorPicker' from 'tests/accessibility/accessibility.test.tsx'

       8 | import { PaintCollectionManager } from '../../src/components/paints/PaintCollectionManager';
       9 | import { Dashboard } from '../../src/components/dashboard/Dashboard';
    > 10 |
         | ^
      11 | expect.extend(toHaveNoViolations);
      12 |
      13 | const mockOptimizationResult = {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/accessibility/accessibility.test.tsx:10:22)

FAIL __tests__/performance/response-times.test.ts
  ‚óè Console

    console.log
      Auth route not yet implemented - test will fail

      at Object.log (__tests__/performance/response-times.test.ts:125:17)

    console.log
      Email lookup not yet optimized

      at Object.log (__tests__/performance/response-times.test.ts:145:17)

    console.log
      OAuth check not yet optimized

      at Object.log (__tests__/performance/response-times.test.ts:164:17)

    console.log
      Color calculation not yet implemented

      at Object.log (__tests__/performance/response-times.test.ts:197:17)

    console.log
      Complex color calculation not yet optimized

      at Object.log (__tests__/performance/response-times.test.ts:242:17)

    console.log
      Batch calculations not yet implemented

      at Object.log (__tests__/performance/response-times.test.ts:275:17)

    console.log
      UI rendering not yet optimized

      at Object.log (__tests__/performance/response-times.test.ts:307:17)

    console.log
      Validation rendering not yet optimized

      at Object.log (__tests__/performance/response-times.test.ts:329:17)

    console.log
      Timer rendering not yet optimized

      at Object.log (__tests__/performance/response-times.test.ts:363:17)

    console.warn
      ‚ö†Ô∏è  P95 REGRESSION: 600ms exceeds threshold 550ms

      451 |
      452 |       if (p95 > regressionThreshold) {
    > 453 |         console.warn(`‚ö†Ô∏è  P95 REGRESSION: ${p95}ms exceeds threshold ${regressionThreshold}ms`)
          |                 ^
      454 |       }
      455 |
      456 |       // P95 should be monitored for regressions

      at Object.warn (__tests__/performance/response-times.test.ts:453:17)

    console.log
      
      === PERFORMANCE TEST RESULTS ===

      at Object.log (__tests__/performance/response-times.test.ts:45:13)

    console.log
      
      ================================

      at Object.log (__tests__/performance/response-times.test.ts:60:13)

  ‚óè T031: Response Time Baselines ‚Ä∫ Authentication Performance ‚Ä∫ should complete email/password signin in under 2 seconds

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:107:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ Authentication Performance ‚Ä∫ should validate email lookup in under 500ms

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:140:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ Authentication Performance ‚Ä∫ should check OAuth precedence in under 200ms

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:160:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ Color Calculation Performance ‚Ä∫ should calculate simple color mix in under 200ms

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:192:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ Color Calculation Performance ‚Ä∫ should calculate complex color mix in under 500ms

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:225:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ Color Calculation Performance ‚Ä∫ should handle batch calculations efficiently

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:266:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ UI Interaction Performance ‚Ä∫ should render form input changes within frame budget

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:302:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ UI Interaction Performance ‚Ä∫ should handle validation updates within frame budget

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:325:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ UI Interaction Performance ‚Ä∫ should update lockout timer without frame drops

    ReferenceError: performanceResults is not defined

      468 |  */
      469 | function recordPerformanceResult(testName: string, duration: number): void {
    > 470 |   if (!performanceResults.has(testName)) {
          |   ^
      471 |     performanceResults.set(testName, [])
      472 |   }
      473 |

      at recordPerformanceResult (__tests__/performance/response-times.test.ts:470:3)
      at Object.recordPerformanceResult (__tests__/performance/response-times.test.ts:351:9)

  ‚óè T031: Response Time Baselines ‚Ä∫ Performance Monitoring ‚Ä∫ should capture authentication timing metrics

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      377 |
      378 |       // Should have recorded at least one measurement
    > 379 |       expect(metrics.length).toBeGreaterThan(0)
          |                              ^
      380 |
      381 |       // Each metric should have timestamp and duration
      382 |       metrics.forEach((metric) => {

      at Object.toBeGreaterThan (__tests__/performance/response-times.test.ts:379:30)

  ‚óè T031: Response Time Baselines ‚Ä∫ Performance Monitoring ‚Ä∫ should calculate performance percentiles correctly

    expect(received).toBeCloseTo(expected, precision)

    Expected: 545
    Received: 550

    Expected precision:    0
    Expected difference: < 0.5
    Received difference:   5

      396 |
      397 |       expect(p50).toBeCloseTo(300, 0) // Median
    > 398 |       expect(p95).toBeCloseTo(545, 0) // 95th percentile
          |                   ^
      399 |       expect(p99).toBeCloseTo(549, 0) // 99th percentile
      400 |     })
      401 |

      at Object.toBeCloseTo (__tests__/performance/response-times.test.ts:398:19)

  ‚óè T031: Response Time Baselines ‚Ä∫ Performance Monitoring ‚Ä∫ should export performance data for analysis

    ReferenceError: performanceResults is not defined

      522 |   const results: Record<string, any> = {}
      523 |
    > 524 |   performanceResults.forEach((measurements, testName) => {
          |   ^
      525 |     const durations = measurements.map((m) => m.duration)
      526 |     results[testName] = {
      527 |       count: durations.length,

      at performanceResults (__tests__/performance/response-times.test.ts:524:3)
      at Object.exportPerformanceResults (__tests__/performance/response-times.test.ts:403:26)

  ‚óè T031: Response Time Baselines ‚Ä∫ Regression Detection ‚Ä∫ should detect >10% slowdown in authentication

    ReferenceError: performanceBaselines is not defined

      494 |   currentDuration: number
      495 | ): boolean | { detected: boolean; baseline: number; current: number; percentChange: number } {
    > 496 |   const baseline = performanceBaselines.get(testName)
          |                    ^
      497 |   if (!baseline) return false
      498 |
      499 |   const regressionThreshold = baseline * (1 + REGRESSION_THRESHOLD_PERCENT / 100)

      at performanceBaselines (__tests__/performance/response-times.test.ts:496:20)
      at Object.detectRegression (__tests__/performance/response-times.test.ts:423:28)

  ‚óè T031: Response Time Baselines ‚Ä∫ Regression Detection ‚Ä∫ should not flag acceptable performance variations

    ReferenceError: performanceBaselines is not defined

      494 |   currentDuration: number
      495 | ): boolean | { detected: boolean; baseline: number; current: number; percentChange: number } {
    > 496 |   const baseline = performanceBaselines.get(testName)
          |                    ^
      497 |   if (!baseline) return false
      498 |
      499 |   const regressionThreshold = baseline * (1 + REGRESSION_THRESHOLD_PERCENT / 100)

      at performanceBaselines (__tests__/performance/response-times.test.ts:496:20)
      at Object.detectRegression (__tests__/performance/response-times.test.ts:440:28)

  ‚óè T031: Response Time Baselines ‚Ä∫ Regression Detection ‚Ä∫ should alert on p95 latency regression

    expect(received).toBeLessThan(expected)

    Expected: < 550
    Received:   600

      455 |
      456 |       // P95 should be monitored for regressions
    > 457 |       expect(p95).toBeLessThan(regressionThreshold)
          |                   ^
      458 |     })
      459 |   })
      460 | })

      at Object.toBeLessThan (__tests__/performance/response-times.test.ts:457:19)

PASS __tests__/performance/color-optimization.test.ts
PASS __tests__/integration/performance-regression.test.ts
FAIL tests/integration/auth-signin-errors.test.ts
  ‚óè Test suite failed to run

    ReferenceError: Request is not defined

      23 |     get: jest.fn(),
      24 |     set: jest.fn(),
    > 25 |     delete: jest.fn(),
         |                 ^
      26 |   })),
      27 | }));
      28 |

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:15:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/integration/auth-signin-errors.test.ts:25:17)

PASS __tests__/integration/volume-constraint-conflicts.test.ts
FAIL __tests__/unit/rate-limit.test.ts
  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ checkLocalLockout ‚Ä∫ should return locked when lockout is active

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      374 |       const status = checkLocalLockout('user@example.com')
      375 |
    > 376 |       expect(status.isLocked).toBe(true)
          |                               ^
      377 |       expect(status.minutesRemaining).toBeGreaterThan(9)
      378 |       expect(status.minutesRemaining).toBeLessThanOrEqual(10)
      379 |     })

      at Object.toBe (__tests__/unit/rate-limit.test.ts:376:31)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ checkLocalLockout ‚Ä∫ should normalize email to lowercase for storage key

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has type:  function
    Received has value: [Function getItem]

      426 |       checkLocalLockout('User@EXAMPLE.COM')
      427 |
    > 428 |       expect(global.window.localStorage.getItem).toHaveBeenCalledWith(
          |                                                  ^
      429 |         'auth_lockout_user@example.com'
      430 |       )
      431 |     })

      at Object.toHaveBeenCalledWith (__tests__/unit/rate-limit.test.ts:428:50)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ checkLocalLockout ‚Ä∫ should calculate minutes remaining accurately

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      457 |       const status = checkLocalLockout('user@example.com')
      458 |
    > 459 |       expect(status.isLocked).toBe(true)
          |                               ^
      460 |       expect(status.minutesRemaining).toBe(8) // Ceiling of 7.5
      461 |     })
      462 |   })

      at Object.toBe (__tests__/unit/rate-limit.test.ts:459:31)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ updateLocalLockout ‚Ä∫ should create new lockout record for first failure

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "auth_lockout_user@example.com", StringContaining "\"failedAttempts\":1"

    Number of calls: 0

      468 |       updateLocalLockout('user@example.com')
      469 |
    > 470 |       expect(global.window.localStorage.setItem).toHaveBeenCalledWith(
          |                                                  ^
      471 |         'auth_lockout_user@example.com',
      472 |         expect.stringContaining('"failedAttempts":1')
      473 |       )

      at Object.toHaveBeenCalledWith (__tests__/unit/rate-limit.test.ts:470:50)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ updateLocalLockout ‚Ä∫ should increment failed attempts on existing record

    TypeError: Cannot read properties of undefined (reading '1')

      488 |
      489 |       const setItemCall = (mockSetItem).mock.calls[0]
    > 490 |       const savedData = JSON.parse(setItemCall[1])
          |                                               ^
      491 |
      492 |       expect(savedData.failedAttempts).toBe(3)
      493 |     })

      at Object.<anonymous> (__tests__/unit/rate-limit.test.ts:490:47)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ updateLocalLockout ‚Ä∫ should set lockout after 5 failed attempts

    TypeError: Cannot read properties of undefined (reading '1')

      508 |
      509 |       const setItemCall = (mockSetItem).mock.calls[0]
    > 510 |       const savedData = JSON.parse(setItemCall[1])
          |                                               ^
      511 |
      512 |       expect(savedData.failedAttempts).toBe(5)
      513 |       expect(savedData.lockoutUntil).toBeGreaterThan(beforeUpdate)

      at Object.<anonymous> (__tests__/unit/rate-limit.test.ts:510:47)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ updateLocalLockout ‚Ä∫ should not remove lockout on additional failed attempts

    TypeError: Cannot read properties of undefined (reading '1')

      529 |
      530 |       const setItemCall = (mockSetItem).mock.calls[0]
    > 531 |       const savedData = JSON.parse(setItemCall[1])
          |                                               ^
      532 |
      533 |       expect(savedData.failedAttempts).toBe(6)
      534 |       expect(savedData.lockoutUntil).toBeTruthy()

      at Object.<anonymous> (__tests__/unit/rate-limit.test.ts:531:47)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ updateLocalLockout ‚Ä∫ should handle corrupted existing data

    TypeError: Cannot read properties of undefined (reading '1')

      543 |
      544 |       const setItemCall = (mockSetItem).mock.calls[0]
    > 545 |       const savedData = JSON.parse(setItemCall[1])
          |                                               ^
      546 |
      547 |       // Should start fresh
      548 |       expect(savedData.failedAttempts).toBe(1)

      at Object.<anonymous> (__tests__/unit/rate-limit.test.ts:545:47)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ updateLocalLockout ‚Ä∫ should update lastAttempt timestamp

    TypeError: Cannot read properties of undefined (reading '1')

      556 |
      557 |       const setItemCall = (mockSetItem).mock.calls[0]
    > 558 |       const savedData = JSON.parse(setItemCall[1])
          |                                               ^
      559 |
      560 |       expect(savedData.lastAttempt).toBeGreaterThanOrEqual(beforeUpdate)
      561 |     })

      at Object.<anonymous> (__tests__/unit/rate-limit.test.ts:558:47)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ updateLocalLockout ‚Ä∫ should normalize email to lowercase

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "auth_lockout_user@example.com", Any<String>

    Number of calls: 0

      564 |       updateLocalLockout('User@EXAMPLE.COM')
      565 |
    > 566 |       expect(global.window.localStorage.setItem).toHaveBeenCalledWith(
          |                                                  ^
      567 |         'auth_lockout_user@example.com',
      568 |         expect.any(String)
      569 |       )

      at Object.toHaveBeenCalledWith (__tests__/unit/rate-limit.test.ts:566:50)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ clearLocalLockout ‚Ä∫ should remove lockout data from localStorage

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "auth_lockout_user@example.com"

    Number of calls: 0

      587 |       clearLocalLockout('user@example.com')
      588 |
    > 589 |       expect(mockRemoveItem).toHaveBeenCalledWith(
          |                              ^
      590 |         'auth_lockout_user@example.com'
      591 |       )
      592 |     })

      at Object.toHaveBeenCalledWith (__tests__/unit/rate-limit.test.ts:589:30)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ clearLocalLockout ‚Ä∫ should normalize email to lowercase

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "auth_lockout_user@example.com"

    Number of calls: 0

      595 |       clearLocalLockout('User@EXAMPLE.COM')
      596 |
    > 597 |       expect(mockRemoveItem).toHaveBeenCalledWith(
          |                              ^
      598 |         'auth_lockout_user@example.com'
      599 |       )
      600 |     })

      at Object.toHaveBeenCalledWith (__tests__/unit/rate-limit.test.ts:597:30)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ clearLocalLockout ‚Ä∫ should clear data even if it does not exist

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      615 |       clearLocalLockout('nonexistent@example.com')
      616 |
    > 617 |       expect(mockRemoveItem).toHaveBeenCalled()
          |                              ^
      618 |     })
      619 |   })
      620 |

      at Object.toHaveBeenCalled (__tests__/unit/rate-limit.test.ts:617:30)

  ‚óè Client-Side Lockout (localStorage) ‚Ä∫ Integration Flow ‚Ä∫ should enforce full lockout workflow

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "auth_lockout_user@example.com"

    Number of calls: 0

      642 |       clearLocalLockout('user@example.com')
      643 |
    > 644 |       expect(mockRemoveItem).toHaveBeenCalledWith(
          |                              ^
      645 |         'auth_lockout_user@example.com'
      646 |       )
      647 |     })

      at Object.toHaveBeenCalledWith (__tests__/unit/rate-limit.test.ts:644:30)

PASS __tests__/unit/color-conversions.test.ts
FAIL src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts
  ‚óè KubelkaMunkCalculator ‚Ä∫ Basic Kubelka-Munk Theory ‚Ä∫ should calculate K/S values for single pigment

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Basic Kubelka-Munk Theory ‚Ä∫ should calculate reflectance from K/S values

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Basic Kubelka-Munk Theory ‚Ä∫ should maintain K/S to reflectance round-trip consistency

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Color Mixture Calculations ‚Ä∫ should mix two colors according to volume ratios

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Color Mixture Calculations ‚Ä∫ should handle complex multi-component mixtures

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Color Mixture Calculations ‚Ä∫ should handle asymmetric volume ratios correctly

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Enhanced Features ‚Ä∫ should apply finish-specific corrections

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Enhanced Features ‚Ä∫ should model substrate interactions

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Enhanced Features ‚Ä∫ should calculate scattering and absorption coefficients

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Integration with LAB Color Space ‚Ä∫ should convert mixture result to accurate LAB values

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Integration with LAB Color Space ‚Ä∫ should handle edge case color conversions

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Performance and Numerical Stability ‚Ä∫ should handle extreme reflectance values

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Performance and Numerical Stability ‚Ä∫ should maintain numerical precision with small volume ratios

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè KubelkaMunkCalculator ‚Ä∫ Performance and Numerical Stability ‚Ä∫ should perform efficiently with complex mixtures

    TypeError: _kubelkamunkenhanced.KubelkaMunkCalculator is not a constructor

      18 |
      19 |   beforeEach(() => {
    > 20 |     calculator = new KubelkaMunkCalculator();
         |                  ^
      21 |   });
      22 |
      23 |   describe('Basic Kubelka-Munk Theory', () => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:20:18)

  ‚óè Module-level Functions ‚Ä∫ calculateMixtureColor should produce consistent results

    TypeError: (0 , _kubelkamunkenhanced.calculateMixtureColor) is not a function

      422 |     ];
      423 |
    > 424 |     const result = calculateMixtureColor(paints);
          |                                         ^
      425 |
      426 |     expect(result.L).toBeGreaterThan(paints[1].color.L);
      427 |     expect(result.L).toBeLessThan(paints[0].color.L);

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:424:41)

  ‚óè Module-level Functions ‚Ä∫ calculateReflectanceSpectrum should handle various inputs

    TypeError: (0 , _kubelkamunkenhanced.calculateReflectanceSpectrum) is not a function

      433 |   test('calculateReflectanceSpectrum should handle various inputs', () => {
      434 |     const ksValues = Array.from({ length: 40 }, (_, i) => 2 + Math.sin(i * Math.PI / 20) * 3);
    > 435 |     const reflectance = calculateReflectanceSpectrum(ksValues);
          |                                                     ^
      436 |
      437 |     expect(reflectance).toHaveLength(40);
      438 |     reflectance.forEach(r => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:435:53)

  ‚óè Module-level Functions ‚Ä∫ applyFinishCorrections should modify spectrum appropriately

    TypeError: (0 , _kubelkamunkenhanced.applyFinishCorrections) is not a function

      446 |     const baseSpectrum = new Array(40).fill(0.5);
      447 |
    > 448 |     const matte = applyFinishCorrections(baseSpectrum, 'matte');
          |                                         ^
      449 |     const gloss = applyFinishCorrections(baseSpectrum, 'gloss');
      450 |     const satin = applyFinishCorrections(baseSpectrum, 'satin');
      451 |

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:448:41)

  ‚óè Module-level Functions ‚Ä∫ modelSubstrateInteraction should blend paint and substrate

    TypeError: (0 , _kubelkamunkenhanced.modelSubstrateInteraction) is not a function

      472 |     const opacity = 0.7;
      473 |
    > 474 |     const result = modelSubstrateInteraction(paintSpectrum, substrateSpectrum, opacity);
          |                                             ^
      475 |
      476 |     expect(result).toHaveLength(40);
      477 |     result.forEach((r, i) => {

      at Object.<anonymous> (src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts:474:45)

FAIL tests/components/EmailPasswordForm.test.tsx (53.388 s)
  ‚óè Console

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailPasswordForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at mode (/home/davistroy/dev/paintmixr/src/components/EmailPasswordForm.tsx:54:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

  ‚óè EmailPasswordForm ‚Ä∫ Form Submission ‚Ä∫ calls API with correct data on successful login

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/api/auth/login", {"body": "{\"email\":\"test@example.com\",\"password\":\"password123\"}", "headers": {"Content-Type": "application/json"}, "method": "POST"}

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign In[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      118 |
      119 |       await waitFor(() => {
    > 120 |         expect(global.fetch).toHaveBeenCalledWith('/api/auth/login', {
          |                              ^
      121 |           method: 'POST',
      122 |           headers: { 'Content-Type': 'application/json' },
      123 |           body: JSON.stringify({

      at toHaveBeenCalledWith (tests/components/EmailPasswordForm.test.tsx:120:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Form Submission ‚Ä∫ calls API with correct data on successful signup

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/api/auth/signup", {"body": "{\"email\":\"newuser@example.com\",\"password\":\"SecurePass123!\"}", "headers": {"Content-Type": "application/json"}, "method": "POST"}

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword must be at least 8 characters[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"confirmPassword"[39m
              [36m>[39m
                [0mConfirm Password[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"confirmPassword-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"new-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"confirmPassword"[39m
                [33mname[39m=[32m"confirmPassword"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"confirmPassword-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPlease confirm your password[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign Up[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      158 |
      159 |       await waitFor(() => {
    > 160 |         expect(global.fetch).toHaveBeenCalledWith('/api/auth/signup', {
          |                              ^
      161 |           method: 'POST',
      162 |           headers: { 'Content-Type': 'application/json' },
      163 |           body: JSON.stringify({

      at toHaveBeenCalledWith (tests/components/EmailPasswordForm.test.tsx:160:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Form Submission ‚Ä∫ handles API error responses correctly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Invalid credentials"

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign In[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      196 |
      197 |       await waitFor(() => {
    > 198 |         expect(mockOnError).toHaveBeenCalledWith('Invalid credentials');
          |                             ^
      199 |       });
      200 |
      201 |       expect(mockOnSuccess).not.toHaveBeenCalled();

      at toHaveBeenCalledWith (tests/components/EmailPasswordForm.test.tsx:198:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Form Submission ‚Ä∫ handles network errors correctly

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Network error"

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign In[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      225 |
      226 |       await waitFor(() => {
    > 227 |         expect(mockOnError).toHaveBeenCalledWith(
          |                             ^
      228 |           expect.stringContaining('Network error')
      229 |         );
      230 |       });

      at toHaveBeenCalledWith (tests/components/EmailPasswordForm.test.tsx:227:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Validation ‚Ä∫ displays error for empty email field

    Unable to find an element with the text: /email.*required/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mInvalid email format[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign In[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      274 |       await user.click(submitButton);
      275 |
    > 276 |       const errorMessage = await screen.findByText(/email.*required/i);
          |                                         ^
      277 |       expect(errorMessage).toBeInTheDocument();
      278 |       expect(global.fetch).not.toHaveBeenCalled();
      279 |     });

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.findByText (tests/components/EmailPasswordForm.test.tsx:276:41)

  ‚óè EmailPasswordForm ‚Ä∫ Validation ‚Ä∫ displays error when passwords do not match in signup mode

    Unable to find an element with the text: /passwords.*match/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mInvalid email format[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword must be at least 8 characters[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"confirmPassword"[39m
            [36m>[39m
              [0mConfirm Password[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"confirmPassword-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"new-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"confirmPassword"[39m
              [33mname[39m=[32m"confirmPassword"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"confirmPassword-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPlease confirm your password[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign Up[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      346 |       await user.click(submitButton);
      347 |
    > 348 |       const errorMessage = await screen.findByText(/passwords.*match/i);
          |                                         ^
      349 |       expect(errorMessage).toBeInTheDocument();
      350 |       expect(global.fetch).not.toHaveBeenCalled();
      351 |     });

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.findByText (tests/components/EmailPasswordForm.test.tsx:348:41)

  ‚óè EmailPasswordForm ‚Ä∫ Validation ‚Ä∫ clears validation errors when user corrects input

    expect(element).not.toBeInTheDocument()

    expected document not to contain element, found <p class="mt-1 text-sm text-red-600 dark:text-red-400" id="email-error" role="alert">Invalid email format</p> instead

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign In[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      378 |       // Error should be cleared
      379 |       await waitFor(() => {
    > 380 |         expect(screen.queryByText(/valid email/i)).not.toBeInTheDocument();
          |                                                        ^
      381 |       });
      382 |     });
      383 |   });

      at toBeInTheDocument (tests/components/EmailPasswordForm.test.tsx:380:56)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Account Lockout ‚Ä∫ displays lockout message when account is locked

    Unable to find an element with the text: /account.*locked/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mInvalid email format[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign In[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      410 |       await user.click(submitButton);
      411 |
    > 412 |       const lockoutMessage = await screen.findByText(/account.*locked/i);
          |                                           ^
      413 |       expect(lockoutMessage).toBeInTheDocument();
      414 |       expect(lockoutMessage).toHaveTextContent(/15.*minute/i);
      415 |     });

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.findByText (tests/components/EmailPasswordForm.test.tsx:412:43)

  ‚óè EmailPasswordForm ‚Ä∫ Account Lockout ‚Ä∫ disables form inputs when account is locked

    expect(element).toBeDisabled()

    Received element is not disabled:
      <input aria-describedby="email-error" aria-invalid="true" autocomplete="email" class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500" id="email" name="email" type="email" />

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign In[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      442 |
      443 |       await waitFor(() => {
    > 444 |         expect(emailInput).toBeDisabled();
          |                            ^
      445 |         expect(passwordInput).toBeDisabled();
      446 |         expect(submitButton).toBeDisabled();
      447 |       });

      at toBeDisabled (tests/components/EmailPasswordForm.test.tsx:444:28)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Submit Button State ‚Ä∫ disables submit button during form submission

    expect(element).toBeDisabled()

    Received element is not disabled:
      <button class="w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" type="submit" />

      479 |
      480 |       // Button should be disabled during submission
    > 481 |       expect(submitButton).toBeDisabled();
          |                            ^
      482 |
      483 |       // Resolve the promise
      484 |       resolvePromise!({

      at Object.toBeDisabled (tests/components/EmailPasswordForm.test.tsx:481:28)

  ‚óè EmailPasswordForm ‚Ä∫ Submit Button State ‚Ä∫ shows loading state on submit button during submission

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/signing in|loading/i`

    Here are the accessible roles:

      textbox:

      Name "Email":
      [36m<input[39m
        [33maria-invalid[39m=[32m"false"[39m
        [33mautocomplete[39m=[32m"email"[39m
        [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
        [33mid[39m=[32m"email"[39m
        [33mname[39m=[32m"email"[39m
        [33mtype[39m=[32m"email"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Sign In":
      [36m<button[39m
        [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
        [33mtype[39m=[32m"submit"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-invalid[39m=[32m"false"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-invalid[39m=[32m"false"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign In[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      519 |       // Button should show loading text/state
      520 |       expect(
    > 521 |         screen.getByRole('button', { name: /signing in|loading/i })
          |                ^
      522 |       ).toBeInTheDocument();
      523 |
      524 |       // Resolve the promise

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/EmailPasswordForm.test.tsx:521:16)

  ‚óè EmailPasswordForm ‚Ä∫ Submit Button State ‚Ä∫ re-enables submit button after submission completes

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign In[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      557 |
      558 |       await waitFor(() => {
    > 559 |         expect(mockOnError).toHaveBeenCalled();
          |                             ^
      560 |       });
      561 |
      562 |       // Button should be re-enabled after error

      at toHaveBeenCalled (tests/components/EmailPasswordForm.test.tsx:559:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Accessibility ‚Ä∫ allows form submission via Enter key

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign In[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      682 |
      683 |       await waitFor(() => {
    > 684 |         expect(global.fetch).toHaveBeenCalled();
          |                              ^
      685 |         expect(mockOnSuccess).toHaveBeenCalled();
      686 |       });
      687 |     });

      at toHaveBeenCalled (tests/components/EmailPasswordForm.test.tsx:684:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailPasswordForm ‚Ä∫ Accessibility ‚Ä∫ announces error messages to screen readers

    Unable to find an element with the text: /email.*required/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mInvalid email format[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"mb-4"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign In[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      701 |       await user.click(submitButton);
      702 |
    > 703 |       const errorMessage = await screen.findByText(/email.*required/i);
          |                                         ^
      704 |
      705 |       // Error region should have role="alert" or aria-live="polite"
      706 |       const errorContainer = errorMessage.closest('[role="alert"], [aria-live]');

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.findByText (tests/components/EmailPasswordForm.test.tsx:703:41)

  ‚óè EmailPasswordForm ‚Ä∫ Form Reset ‚Ä∫ clears form fields after successful submission

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mInvalid email format[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword must be at least 8 characters[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"[39m
                [33mfor[39m=[32m"confirmPassword"[39m
              [36m>[39m
                [0mConfirm Password[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"confirmPassword-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33mautocomplete[39m=[32m"new-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"confirmPassword"[39m
                [33mname[39m=[32m"confirmPassword"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600 dark:text-red-400"[39m
                [33mid[39m=[32m"confirmPassword-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPlease confirm your password[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full flex items-center justify-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign Up[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      736 |
      737 |       await waitFor(() => {
    > 738 |         expect(mockOnSuccess).toHaveBeenCalled();
          |                               ^
      739 |       });
      740 |
      741 |       // Form should be cleared

      at toHaveBeenCalled (tests/components/EmailPasswordForm.test.tsx:738:31)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

FAIL __tests__/contract/form-utilities.test.ts (6.201 s)
  ‚óè Form Utilities Contract ‚Ä∫ React Hook Form Integration ‚Ä∫ should show validation errors before submission

    expect(received).toBeDefined()

    Received: undefined

      513 |       })
      514 |
    > 515 |       expect(result.current.formState.errors.email).toBeDefined()
          |                                                     ^
      516 |     })
      517 |
      518 |     it('should normalize email on form submission', async () => {

      at Object.toBeDefined (__tests__/contract/form-utilities.test.ts:515:53)

  ‚óè Form Utilities Contract ‚Ä∫ React Hook Form Integration ‚Ä∫ should validate password strength in signup form

    expect(received).toBeDefined()

    Received: undefined

      551 |       })
      552 |
    > 553 |       expect(result.current.formState.errors.password).toBeDefined()
          |                                                        ^
      554 |     })
      555 |   })
      556 |

      at Object.toBeDefined (__tests__/contract/form-utilities.test.ts:553:56)

FAIL tests/performance/color-performance.test.ts
  ‚óè Test suite failed to run

    ReferenceError: PerformanceObserver is not defined

      246 |
      247 |     // Largest Contentful Paint
    > 248 |     const lcpObserver = new PerformanceObserver((list) => {
          |                         ^
      249 |       const entries = list.getEntries()
      250 |       const lastEntry = entries[entries.length - 1]
      251 |       this.addMetric({

      at PerformanceMonitor.observeWebVitals (src/lib/utils/performance.ts:248:25)
      at Object.observeWebVitals (src/lib/utils/performance.ts:419:22)
      at Object.<anonymous> (tests/performance/color-performance.test.ts:7:22)

PASS __tests__/unit/delta-e.test.ts
FAIL __tests__/integration/placeholder-tests.test.ts (6.317 s)
  ‚óè Console

    console.log
      
      üìÅ Found 42 test files

      at Object.log (__tests__/integration/placeholder-tests.test.ts:163:15)

    console.error
      
      ‚ùå FILES WITH COMMENT-ONLY TESTS:

      226 |
      227 |       if (filesWithCommentOnlyTests.length > 0) {
    > 228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
          |                 ^
      229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
      230 |         console.error('')
      231 |       }

      at Object.error (__tests__/integration/placeholder-tests.test.ts:228:17)

    console.error
        __tests__/unit/validation.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/unit/rate-limit.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/unit/mixing-optimizer.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/unit/metadata-helpers.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/unit/delta-e.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/unit/color-conversions.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/performance/response-times.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/performance/color-optimization.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/lib/auth/session-manager.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/volume-constraint-conflicts.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/test-coverage.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/shared-utilities-usage.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/professional-artist-workflow.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/placeholder-tests.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/performance-regression.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/impossible-color-target.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/component-size.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/integration/commercial-paint-shop.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/validate-accuracy-post.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/type-index.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/supabase-client-patterns.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/strict-mode-compilation.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/rate-limiting.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/form-utilities.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/color-optimize-post.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/color-compare-post.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/build-enforcement.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/auth-performance.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/T011-nextjs15-searchparams.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/T010-admin-clear-lockout.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/T009-rate-limit-status-api.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/T008-lockout-status-api.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/T007-oauth-precedence.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/contract/T006-lockout-race-conditions.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error
        __tests__/accessibility/enhanced-mixing-ui.test.ts

      227 |       if (filesWithCommentOnlyTests.length > 0) {
      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
    > 229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
          |                                                        ^
      230 |         console.error('')
      231 |       }
      232 |

      at error (__tests__/integration/placeholder-tests.test.ts:229:56)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:229:35)

    console.error


      228 |         console.error('\n‚ùå FILES WITH COMMENT-ONLY TESTS:')
      229 |         filesWithCommentOnlyTests.forEach(f => console.error(`  ${f}`))
    > 230 |         console.error('')
          |                 ^
      231 |       }
      232 |
      233 |       // Comment-only tests should be .skip() or .todo()

      at Object.error (__tests__/integration/placeholder-tests.test.ts:230:17)

    console.log
      
      üìã Skipped Test Tracking:

      at Object.log (__tests__/integration/placeholder-tests.test.ts:300:15)

    console.log
        Tests marked with .skip(): 1

      at Object.log (__tests__/integration/placeholder-tests.test.ts:301:15)

    console.log
        Tests marked with .todo(): 0

      at Object.log (__tests__/integration/placeholder-tests.test.ts:302:15)

    console.log
        Total planned tests: 1

      at Object.log (__tests__/integration/placeholder-tests.test.ts:303:15)

    console.log


      at Object.log (__tests__/integration/placeholder-tests.test.ts:304:15)

    console.error
      
      ‚ùå FILES WITH FALSE POSITIVE TESTS:

      342 |
      343 |       if (filesWithFalsePositives.length > 0) {
    > 344 |         console.error('\n‚ùå FILES WITH FALSE POSITIVE TESTS:')
          |                 ^
      345 |         filesWithFalsePositives.forEach(f => {
      346 |           console.error(`  ${f.file}: ${f.pattern}`)
      347 |         })

      at Object.error (__tests__/integration/placeholder-tests.test.ts:344:17)

    console.error
        __tests__/unit/rate-limit.test.ts: expect(true).toBe(true)

      344 |         console.error('\n‚ùå FILES WITH FALSE POSITIVE TESTS:')
      345 |         filesWithFalsePositives.forEach(f => {
    > 346 |           console.error(`  ${f.file}: ${f.pattern}`)
          |                   ^
      347 |         })
      348 |         console.error('')
      349 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:346:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:345:33)

    console.error
        __tests__/integration/placeholder-tests.test.ts: expect(true).toBe(true)

      344 |         console.error('\n‚ùå FILES WITH FALSE POSITIVE TESTS:')
      345 |         filesWithFalsePositives.forEach(f => {
    > 346 |           console.error(`  ${f.file}: ${f.pattern}`)
          |                   ^
      347 |         })
      348 |         console.error('')
      349 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:346:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:345:33)

    console.error
        __tests__/integration/placeholder-tests.test.ts: expect(1).toBe(1)

      344 |         console.error('\n‚ùå FILES WITH FALSE POSITIVE TESTS:')
      345 |         filesWithFalsePositives.forEach(f => {
    > 346 |           console.error(`  ${f.file}: ${f.pattern}`)
          |                   ^
      347 |         })
      348 |         console.error('')
      349 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:346:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:345:33)

    console.error
        __tests__/integration/placeholder-tests.test.ts: expect(undefined).toBeUndefined()

      344 |         console.error('\n‚ùå FILES WITH FALSE POSITIVE TESTS:')
      345 |         filesWithFalsePositives.forEach(f => {
    > 346 |           console.error(`  ${f.file}: ${f.pattern}`)
          |                   ^
      347 |         })
      348 |         console.error('')
      349 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:346:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:345:33)

    console.error


      346 |           console.error(`  ${f.file}: ${f.pattern}`)
      347 |         })
    > 348 |         console.error('')
          |                 ^
      349 |       }
      350 |
      351 |       expect(filesWithFalsePositives).toHaveLength(0)

      at Object.error (__tests__/integration/placeholder-tests.test.ts:348:17)

    console.error
      
      ‚ùå FILES WITH LOW ASSERTION COVERAGE:

      373 |
      374 |       if (filesWithNoAssertions.length > 0) {
    > 375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
          |                 ^
      376 |         filesWithNoAssertions.forEach(f => {
      377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
      378 |         })

      at Object.error (__tests__/integration/placeholder-tests.test.ts:375:17)

    console.error
        __tests__/unit/validation.test.ts: 91.7% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/unit/metadata-helpers.test.ts: 61.5% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/performance/response-times.test.ts: 80.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/performance/color-optimization.test.ts: 90.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/lib/auth/session-manager.test.ts: 94.6% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/test-coverage.test.ts: 57.1% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/shared-utilities-usage.test.ts: 40.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/placeholder-tests.test.ts: 25.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/performance-regression.test.ts: 88.9% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/component-size.test.ts: 45.5% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/commercial-paint-shop.test.ts: 85.7% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/code-duplication.test.ts: 27.3% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/integration/build-performance.test.ts: 81.8% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/type-index.test.ts: 54.5% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/supabase-client-patterns.test.ts: 38.9% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/strict-mode-compilation.test.ts: 55.6% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/rate-limiting.test.ts: 0.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/form-utilities.test.ts: 49.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/data-fetching-hooks.test.ts: 51.3% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/build-enforcement.test.ts: 38.9% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/auth-performance.test.ts: 0.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/api-client-utilities.test.ts: 19.4% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/T010-admin-clear-lockout.test.ts: 0.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/T009-rate-limit-status-api.test.ts: 70.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/T008-lockout-status-api.test.ts: 88.9% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/T007-oauth-precedence.test.ts: 0.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/contract/T006-lockout-race-conditions.test.ts: 0.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error
        __tests__/accessibility/enhanced-mixing-ui.test.ts: 92.0% tests have assertions

      375 |         console.error('\n‚ùå FILES WITH LOW ASSERTION COVERAGE:')
      376 |         filesWithNoAssertions.forEach(f => {
    > 377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
          |                   ^
      378 |         })
      379 |         console.error('')
      380 |       }

      at error (__tests__/integration/placeholder-tests.test.ts:377:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:376:31)

    console.error


      377 |           console.error(`  ${f.file}: ${f.percentage.toFixed(1)}% tests have assertions`)
      378 |         })
    > 379 |         console.error('')
          |                 ^
      380 |       }
      381 |
      382 |       expect(filesWithNoAssertions).toHaveLength(0)

      at Object.error (__tests__/integration/placeholder-tests.test.ts:379:17)

    console.log
      
      üìä Test Assertion Coverage:

      at Object.log (__tests__/integration/placeholder-tests.test.ts:402:15)

    console.log
        Total tests: 804

      at Object.log (__tests__/integration/placeholder-tests.test.ts:403:15)

    console.log
        Tests with assertions: 590

      at Object.log (__tests__/integration/placeholder-tests.test.ts:404:15)

    console.log
        Coverage: 73.4%

      at Object.log (__tests__/integration/placeholder-tests.test.ts:405:15)

    console.log
        Target: 95%

      at Object.log (__tests__/integration/placeholder-tests.test.ts:406:15)

    console.log


      at Object.log (__tests__/integration/placeholder-tests.test.ts:407:15)

    console.log
      
      ‚ö†Ô∏è  Files with Lowest Assertion Coverage:

      at Object.log (__tests__/integration/placeholder-tests.test.ts:431:15)

    console.log
        0.0%: __tests__/contract/rate-limiting.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        0.0%: __tests__/contract/auth-performance.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        0.0%: __tests__/contract/T010-admin-clear-lockout.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        0.0%: __tests__/contract/T007-oauth-precedence.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        0.0%: __tests__/contract/T006-lockout-race-conditions.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        19.4%: __tests__/contract/api-client-utilities.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        25.0%: __tests__/integration/placeholder-tests.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        27.3%: __tests__/integration/code-duplication.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        38.9%: __tests__/contract/supabase-client-patterns.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log
        38.9%: __tests__/contract/build-enforcement.test.ts

      at log (__tests__/integration/placeholder-tests.test.ts:433:17)
          at Array.forEach (<anonymous>)

    console.log


      at Object.log (__tests__/integration/placeholder-tests.test.ts:435:15)

    console.error
      
      ‚ùå PLACEHOLDER TESTS SUMMARY:

      453 |
      454 |       if (Object.keys(allPlaceholders).length > 0) {
    > 455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
          |                 ^
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {

      at Object.error (__tests__/integration/placeholder-tests.test.ts:455:17)

    console.error
      
        __tests__/unit/rate-limit.test.ts:

      455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
    > 457 |           console.error(`\n  ${file}:`)
          |                   ^
      458 |           patterns.forEach(pattern => {
      459 |             console.error(`    - ${pattern}`)
      460 |           })

      at error (__tests__/integration/placeholder-tests.test.ts:457:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 2 tests with expect(true).toBe(true)

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
      
        __tests__/integration/test-coverage.test.ts:

      455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
    > 457 |           console.error(`\n  ${file}:`)
          |                   ^
      458 |           patterns.forEach(pattern => {
      459 |             console.error(`    - ${pattern}`)
      460 |           })

      at error (__tests__/integration/placeholder-tests.test.ts:457:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 1 tests with console.log but no assertions

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
      
        __tests__/integration/shared-utilities-usage.test.ts:

      455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
    > 457 |           console.error(`\n  ${file}:`)
          |                   ^
      458 |           patterns.forEach(pattern => {
      459 |             console.error(`    - ${pattern}`)
      460 |           })

      at error (__tests__/integration/placeholder-tests.test.ts:457:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 7 tests with console.log but no assertions

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
      
        __tests__/integration/placeholder-tests.test.ts:

      455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
    > 457 |           console.error(`\n  ${file}:`)
          |                   ^
      458 |           patterns.forEach(pattern => {
      459 |             console.error(`    - ${pattern}`)
      460 |           })

      at error (__tests__/integration/placeholder-tests.test.ts:457:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 5 tests with expect(true).toBe(true)

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 1 tests with console.log but no assertions

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
      
        __tests__/integration/component-size.test.ts:

      455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
    > 457 |           console.error(`\n  ${file}:`)
          |                   ^
      458 |           patterns.forEach(pattern => {
      459 |             console.error(`    - ${pattern}`)
      460 |           })

      at error (__tests__/integration/placeholder-tests.test.ts:457:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 3 tests with console.log but no assertions

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
      
        __tests__/integration/build-performance.test.ts:

      455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
    > 457 |           console.error(`\n  ${file}:`)
          |                   ^
      458 |           patterns.forEach(pattern => {
      459 |             console.error(`    - ${pattern}`)
      460 |           })

      at error (__tests__/integration/placeholder-tests.test.ts:457:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 1 tests with console.log but no assertions

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
      
        __tests__/contract/build-enforcement.test.ts:

      455 |         console.error('\n‚ùå PLACEHOLDER TESTS SUMMARY:')
      456 |         Object.entries(allPlaceholders).forEach(([file, patterns]) => {
    > 457 |           console.error(`\n  ${file}:`)
          |                   ^
      458 |           patterns.forEach(pattern => {
      459 |             console.error(`    - ${pattern}`)
      460 |           })

      at error (__tests__/integration/placeholder-tests.test.ts:457:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error
          - 1 tests with console.log but no assertions

      457 |           console.error(`\n  ${file}:`)
      458 |           patterns.forEach(pattern => {
    > 459 |             console.error(`    - ${pattern}`)
          |                     ^
      460 |           })
      461 |         })
      462 |         console.error('')

      at error (__tests__/integration/placeholder-tests.test.ts:459:21)
          at Array.forEach (<anonymous>)
      at forEach (__tests__/integration/placeholder-tests.test.ts:458:20)
          at Array.forEach (<anonymous>)
      at Object.forEach (__tests__/integration/placeholder-tests.test.ts:456:41)

    console.error


      460 |           })
      461 |         })
    > 462 |         console.error('')
          |                 ^
      463 |
      464 |         // Store report
      465 |         const reportFile = path.join(projectRoot, '__tests__/tmp/placeholder-report.json')

      at Object.error (__tests__/integration/placeholder-tests.test.ts:462:17)

    console.error
      Report saved to: /home/davistroy/dev/paintmixr/__tests__/tmp/placeholder-report.json

      482 |         )
      483 |
    > 484 |         console.error(`Report saved to: ${reportFile}\n`)
          |                 ^
      485 |       } else {
      486 |         console.log('\n‚úÖ No placeholder tests found\n')
      487 |       }

      at Object.error (__tests__/integration/placeholder-tests.test.ts:484:17)

    console.log
      
      üéØ Test Quality Score:

      at Object.log (__tests__/integration/placeholder-tests.test.ts:515:15)

    console.log
        Total tests: 804

      at Object.log (__tests__/integration/placeholder-tests.test.ts:516:15)

    console.log
        Empty tests: 0

      at Object.log (__tests__/integration/placeholder-tests.test.ts:517:15)

    console.log
        Tests with assertions: 590

      at Object.log (__tests__/integration/placeholder-tests.test.ts:518:15)

    console.log
        Skipped tests: 1

      at Object.log (__tests__/integration/placeholder-tests.test.ts:519:15)

    console.log
        Quality score: 58.7/80

      at Object.log (__tests__/integration/placeholder-tests.test.ts:520:15)

    console.log


      at Object.log (__tests__/integration/placeholder-tests.test.ts:521:15)

    console.log
      Baseline saved to: /home/davistroy/dev/paintmixr/__tests__/tmp/test-quality-baseline.json

      at Object.log (__tests__/integration/placeholder-tests.test.ts:543:15)

  ‚óè Integration: Placeholder Tests Detection ‚Ä∫ Empty Test Detection ‚Ä∫ should not have tests with only comments

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 35
    Received array:  ["__tests__/unit/validation.test.ts", "__tests__/unit/rate-limit.test.ts", "__tests__/unit/mixing-optimizer.test.ts", "__tests__/unit/metadata-helpers.test.ts", "__tests__/unit/delta-e.test.ts", "__tests__/unit/color-conversions.test.ts", "__tests__/performance/response-times.test.ts", "__tests__/performance/color-optimization.test.ts", "__tests__/lib/auth/session-manager.test.ts", "__tests__/integration/volume-constraint-conflicts.test.ts", ‚Ä¶]

      232 |
      233 |       // Comment-only tests should be .skip() or .todo()
    > 234 |       expect(filesWithCommentOnlyTests).toHaveLength(0)
          |                                         ^
      235 |     })
      236 |   })
      237 |

      at Object.toHaveLength (__tests__/integration/placeholder-tests.test.ts:234:41)

  ‚óè Integration: Placeholder Tests Detection ‚Ä∫ False Positive Test Detection ‚Ä∫ should not have tests that always pass

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 4
    Received array:  [{"file": "__tests__/unit/rate-limit.test.ts", "pattern": "expect(true).toBe(true)"}, {"file": "__tests__/integration/placeholder-tests.test.ts", "pattern": "expect(true).toBe(true)"}, {"file": "__tests__/integration/placeholder-tests.test.ts", "pattern": "expect(1).toBe(1)"}, {"file": "__tests__/integration/placeholder-tests.test.ts", "pattern": "expect(undefined).toBeUndefined()"}]

      349 |       }
      350 |
    > 351 |       expect(filesWithFalsePositives).toHaveLength(0)
          |                                       ^
      352 |     })
      353 |
      354 |     it('should not have tests without assertions', () => {

      at Object.toHaveLength (__tests__/integration/placeholder-tests.test.ts:351:39)

  ‚óè Integration: Placeholder Tests Detection ‚Ä∫ False Positive Test Detection ‚Ä∫ should not have tests without assertions

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 28
    Received array:  [{"file": "__tests__/unit/validation.test.ts", "percentage": 91.66666666666666}, {"file": "__tests__/unit/metadata-helpers.test.ts", "percentage": 61.53846153846154}, {"file": "__tests__/performance/response-times.test.ts", "percentage": 80}, {"file": "__tests__/performance/color-optimization.test.ts", "percentage": 90}, {"file": "__tests__/lib/auth/session-manager.test.ts", "percentage": 94.5945945945946}, {"file": "__tests__/integration/test-coverage.test.ts", "percentage": 57.14285714285714}, {"file": "__tests__/integration/shared-utilities-usage.test.ts", "percentage": 40}, {"file": "__tests__/integration/placeholder-tests.test.ts", "percentage": 25}, {"file": "__tests__/integration/performance-regression.test.ts", "percentage": 88.88888888888889}, {"file": "__tests__/integration/component-size.test.ts", "percentage": 45.45454545454545}, ‚Ä¶]

      380 |       }
      381 |
    > 382 |       expect(filesWithNoAssertions).toHaveLength(0)
          |                                     ^
      383 |     })
      384 |   })
      385 |

      at Object.toHaveLength (__tests__/integration/placeholder-tests.test.ts:382:37)

  ‚óè Integration: Placeholder Tests Detection ‚Ä∫ Test Assertion Coverage ‚Ä∫ should have ‚â•95% test assertion coverage

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 95
    Received:    73.38308457711443

      407 |       console.log('')
      408 |
    > 409 |       expect(assertionCoverage).toBeGreaterThanOrEqual(TARGET_ASSERTION_COVERAGE)
          |                                 ^
      410 |     })
      411 |
      412 |     it('should identify files with lowest assertion coverage', () => {

      at Object.toBeGreaterThanOrEqual (__tests__/integration/placeholder-tests.test.ts:409:33)

  ‚óè Integration: Placeholder Tests Detection ‚Ä∫ Placeholder Pattern Summary ‚Ä∫ should generate comprehensive placeholder report

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 7
    Received array:  ["__tests__/unit/rate-limit.test.ts", "__tests__/integration/test-coverage.test.ts", "__tests__/integration/shared-utilities-usage.test.ts", "__tests__/integration/placeholder-tests.test.ts", "__tests__/integration/component-size.test.ts", "__tests__/integration/build-performance.test.ts", "__tests__/contract/build-enforcement.test.ts"]

      487 |       }
      488 |
    > 489 |       expect(Object.keys(allPlaceholders)).toHaveLength(0)
          |                                            ^
      490 |     })
      491 |   })
      492 |

      at Object.toHaveLength (__tests__/integration/placeholder-tests.test.ts:489:44)

  ‚óè Integration: Placeholder Tests Detection ‚Ä∫ Test Quality Metrics ‚Ä∫ should measure overall test quality score

    expect(received).toBeGreaterThan(expected)

    Expected: > 70
    Received:   58.70646766169155

      544 |
      545 |       // Quality score should be at least 70/80
    > 546 |       expect(qualityScore).toBeGreaterThan(70)
          |                            ^
      547 |     })
      548 |   })
      549 | })

      at Object.toBeGreaterThan (__tests__/integration/placeholder-tests.test.ts:546:28)

FAIL tests/components/EmailSigninForm.test.tsx (79.839 s)
  ‚óè Console

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

       97 |       await user.type(emailInput, 'invalid-email')
       98 |       await user.type(passwordInput, 'password123')
    >  99 |       await user.click(submitButton)
          |       ^
      100 |
      101 |       await waitFor(() => {
      102 |         expect(screen.getByText(/invalid email format|please enter a valid email/i)).toBeInTheDocument()

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:99:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      112 |
      113 |       await user.type(passwordInput, 'password123')
    > 114 |       await user.click(submitButton)
          |       ^
      115 |
      116 |       await waitFor(() => {
      117 |         expect(screen.getByText(/email is required/i)).toBeInTheDocument()

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:114:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      127 |
      128 |       await user.type(emailInput, 'user@example.com')
    > 129 |       await user.click(submitButton)
          |       ^
      130 |
      131 |       await waitFor(() => {
      132 |         expect(screen.getByText(/password is required/i)).toBeInTheDocument()

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:129:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      149 |       await user.type(emailInput, 'USER@EXAMPLE.COM')
      150 |       await user.type(passwordInput, 'password123')
    > 151 |       await user.click(submitButton)
          |       ^
      152 |
      153 |       await waitFor(() => {
      154 |         expect(global.fetch).toHaveBeenCalledWith(

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:151:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      185 |       await user.type(emailInput, 'user@example.com')
      186 |       await user.type(passwordInput, 'password123')
    > 187 |       await user.click(submitButton)
          |       ^
      188 |
      189 |       await waitFor(() => {
      190 |         expect(screen.getByText(/account locked/i)).toBeInTheDocument()

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:187:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      207 |       await user.type(emailInput, 'user@example.com')
      208 |       await user.type(passwordInput, 'password123')
    > 209 |       await user.click(submitButton)
          |       ^
      210 |
      211 |       // Form should show lockout and disable button
      212 |       await waitFor(() => {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:209:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      232 |       await user.type(emailInput, 'user@example.com')
      233 |       await user.type(passwordInput, 'wrongpassword')
    > 234 |       await user.click(submitButton)
          |       ^
      235 |
      236 |       await waitFor(() => {
      237 |         expect(rateLimitModule.updateLocalLockout).toHaveBeenCalledWith('user@example.com')

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:234:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      256 |       await user.type(emailInput, 'user@example.com')
      257 |       await user.type(passwordInput, 'correctpassword')
    > 258 |       await user.click(submitButton)
          |       ^
      259 |
      260 |       await waitFor(() => {
      261 |         expect(rateLimitModule.clearLocalLockout).toHaveBeenCalledWith('user@example.com')

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:258:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      285 |       await user.type(emailInput, 'user@example.com')
      286 |       await user.type(passwordInput, 'password123')
    > 287 |       await user.click(submitButton)
          |       ^
      288 |
      289 |       await waitFor(() => {
      290 |         expect(global.fetch).toHaveBeenCalledWith(

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:287:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      325 |       await user.type(emailInput, 'user@example.com')
      326 |       await user.type(passwordInput, 'password123')
    > 327 |       await user.click(submitButton)
          |       ^
      328 |
      329 |       await waitFor(() => {
      330 |         expect(mockPush).toHaveBeenCalledWith('/dashboard')

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:327:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      356 |       await user.type(emailInput, 'user@example.com')
      357 |       await user.type(passwordInput, 'password123')
    > 358 |       await user.click(submitButton)
          |       ^
      359 |
      360 |       await waitFor(() => {
      361 |         expect(mockPush).toHaveBeenCalledWith('/custom-page')

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:358:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      386 |       await user.type(emailInput, 'user@example.com')
      387 |       await user.type(passwordInput, 'wrongpassword')
    > 388 |       await user.click(submitButton)
          |       ^
      389 |
      390 |       await waitFor(() => {
      391 |         expect(screen.getByText(/invalid credentials/i)).toBeInTheDocument()

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:388:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      411 |       await user.type(emailInput, 'user@example.com')
      412 |       await user.type(passwordInput, 'password123')
    > 413 |       await user.click(submitButton)
          |       ^
      414 |
      415 |       await waitFor(() => {
      416 |         expect(screen.getByText(/network error|unexpected error/i)).toBeInTheDocument()

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:413:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      444 |       await user.type(emailInput, 'user@example.com')
      445 |       await user.type(passwordInput, 'password123')
    > 446 |       await user.click(submitButton)
          |       ^
      447 |
      448 |       // Should show loading text
      449 |       await waitFor(() => {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:446:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      478 |       await user.type(emailInput, 'user@example.com')
      479 |       await user.type(passwordInput, 'password123')
    > 480 |       await user.click(submitButton)
          |       ^
      481 |
      482 |       await waitFor(() => {
      483 |         expect(emailInput.disabled).toBe(true)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:480:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      506 |
      507 |       const submitButton = screen.getByRole('button', { name: /sign in with email/i })
    > 508 |       await user.click(submitButton)
          |       ^
      509 |
      510 |       await waitFor(() => {
      511 |         const emailInput = screen.getByLabelText(/email/i)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:508:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      526 |
      527 |       await user.type(emailInput, 'invalid-email')
    > 528 |       await user.click(submitButton)
          |       ^
      529 |
      530 |       await waitFor(() => {
      531 |         expect(emailInput).toHaveAttribute('aria-invalid', 'true')

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:528:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      553 |       await user.type(emailInput, 'user@example.com')
      554 |       await user.type(passwordInput, 'wrongpassword')
    > 555 |       await user.click(submitButton)
          |       ^
      556 |
      557 |       await waitFor(() => {
      558 |         const alert = screen.getByRole('alert')

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at _fields (node_modules/react-hook-form/src/logic/createFormControl.ts:1257:40)
      at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:4213:16)
      at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:4277:31)
      at invokeGuardedCallbackAndCatchFirstError (node_modules/react-dom/cjs/react-dom.development.js:4291:25)
      at executeDispatch (node_modules/react-dom/cjs/react-dom.development.js:9041:3)
      at processDispatchQueueItemsInOrder (node_modules/react-dom/cjs/react-dom.development.js:9073:7)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom.development.js:9086:5)
      at dispatchEventsForPlugins (node_modules/react-dom/cjs/react-dom.development.js:9097:3)
      at node_modules/react-dom/cjs/react-dom.development.js:9288:12
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom.development.js:26179:12)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3991:12)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLFormElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at fireAnEvent (node_modules/jsdom/lib/jsdom/living/helpers/events.js:18:36)
      at HTMLFormElementImpl.requestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:109:10)
      at HTMLFormElementImpl._doRequestSubmit (node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js:79:10)
      at HTMLButtonElementImpl._activationBehavior (node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js:23:14)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:252:26)
      at HTMLButtonElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLButtonElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:43
      at Object.eventWrapper (node_modules/@testing-library/dom/dist/config.js:25:23)
      at Object.wrapEvent (node_modules/@testing-library/user-event/dist/cjs/event/wrapEvent.js:6:28)
      at Object.dispatchEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:45:22)
      at Object.dispatchUIEvent (node_modules/@testing-library/user-event/dist/cjs/event/dispatchEvent.js:22:26)
      at Mouse.up (node_modules/@testing-library/user-event/dist/cjs/system/pointer/mouse.js:100:30)
      at PointerHost.release (node_modules/@testing-library/user-event/dist/cjs/system/pointer/index.js:87:24)
      at pointerAction (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:54:47)
      at Object.pointer (node_modules/@testing-library/user-event/dist/cjs/pointer/index.js:27:9)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:555:7)

    console.error
      Warning: An update to EmailSigninForm inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at redirectTo (/home/davistroy/dev/paintmixr/src/components/auth/EmailSigninForm.tsx:35:3)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at Object.control [as callback] (node_modules/react-hook-form/src/useForm.ts:113:7)
      at Object.name (node_modules/react-hook-form/src/logic/createFormControl.ts:1067:58)
      at Object.next (node_modules/react-hook-form/src/utils/extractFormValues.ts:3:15)
      at errors (node_modules/react-hook-form/src/logic/createFormControl.ts:1290:9)

  ‚óè EmailSigninForm Component ‚Ä∫ Form Validation ‚Ä∫ should show error for invalid email format

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      86 |
      87 |   describe('Form Validation', () => {
    > 88 |     it('should show error for invalid email format', async () => {
         |     ^
      89 |       const user = userEvent.setup()
      90 |       render(<EmailSigninForm />)
      91 |

      at it (tests/components/EmailSigninForm.test.tsx:88:5)
      at describe (tests/components/EmailSigninForm.test.tsx:87:3)
      at Object.describe (tests/components/EmailSigninForm.test.tsx:32:1)

  ‚óè EmailSigninForm Component ‚Ä∫ Form Validation ‚Ä∫ should normalize email to lowercase

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/api/auth/email-signin", ObjectContaining {"body": StringContaining "user@example.com"}

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mclass[39m=[32m"space-y-4 "[39m
            [33mdata-testid[39m=[32m"email-signin-form"[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33maria-label[39m=[32m"Email address"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mEmail is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33maria-label[39m=[32m"Password"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign in with Email[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      152 |
      153 |       await waitFor(() => {
    > 154 |         expect(global.fetch).toHaveBeenCalledWith(
          |                              ^
      155 |           '/api/auth/email-signin',
      156 |           expect.objectContaining({
      157 |             body: expect.stringContaining('user@example.com')

      at toHaveBeenCalledWith (tests/components/EmailSigninForm.test.tsx:154:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailSigninForm Component ‚Ä∫ Lockout Functionality ‚Ä∫ should display lockout message when user is locked out

    Unable to find an element with the text: /account locked/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mclass[39m=[32m"space-y-4 "[39m
          [33mdata-testid[39m=[32m"email-signin-form"[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Email address"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mEmail is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Password"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign in with Email[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      187 |       await user.click(submitButton)
      188 |
    > 189 |       await waitFor(() => {
          |                    ^
      190 |         expect(screen.getByText(/account locked/i)).toBeInTheDocument()
      191 |       }, { timeout: 3000 })
      192 |     })

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:189:20)

  ‚óè EmailSigninForm Component ‚Ä∫ Lockout Functionality ‚Ä∫ should disable submit button when locked out

    Unable to find an element with the text: /account locked/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mclass[39m=[32m"space-y-4 "[39m
          [33mdata-testid[39m=[32m"email-signin-form"[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Email address"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mEmail is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Password"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign in with Email[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      210 |
      211 |       // Form should show lockout and disable button
    > 212 |       await waitFor(() => {
          |                    ^
      213 |         expect(screen.getByText(/account locked/i)).toBeInTheDocument()
      214 |       }, { timeout: 3000 })
      215 |     })

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:212:20)

  ‚óè EmailSigninForm Component ‚Ä∫ Lockout Functionality ‚Ä∫ should update local lockout after failed signin

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      215 |     })
      216 |
    > 217 |     it('should update local lockout after failed signin', async () => {
          |     ^
      218 |       const user = userEvent.setup()
      219 |       ;(rateLimitModule.checkLocalLockout as jest.Mock).mockReturnValue({ isLocked: false, minutesRemaining: 0 })
      220 |

      at it (tests/components/EmailSigninForm.test.tsx:217:5)
      at describe (tests/components/EmailSigninForm.test.tsx:164:3)
      at Object.describe (tests/components/EmailSigninForm.test.tsx:32:1)

  ‚óè EmailSigninForm Component ‚Ä∫ Lockout Functionality ‚Ä∫ should clear local lockout after successful signin

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      239 |     })
      240 |
    > 241 |     it('should clear local lockout after successful signin', async () => {
          |     ^
      242 |       const user = userEvent.setup()
      243 |       ;(rateLimitModule.checkLocalLockout as jest.Mock).mockReturnValue({ isLocked: false, minutesRemaining: 0 })
      244 |

      at it (tests/components/EmailSigninForm.test.tsx:241:5)
      at describe (tests/components/EmailSigninForm.test.tsx:164:3)
      at Object.describe (tests/components/EmailSigninForm.test.tsx:32:1)

  ‚óè EmailSigninForm Component ‚Ä∫ API Integration ‚Ä∫ should call /api/auth/email-signin on submit

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      265 |
      266 |   describe('API Integration', () => {
    > 267 |     it('should call /api/auth/email-signin on submit', async () => {
          |     ^
      268 |       const user = userEvent.setup()
      269 |       ;(rateLimitModule.checkLocalLockout as jest.Mock)
      270 |         .mockReturnValue({ isLocked: false, minutesRemaining: 0 })

      at it (tests/components/EmailSigninForm.test.tsx:267:5)
      at describe (tests/components/EmailSigninForm.test.tsx:266:3)
      at Object.describe (tests/components/EmailSigninForm.test.tsx:32:1)

  ‚óè EmailSigninForm Component ‚Ä∫ API Integration ‚Ä∫ should redirect on successful signin

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      305 |     })
      306 |
    > 307 |     it('should redirect on successful signin', async () => {
          |     ^
      308 |       const user = userEvent.setup()
      309 |       ;(rateLimitModule.checkLocalLockout as jest.Mock)
      310 |         .mockReturnValue({ isLocked: false, minutesRemaining: 0 })

      at it (tests/components/EmailSigninForm.test.tsx:307:5)
      at describe (tests/components/EmailSigninForm.test.tsx:266:3)
      at Object.describe (tests/components/EmailSigninForm.test.tsx:32:1)

  ‚óè EmailSigninForm Component ‚Ä∫ API Integration ‚Ä∫ should use custom redirectTo prop

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/custom-page"

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mclass[39m=[32m"space-y-4 "[39m
            [33mdata-testid[39m=[32m"email-signin-form"[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33maria-label[39m=[32m"Email address"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mEmail is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33maria-label[39m=[32m"Password"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign in with Email[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      359 |
      360 |       await waitFor(() => {
    > 361 |         expect(mockPush).toHaveBeenCalledWith('/custom-page')
          |                          ^
      362 |       }, { timeout: 3000 })
      363 |
      364 |

      at toHaveBeenCalledWith (tests/components/EmailSigninForm.test.tsx:361:26)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailSigninForm Component ‚Ä∫ API Integration ‚Ä∫ should display error message on failed signin

    Unable to find an element with the text: /invalid credentials/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mclass[39m=[32m"space-y-4 "[39m
          [33mdata-testid[39m=[32m"email-signin-form"[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Email address"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mEmail is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Password"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign in with Email[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      388 |       await user.click(submitButton)
      389 |
    > 390 |       await waitFor(() => {
          |                    ^
      391 |         expect(screen.getByText(/invalid credentials/i)).toBeInTheDocument()
      392 |       }, { timeout: 3000 })
      393 |

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:390:20)

  ‚óè EmailSigninForm Component ‚Ä∫ API Integration ‚Ä∫ should handle network errors gracefully

    Unable to find an element with the text: /network error|unexpected error/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mclass[39m=[32m"space-y-4 "[39m
          [33mdata-testid[39m=[32m"email-signin-form"[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Email address"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mEmail is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Password"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign in with Email[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      413 |       await user.click(submitButton)
      414 |
    > 415 |       await waitFor(() => {
          |                    ^
      416 |         expect(screen.getByText(/network error|unexpected error/i)).toBeInTheDocument()
      417 |       }, { timeout: 3000 })
      418 |

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:415:20)

  ‚óè EmailSigninForm Component ‚Ä∫ Loading States ‚Ä∫ should show loading state during submission

    Unable to find an element with the text: /signing in/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mclass[39m=[32m"space-y-4 "[39m
          [33mdata-testid[39m=[32m"email-signin-form"[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Email address"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mEmail is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Password"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign in with Email[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      447 |
      448 |       // Should show loading text
    > 449 |       await waitFor(() => {
          |                    ^
      450 |         expect(screen.getByText(/signing in/i)).toBeInTheDocument()
      451 |         expect(submitButton).toBeDisabled()
      452 |       }, { timeout: 3000 })

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:449:20)

  ‚óè EmailSigninForm Component ‚Ä∫ Loading States ‚Ä∫ should disable inputs during submission

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<form[39m
            [33mclass[39m=[32m"space-y-4 "[39m
            [33mdata-testid[39m=[32m"email-signin-form"[39m
            [33mnovalidate[39m=[32m""[39m
          [36m>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
                [33mfor[39m=[32m"email"[39m
              [36m>[39m
                [0mEmail[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"email-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33maria-label[39m=[32m"Email address"[39m
                [33mautocomplete[39m=[32m"email"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"email"[39m
                [33mname[39m=[32m"email"[39m
                [33mtype[39m=[32m"email"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
                [33mid[39m=[32m"email-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mEmail is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
                [33mfor[39m=[32m"password"[39m
              [36m>[39m
                [0mPassword[0m
              [36m</label>[39m
              [36m<input[39m
                [33maria-describedby[39m=[32m"password-error"[39m
                [33maria-invalid[39m=[32m"true"[39m
                [33maria-label[39m=[32m"Password"[39m
                [33mautocomplete[39m=[32m"current-password"[39m
                [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
                [33mid[39m=[32m"password"[39m
                [33mname[39m=[32m"password"[39m
                [33mtype[39m=[32m"password"[39m
              [36m/>[39m
              [36m<p[39m
                [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
                [33mid[39m=[32m"password-error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mPassword is required[0m
              [36m</p>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [36m<span>[39m
                [0mSign in with Email[0m
              [36m</span>[39m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      481 |
      482 |       await waitFor(() => {
    > 483 |         expect(emailInput.disabled).toBe(true)
          |                                     ^
      484 |         expect(passwordInput.disabled).toBe(true)
      485 |       }, { timeout: 3000 })
      486 |

      at toBe (tests/components/EmailSigninForm.test.tsx:483:37)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)

  ‚óè EmailSigninForm Component ‚Ä∫ Accessibility ‚Ä∫ should announce errors with role="alert"

    Found multiple elements with the role "alert"

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<p[39m
      [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
      [33mid[39m=[32m"email-error"[39m
      [33mrole[39m=[32m"alert"[39m
    [36m>[39m
      [0mEmail is required[0m
    [36m</p>[39m

    Ignored nodes: comments, script, style
    [36m<p[39m
      [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
      [33mid[39m=[32m"password-error"[39m
      [33mrole[39m=[32m"alert"[39m
    [36m>[39m
      [0mPassword is required[0m
    [36m</p>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<form[39m
          [33mclass[39m=[32m"space-y-4 "[39m
          [33mdata-testid[39m=[32m"email-signin-form"[39m
          [33mnovalidate[39m=[32m""[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"email"[39m
            [36m>[39m
              [0mEmail[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"email-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Email address"[39m
              [33mautocomplete[39m=[32m"email"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"email"[39m
              [33mname[39m=[32m"email"[39m
              [33mtype[39m=[32m"email"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"email-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mEmail is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"[39m
              [33mfor[39m=[32m"password"[39m
            [36m>[39m
              [0mPassword[0m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"password-error"[39m
              [33maria-invalid[39m=[32m"true"[39m
              [33maria-label[39m=[32m"Password"[39m
              [33mautocomplete[39m=[32m"current-password"[39m
              [33mclass[39m=[32m"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white disabled:opacity-50 disabled:cursor-not-allowed aria-[invalid=true]:border-red-500"[39m
              [33mid[39m=[32m"password"[39m
              [33mname[39m=[32m"password"[39m
              [33mtype[39m=[32m"password"[39m
            [36m/>[39m
            [36m<p[39m
              [33mclass[39m=[32m"mt-1 text-sm text-red-600"[39m
              [33mid[39m=[32m"password-error"[39m
              [33mrole[39m=[32m"alert"[39m
            [36m>[39m
              [0mPassword is required[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center gap-2"[39m
            [33mtype[39m=[32m"submit"[39m
          [36m>[39m
            [36m<span>[39m
              [0mSign in with Email[0m
            [36m</span>[39m
          [36m</button>[39m
        [36m</form>[39m
      [36m</div>[39m
    [36m</body>[39m

      555 |       await user.click(submitButton)
      556 |
    > 557 |       await waitFor(() => {
          |                    ^
      558 |         const alert = screen.getByRole('alert')
      559 |         expect(alert).toHaveTextContent(/invalid credentials/i)
      560 |       }, { timeout: 3000 })

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/EmailSigninForm.test.tsx:557:20)

PASS __tests__/contract/api-client-utilities.test.ts
PASS __tests__/integration/impossible-color-target.test.ts
FAIL __tests__/unit/kubelka-munk.test.ts
  ‚óè Kubelka-Munk Color Theory ‚Ä∫ Reflectance to K/S Conversion ‚Ä∫ should convert low reflectance to high K/S ratio

    expect(received).toBeGreaterThan(expected)

    Expected: > 10
    Received:   7.031249999999998

      35 |       const ks = reflectanceToKS(reflectance)
      36 |
    > 37 |       expect(ks).toBeGreaterThan(10) // High K/S for low reflectance
         |                  ^
      38 |     })
      39 |
      40 |     it('should convert 50% reflectance to moderate K/S', () => {

      at Object.toBeGreaterThan (__tests__/unit/kubelka-munk.test.ts:37:18)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ K/S to Reflectance Conversion ‚Ä∫ should convert high K/S to low reflectance

    expect(received).toBeLessThan(expected)

    Expected: < 0.3
    Received:   0.6964213446238355

      91 |
      92 |       expect(reflectance).toBeGreaterThan(0)
    > 93 |       expect(reflectance).toBeLessThan(0.3)
         |                           ^
      94 |     })
      95 |
      96 |     it('should handle surface reflection correction', () => {

      at Object.toBeLessThan (__tests__/unit/kubelka-munk.test.ts:93:27)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ K/S to Reflectance Conversion ‚Ä∫ should handle surface reflection correction

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not 0.999

       99 |       const rGloss = ksToReflectance(ks, KUBELKA_MUNK_CONSTANTS.SURFACE_REFLECTION_GLOSS)
      100 |
    > 101 |       expect(rMatte).not.toBe(rGloss)
          |                          ^
      102 |     })
      103 |
      104 |     it('should return valid reflectance in [0.001, 0.999] range', () => {

      at Object.toBe (__tests__/unit/kubelka-munk.test.ts:101:26)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ Reflectance ‚Üî K/S Round-trip Conversion ‚Ä∫ should preserve reflectance in round-trip conversion

    expect(received).toBeCloseTo(expected, precision)

    Expected: 0.1
    Received: 0.6379613280324878

    Expected precision:    3
    Expected difference: < 0.0005
    Received difference:   0.5379613280324879

      130 |         const converted = ksToReflectance(ks)
      131 |
    > 132 |         expect(converted).toBeCloseTo(original, 3)
          |                           ^
      133 |       }
      134 |     })
      135 |

      at Object.toBeCloseTo (__tests__/unit/kubelka-munk.test.ts:132:27)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ Reflectance ‚Üî K/S Round-trip Conversion ‚Ä∫ should preserve K/S in round-trip conversion

    expect(received).toBeCloseTo(expected, precision)

    Expected: 0.5
    Received: 5.4310045185963e-7

    Expected precision:    2
    Expected difference: < 0.005
    Received difference:   0.49999945689954817

      141 |         const converted = reflectanceToKS(r)
      142 |
    > 143 |         expect(converted).toBeCloseTo(original, 2)
          |                           ^
      144 |       }
      145 |     })
      146 |

      at Object.toBeCloseTo (__tests__/unit/kubelka-munk.test.ts:143:27)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ Reflectance ‚Üî K/S Round-trip Conversion ‚Ä∫ should handle round-trip with different surface reflections

    expect(received).toBeCloseTo(expected, precision)

    Expected: 0.6
    Received: 0.999

    Expected precision:    3
    Expected difference: < 0.0005
    Received difference:   0.399

      152 |       const converted = ksToReflectance(ks, surfaceRefl)
      153 |
    > 154 |       expect(converted).toBeCloseTo(reflectance, 3)
          |                         ^
      155 |     })
      156 |   })
      157 |

      at Object.toBeCloseTo (__tests__/unit/kubelka-munk.test.ts:154:25)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ Kubelka-Munk Coefficient Calculation ‚Ä∫ should apply minimum concentration threshold

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      200 |
      201 |       // Should use minimum concentration
    > 202 |       expect(coeffs.pigment_concentration).toBeGreaterThan(0)
          |                                            ^
      203 |     })
      204 |
      205 |     it('should apply minimum thickness threshold', () => {

      at Object.toBeGreaterThan (__tests__/unit/kubelka-munk.test.ts:202:44)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ Kubelka-Munk Coefficient Calculation ‚Ä∫ should apply minimum thickness threshold

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      210 |
      211 |       // Should use minimum thickness
    > 212 |       expect(coeffs.film_thickness).toBeGreaterThan(0)
          |                                     ^
      213 |     })
      214 |
      215 |     it('should store surface reflection in coefficients', () => {

      at Object.toBeGreaterThan (__tests__/unit/kubelka-munk.test.ts:212:37)

  ‚óè Kubelka-Munk Color Theory ‚Ä∫ Required Thickness Calculation ‚Ä∫ should increase thickness for higher target opacity

    expect(received).toBeLessThan(expected)

    Expected: < 10
    Received:   10

      419 |       const thickness3 = calculateRequiredThickness(coeffs, 0.9)
      420 |
    > 421 |       expect(thickness1).toBeLessThan(thickness2)
          |                          ^
      422 |       expect(thickness2).toBeLessThan(thickness3)
      423 |     })
      424 |

      at Object.toBeLessThan (__tests__/unit/kubelka-munk.test.ts:421:26)

FAIL __tests__/unit/validation.test.ts
  ‚óè Email Signin Validation Schema ‚Ä∫ Email Normalization ‚Ä∫ should trim whitespace from email

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      145 |       const result = emailSigninSchema.safeParse(input)
      146 |
    > 147 |       expect(result.success).toBe(true)
          |                              ^
      148 |       if (result.success) {
      149 |         // Verify email is trimmed (may happen before or after validation)
      150 |         const email = result.data.email

      at Object.toBe (__tests__/unit/validation.test.ts:147:30)

  ‚óè Email Signin Validation Schema ‚Ä∫ Email Normalization ‚Ä∫ should trim and lowercase email

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      165 |       const result = emailSigninSchema.safeParse(input)
      166 |
    > 167 |       expect(result.success).toBe(true)
          |                              ^
      168 |       if (result.success) {
      169 |         const email = result.data.email
      170 |         // Should be both trimmed and lowercased

      at Object.toBe (__tests__/unit/validation.test.ts:167:30)

  ‚óè Email Signin Validation Schema ‚Ä∫ Email Normalization ‚Ä∫ should handle mixed case and whitespace

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      184 |       const result = emailSigninSchema.safeParse(input)
      185 |
    > 186 |       expect(result.success).toBe(true)
          |                              ^
      187 |       if (result.success) {
      188 |         const email = result.data.email
      189 |         // Should trim all whitespace including tabs and newlines, and lowercase

      at Object.toBe (__tests__/unit/validation.test.ts:186:30)

PASS __tests__/unit/metadata-helpers.test.ts
grep: Unmatched ( or \(
grep: Unmatched ( or \(
/bin/sh: 1: Syntax error: Unterminated quoted string
FAIL __tests__/integration/shared-utilities-usage.test.ts (5.024 s)
  ‚óè Console

    console.log
      
      üì° Shared API Client Adoption:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:80:15)

    console.log
        Components using apiGet: 1

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:81:15)

    console.log
        Components using apiPost: 4

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:82:15)

    console.log
        Total components: 4

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:83:15)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:84:15)

    console.log
        Files using shared API client:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:87:17)

    console.log
          src/components/dashboard/paint-mixing-dashboard.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:88:42)
          at Set.forEach (<anonymous>)

    console.log
          src/components/auth/EmailSigninForm.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:88:42)
          at Set.forEach (<anonymous>)

    console.log
          src/components/color-input/ImageUpload.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:88:42)
          at Set.forEach (<anonymous>)

    console.log
          src/components/EmailPasswordForm.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:88:42)
          at Set.forEach (<anonymous>)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:89:17)

    console.warn
      ‚ö†Ô∏è  Only 4/10 components use shared API client

      94 |
      95 |       if (allUsage.size < TARGET_COMPONENTS) {
    > 96 |         console.warn(`‚ö†Ô∏è  Only ${allUsage.size}/${TARGET_COMPONENTS} components use shared API client\n`)
         |                 ^
      97 |       }
      98 |
      99 |       expect(allUsage.size).toBeGreaterThanOrEqual(TARGET_COMPONENTS)

      at Object.warn (__tests__/integration/shared-utilities-usage.test.ts:96:17)

    console.log
      
      üîç Raw fetch() Calls Detection:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:108:15)

    console.log
        Components with raw fetch(): 0

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:109:15)

    console.log
      
      üõ°Ô∏è  API Client Error Handling:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:135:15)

    console.log
        Has try/catch: true

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:136:15)

    console.log
        Validates responses: true

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:137:15)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:138:15)

    console.log
      ‚úÖ Found auth validation schemas at src/lib/auth/validation.ts

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:154:19)

    console.log
      
      üìã Shared Validation Schema Adoption:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:174:15)

    console.log
        Components importing schemas: 2

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:175:15)

    console.log
        Components using signin schema: 1

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:176:15)

    console.log
        Components using zodResolver: 2

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:177:15)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:178:15)

    console.log
        Forms with Zod validation:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:181:17)

    console.log
          src/components/auth/EmailSigninForm.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:182:50)
          at Array.forEach (<anonymous>)

    console.log
          src/components/EmailPasswordForm.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:182:50)
          at Array.forEach (<anonymous>)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:183:17)

    console.log
      
      üîç Inline Validation Detection:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:196:15)

    console.log
        Components with inline z.object(): 0

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:197:15)

    console.log
      
      ü™ù Shared Hooks Adoption:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:230:15)

    console.log
        Components using usePagination: 0

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:231:15)

    console.log
        Components using useFilters: 0

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:232:15)

    console.log
        Components using useDebounce: 0

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:233:15)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:234:15)

    console.log
      
      üîç Custom Hook Definitions in Components:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:255:15)

    console.log
        Components defining custom hooks: 1

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:256:15)

    console.log
      
        Files with custom hooks (should be in src/hooks/):

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:259:17)

    console.log
          src/components/auth/AuthProvider.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:260:55)
          at Array.forEach (<anonymous>)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:261:17)

    console.log
      
      üé® Shared UI Components:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:284:15)

    console.log
        Total UI components: 1

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:285:15)

    console.log
      
        Available components:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:288:17)

    console.log
          color-picker

      at log (__tests__/integration/shared-utilities-usage.test.ts:291:19)
          at Array.forEach (<anonymous>)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:293:17)

    console.log
      
      üìä UI Component Usage:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:322:15)

    console.log
        color-picker: 0 imports

      at log (__tests__/integration/shared-utilities-usage.test.ts:326:19)
          at Array.forEach (<anonymous>)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:328:15)

    console.log
      
      üìà Shared Utility Adoption Rates:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:367:15)

    console.log
        Total components: 26

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:368:15)

    console.log
        API client adoption: 15.4%

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:369:15)

    console.log
        Shared hooks adoption: 0.0%

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:370:15)

    console.log
        Shared validation adoption: 7.7%

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:371:15)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:372:15)

    console.log
      Baseline saved to: /home/davistroy/dev/paintmixr/__tests__/tmp/shared-utilities-baseline.json

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:393:15)

    console.log
      
      üîç Components Not Using Shared Utilities:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:420:15)

    console.log
        Total: 21

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:421:15)

    console.log
      
        Review these for refactoring opportunities:

      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:424:17)

    console.log
          src/components/session-manager/SessionCard.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/session-manager/SaveForm.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/paint/paint-library.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/paint/PaintPagination.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/paint/PaintFormModal.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/paint/PaintFilters.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/paint/PaintCard.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/optimization/optimization-results.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/optimization/optimization-controls.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/mixing-calculator/RatioDisplay.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/mixing-calculator/AccuracyIndicator.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/color-input/HexInput.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/color-input/ColorPicker.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/color-display/ColorValue.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/collection/collection-manager.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/collection/CollectionFormModal.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/collection/CollectionFilters.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/collection/CollectionCard.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/auth/SignOutButton.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/auth/SignInButton.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log
          src/components/auth/AuthProvider.tsx

      at log (__tests__/integration/shared-utilities-usage.test.ts:425:51)
          at Array.forEach (<anonymous>)

    console.log


      at Object.log (__tests__/integration/shared-utilities-usage.test.ts:426:17)

  ‚óè Integration: Shared Utilities Usage Contract ‚Ä∫ Shared API Client Adoption ‚Ä∫ should have 10+ components using shared API client

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 10
    Received:    4

       97 |       }
       98 |
    >  99 |       expect(allUsage.size).toBeGreaterThanOrEqual(TARGET_COMPONENTS)
          |                             ^
      100 |     })
      101 |
      102 |     it('should not have duplicate fetch patterns', () => {

      at Object.toBeGreaterThanOrEqual (__tests__/integration/shared-utilities-usage.test.ts:99:29)

  ‚óè Integration: Shared Utilities Usage Contract ‚Ä∫ Shared Hooks Adoption ‚Ä∫ should have components using shared hooks

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      244 |
      245 |       // EXPECTED TO FAIL if hooks not created yet
    > 246 |       expect(totalHookUsage).toBeGreaterThan(0)
          |                              ^
      247 |     })
      248 |
      249 |     it('should not have duplicate hook implementations', () => {

      at Object.toBeGreaterThan (__tests__/integration/shared-utilities-usage.test.ts:246:30)

  ‚óè Integration: Shared Utilities Usage Contract ‚Ä∫ Shared UI Components Adoption ‚Ä∫ should have components using shared UI library

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      330 |       // Most UI components should be used
      331 |       const totalUsage = Object.values(usageByComponent).reduce((sum, count) => sum + count, 0)
    > 332 |       expect(totalUsage).toBeGreaterThan(0)
          |                          ^
      333 |     })
      334 |   })
      335 |

      at Object.toBeGreaterThan (__tests__/integration/shared-utilities-usage.test.ts:332:26)

PASS __tests__/contract/T011-nextjs15-searchparams.test.ts
FAIL tests/performance/regression.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../src/lib/optimization/differential-evolution' from 'tests/performance/regression.test.ts'

      4 | import { KubelkaMunkCalculator } from '../../src/lib/color-science/kubelka-munk-enhanced';
      5 | import { EnhancedOptimizationService } from '../../src/lib/services/enhanced-optimization-integration';
    > 6 | import { PerformanceMonitor } from '../../src/lib/monitoring/performance-metrics';
        |                                ^
      7 | import type { LABColor, Paint, OptimizationRequest } from '../../src/lib/types';
      8 |
      9 | describe('Performance Regression Tests', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/performance/regression.test.ts:6:32)

PASS __tests__/integration/commercial-paint-shop.test.ts
FAIL tests/unit/rate-limit.test.ts
  ‚óè Rate Limiting Logic ‚Ä∫ checkLocalLockout ‚Ä∫ should return locked state when lockout is active

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      78 |       const result = checkLocalLockout(testEmail)
      79 |
    > 80 |       expect(result.isLocked).toBe(true)
         |                               ^
      81 |       expect(result.minutesRemaining).toBeGreaterThan(9)
      82 |       expect(result.minutesRemaining).toBeLessThanOrEqual(10)
      83 |     })

      at Object.toBe (tests/unit/rate-limit.test.ts:80:31)

  ‚óè Rate Limiting Logic ‚Ä∫ checkLocalLockout ‚Ä∫ should return unlocked state and clear data when lockout has expired

    expect(received).toBeUndefined()

    Received: "{\"email\":\"test@example.com\",\"failedAttempts\":5,\"lockoutUntil\":\"2025-10-02T23:47:01.020Z\"}"

       97 |       expect(result.isLocked).toBe(false)
       98 |       expect(result.minutesRemaining).toBe(0)
    >  99 |       expect(localStorageMock[lockoutKey]).toBeUndefined()
          |                                            ^
      100 |     })
      101 |
      102 |     it('should handle invalid JSON data gracefully', () => {

      at Object.toBeUndefined (tests/unit/rate-limit.test.ts:99:44)

  ‚óè Rate Limiting Logic ‚Ä∫ checkLocalLockout ‚Ä∫ should handle invalid JSON data gracefully

    expect(received).toBeUndefined()

    Received: "invalid-json-data"

      110 |       expect(result.isLocked).toBe(false)
      111 |       expect(result.minutesRemaining).toBe(0)
    > 112 |       expect(localStorageMock[lockoutKey]).toBeUndefined()
          |                                            ^
      113 |       expect(consoleErrorSpy).toHaveBeenCalledWith(
      114 |         'Failed to parse lockout state:',
      115 |         expect.any(Error)

      at Object.toBeUndefined (tests/unit/rate-limit.test.ts:112:44)

  ‚óè Rate Limiting Logic ‚Ä∫ checkLocalLockout ‚Ä∫ should normalize email to lowercase for lookups

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      132 |       const result = checkLocalLockout('TEST@EXAMPLE.COM')
      133 |
    > 134 |       expect(result.isLocked).toBe(true)
          |                               ^
      135 |       expect(result.minutesRemaining).toBeGreaterThan(0)
      136 |     })
      137 |   })

      at Object.toBe (tests/unit/rate-limit.test.ts:134:31)

  ‚óè Rate Limiting Logic ‚Ä∫ updateLocalLockout ‚Ä∫ should increment failed attempts without lockout (4 failures)

    SyntaxError: "undefined" is not valid JSON
        at JSON.parse (<anonymous>)

      144 |       }
      145 |
    > 146 |       const data = JSON.parse(localStorageMock[lockoutKey])
          |                         ^
      147 |
      148 |       expect(data.email).toBe(testEmail.toLowerCase())
      149 |       expect(data.failedAttempts).toBe(4)

      at Object.parse (tests/unit/rate-limit.test.ts:146:25)

  ‚óè Rate Limiting Logic ‚Ä∫ updateLocalLockout ‚Ä∫ should set lockout on 5th failed attempt

    SyntaxError: "undefined" is not valid JSON
        at JSON.parse (<anonymous>)

      160 |
      161 |       const afterLockout = new Date()
    > 162 |       const data = JSON.parse(localStorageMock[lockoutKey])
          |                         ^
      163 |
      164 |       expect(data.email).toBe(testEmail.toLowerCase())
      165 |       expect(data.failedAttempts).toBe(5)

      at Object.parse (tests/unit/rate-limit.test.ts:162:25)

  ‚óè Rate Limiting Logic ‚Ä∫ updateLocalLockout ‚Ä∫ should handle invalid JSON data by starting fresh

    SyntaxError: Unexpected token 'i', "invalid-json-data" is not valid JSON
        at JSON.parse (<anonymous>)

      180 |       updateLocalLockout(testEmail)
      181 |
    > 182 |       const data = JSON.parse(localStorageMock[lockoutKey])
          |                         ^
      183 |
      184 |       expect(data.email).toBe(testEmail.toLowerCase())
      185 |       expect(data.failedAttempts).toBe(1)

      at Object.parse (tests/unit/rate-limit.test.ts:182:25)

  ‚óè Rate Limiting Logic ‚Ä∫ updateLocalLockout ‚Ä∫ should increment existing failed attempts count

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 2

      198 |       const data = JSON.parse(localStorageMock[lockoutKey])
      199 |
    > 200 |       expect(data.failedAttempts).toBe(3)
          |                                   ^
      201 |       expect(data.lockoutUntil).toBeNull()
      202 |     })
      203 |

      at Object.toBe (tests/unit/rate-limit.test.ts:200:35)

  ‚óè Rate Limiting Logic ‚Ä∫ updateLocalLockout ‚Ä∫ should normalize email to lowercase

    SyntaxError: "undefined" is not valid JSON
        at JSON.parse (<anonymous>)

      205 |       updateLocalLockout('TEST@EXAMPLE.COM')
      206 |
    > 207 |       const data = JSON.parse(localStorageMock[lockoutKey])
          |                         ^
      208 |
      209 |       expect(data.email).toBe('test@example.com')
      210 |     })

      at Object.parse (tests/unit/rate-limit.test.ts:207:25)

  ‚óè Rate Limiting Logic ‚Ä∫ updateLocalLockout ‚Ä∫ should maintain lockout duration of exactly 15 minutes

    SyntaxError: "undefined" is not valid JSON
        at JSON.parse (<anonymous>)

      218 |       }
      219 |
    > 220 |       const data = JSON.parse(localStorageMock[lockoutKey])
          |                         ^
      221 |       const lockoutTime = new Date(data.lockoutUntil)
      222 |
      223 |       const minutesDiff = (lockoutTime.getTime() - beforeUpdate.getTime()) / 60000

      at Object.parse (tests/unit/rate-limit.test.ts:220:25)

  ‚óè Rate Limiting Logic ‚Ä∫ clearLocalLockout ‚Ä∫ should clear lockout state on successful signin

    expect(received).toBeUndefined()

    Received: "{\"email\":\"test@example.com\",\"failedAttempts\":5,\"lockoutUntil\":\"2025-10-03T00:07:01.234Z\"}"

      238 |       clearLocalLockout(testEmail)
      239 |
    > 240 |       expect(localStorageMock[lockoutKey]).toBeUndefined()
          |                                            ^
      241 |     })
      242 |
      243 |     it('should handle clearing non-existent lockout gracefully', () => {

      at Object.toBeUndefined (tests/unit/rate-limit.test.ts:240:44)

  ‚óè Rate Limiting Logic ‚Ä∫ clearLocalLockout ‚Ä∫ should normalize email to lowercase

    expect(received).toBeUndefined()

    Received: "{\"email\":\"test@example.com\",\"failedAttempts\":3,\"lockoutUntil\":null}"

      256 |       clearLocalLockout('TEST@EXAMPLE.COM')
      257 |
    > 258 |       expect(localStorageMock[lockoutKey]).toBeUndefined()
          |                                            ^
      259 |     })
      260 |
      261 |     it('should clear lockout with active lockout status', () => {

      at Object.toBeUndefined (tests/unit/rate-limit.test.ts:258:44)

  ‚óè Rate Limiting Logic ‚Ä∫ clearLocalLockout ‚Ä∫ should clear lockout with active lockout status

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      271 |       // Verify lockout is active before clearing
      272 |       const beforeClear = checkLocalLockout(testEmail)
    > 273 |       expect(beforeClear.isLocked).toBe(true)
          |                                    ^
      274 |
      275 |       clearLocalLockout(testEmail)
      276 |

      at Object.toBe (tests/unit/rate-limit.test.ts:273:36)

  ‚óè Rate Limiting Logic ‚Ä∫ Integration Scenarios ‚Ä∫ should enforce complete lockout workflow: lockout active ‚Üí blocks attempt

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      332 |
      333 |       const lockoutStatus = checkLocalLockout(testEmail)
    > 334 |       expect(lockoutStatus.isLocked).toBe(true)
          |                                      ^
      335 |       expect(lockoutStatus.minutesRemaining).toBeGreaterThan(0)
      336 |     })
      337 |

      at Object.toBe (tests/unit/rate-limit.test.ts:334:38)

  ‚óè Rate Limiting Logic ‚Ä∫ Integration Scenarios ‚Ä∫ should handle progressive lockout timing correctly

    expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 5
    Received:    15

      407 |       expect(laterCheck.isLocked).toBe(true)
      408 |       expect(laterCheck.minutesRemaining).toBeGreaterThan(4)
    > 409 |       expect(laterCheck.minutesRemaining).toBeLessThanOrEqual(5)
          |                                           ^
      410 |     })
      411 |   })
      412 |

      at Object.toBeLessThanOrEqual (tests/unit/rate-limit.test.ts:409:43)

  ‚óè Rate Limiting Logic ‚Ä∫ Edge Cases ‚Ä∫ should handle missing failedAttempts field

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      421 |
      422 |       const data = JSON.parse(localStorageMock[lockoutKey])
    > 423 |       expect(data.failedAttempts).toBe(1)
          |                                   ^
      424 |     })
      425 |
      426 |     it('should handle undefined window (server-side rendering)', () => {

      at Object.toBe (tests/unit/rate-limit.test.ts:423:35)

  ‚óè Rate Limiting Logic ‚Ä∫ Edge Cases ‚Ä∫ should calculate minutes remaining with ceiling rounding

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      456 |
      457 |       const result = checkLocalLockout(testEmail)
    > 458 |       expect(result.isLocked).toBe(true)
          |                               ^
      459 |       expect(result.minutesRemaining).toBe(2) // Should round up to 2 minutes
      460 |     })
      461 |

      at Object.toBe (tests/unit/rate-limit.test.ts:458:31)

  ‚óè Rate Limiting Logic ‚Ä∫ Edge Cases ‚Ä∫ should handle simultaneous lockout updates

    expect(received).toBe(expected) // Object.is equality

    Expected: 5
    Received: 4

      472 |
      473 |       const data1 = JSON.parse(localStorageMock[lockoutKey])
    > 474 |       expect(data1.failedAttempts).toBe(5)
          |                                    ^
      475 |       expect(data1.lockoutUntil).not.toBeNull()
      476 |
      477 |       // Second update (6th attempt, should maintain lockout)

      at Object.toBe (tests/unit/rate-limit.test.ts:474:36)

FAIL tests/components/color-input.test.tsx
  ‚óè Test suite failed to run

    Cannot find module '../../src/components/ui/image-upload' from 'tests/components/color-input.test.tsx'

       8 | import type { ColorValue } from '@/types/types'
       9 |
    > 10 | // Mock dependencies
         |                     ^
      11 | jest.mock('@/hooks/use-image-processing', () => ({
      12 |   useImageProcessing: () => ({
      13 |     isProcessing: false,

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/components/color-input.test.tsx:10:22)

PASS tests/unit/validation.test.ts
FAIL __tests__/unit/mixing-optimizer.test.ts (5.464 s)
  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should validate volumes within constraints

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      30 |       }
      31 |
    > 32 |       const result = validateVolumeConstraints(volumes, constraints)
         |                                               ^
      33 |
      34 |       expect(result.valid).toBe(true)
      35 |       expect(result.violations).toHaveLength(0)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:32:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should detect volumes below minimum

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      44 |       }
      45 |
    > 46 |       const result = validateVolumeConstraints(volumes, constraints)
         |                                               ^
      47 |
      48 |       expect(result.valid).toBe(false)
      49 |       expect(result.violations).toContain('Volume at index 0 (2ml) is below minimum (5ml)')

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:46:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should detect volumes above maximum

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      58 |       }
      59 |
    > 60 |       const result = validateVolumeConstraints(volumes, constraints)
         |                                               ^
      61 |
      62 |       expect(result.valid).toBe(false)
      63 |       expect(result.violations).toContain('Volume at index 2 (150ml) exceeds maximum (100ml)')

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:60:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should detect total volume exceeding limit

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      72 |       }
      73 |
    > 74 |       const result = validateVolumeConstraints(volumes, constraints)
         |                                               ^
      75 |
      76 |       expect(result.valid).toBe(false)
      77 |       expect(result.violations).toContain('Total volume (120ml) exceeds limit (100ml)')

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:74:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should detect multiple violations simultaneously

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      86 |       }
      87 |
    > 88 |       const result = validateVolumeConstraints(volumes, constraints)
         |                                               ^
      89 |
      90 |       expect(result.valid).toBe(false)
      91 |       expect(result.violations.length).toBeGreaterThanOrEqual(2)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:88:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should handle empty volumes array

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      100 |       }
      101 |
    > 102 |       const result = validateVolumeConstraints(volumes, constraints)
          |                                               ^
      103 |
      104 |       expect(result.valid).toBe(true)
      105 |       expect(result.violations).toHaveLength(0)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:102:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should handle zero minimum volume

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      114 |       }
      115 |
    > 116 |       const result = validateVolumeConstraints(volumes, constraints)
          |                                               ^
      117 |
      118 |       expect(result.valid).toBe(true)
      119 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:116:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Constraint Validation ‚Ä∫ should handle negative volumes as invalid

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      127 |       }
      128 |
    > 129 |       const result = validateVolumeConstraints(volumes, constraints)
          |                                               ^
      130 |
      131 |       expect(result.valid).toBe(false)
      132 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:129:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Normalization ‚Ä∫ should normalize volumes to sum to target total

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      138 |       const targetTotal = 100
      139 |
    > 140 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      141 |
      142 |       const sum = normalized.reduce((a, b) => a + b, 0)
      143 |       expect(sum).toBeCloseTo(targetTotal, 2)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:140:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Normalization ‚Ä∫ should preserve volume ratios after normalization

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      148 |       const targetTotal = 120
      149 |
    > 150 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      151 |
      152 |       expect(normalized[0] / normalized[1]).toBeCloseTo(volumes[0] / volumes[1], 4)
      153 |       expect(normalized[1] / normalized[2]).toBeCloseTo(volumes[1] / volumes[2], 4)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:150:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Normalization ‚Ä∫ should handle zero total volume

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      158 |       const targetTotal = 100
      159 |
    > 160 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      161 |
      162 |       expect(normalized).toEqual([0, 0, 0])
      163 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:160:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Normalization ‚Ä∫ should handle single-element array

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      167 |       const targetTotal = 100
      168 |
    > 169 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      170 |
      171 |       expect(normalized[0]).toBeCloseTo(targetTotal, 2)
      172 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:169:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Normalization ‚Ä∫ should scale up when target is larger

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      176 |       const targetTotal = 120
      177 |
    > 178 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      179 |
      180 |       expect(normalized[0]).toBeGreaterThan(volumes[0])
      181 |       expect(normalized[1]).toBeGreaterThan(volumes[1])

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:178:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Volume Normalization ‚Ä∫ should scale down when target is smaller

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      187 |       const targetTotal = 30
      188 |
    > 189 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      190 |
      191 |       expect(normalized[0]).toBeLessThan(volumes[0])
      192 |       expect(normalized[1]).toBeLessThan(volumes[1])

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:189:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Minimum Volume Application ‚Ä∫ should ensure all volumes meet minimum threshold

    TypeError: (0 , _constraints.applyMinimumVolume) is not a function

      200 |       const minVolume = 5
      201 |
    > 202 |       const adjusted = applyMinimumVolume(volumes, minVolume)
          |                                          ^
      203 |
      204 |       for (const vol of adjusted) {
      205 |         expect(vol).toBeGreaterThanOrEqual(minVolume)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:202:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Minimum Volume Application ‚Ä∫ should preserve ratios while applying minimum

    TypeError: (0 , _constraints.applyMinimumVolume) is not a function

      211 |       const minVolume = 5
      212 |
    > 213 |       const adjusted = applyMinimumVolume(volumes, minVolume)
          |                                          ^
      214 |
      215 |       // Smallest volume should be exactly minVolume
      216 |       expect(Math.min(...adjusted)).toBeCloseTo(minVolume, 2)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:213:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Minimum Volume Application ‚Ä∫ should not modify volumes already above minimum

    TypeError: (0 , _constraints.applyMinimumVolume) is not a function

      225 |       const minVolume = 5
      226 |
    > 227 |       const adjusted = applyMinimumVolume(volumes, minVolume)
          |                                          ^
      228 |
      229 |       expect(adjusted).toEqual(volumes)
      230 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:227:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Minimum Volume Application ‚Ä∫ should handle zero minimum volume

    TypeError: (0 , _constraints.applyMinimumVolume) is not a function

      234 |       const minVolume = 0
      235 |
    > 236 |       const adjusted = applyMinimumVolume(volumes, minVolume)
          |                                          ^
      237 |
      238 |       expect(adjusted).toEqual(volumes)
      239 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:236:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Minimum Volume Application ‚Ä∫ should handle empty array

    TypeError: (0 , _constraints.applyMinimumVolume) is not a function

      243 |       const minVolume = 5
      244 |
    > 245 |       const adjusted = applyMinimumVolume(volumes, minVolume)
          |                                          ^
      246 |
      247 |       expect(adjusted).toEqual([])
      248 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:245:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Minimum Volume Application ‚Ä∫ should handle single-element array

    TypeError: (0 , _constraints.applyMinimumVolume) is not a function

      252 |       const minVolume = 5
      253 |
    > 254 |       const adjusted = applyMinimumVolume(volumes, minVolume)
          |                                          ^
      255 |
      256 |       expect(adjusted[0]).toBeCloseTo(minVolume, 2)
      257 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:254:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Limit Check ‚Ä∫ should return true when total is within limit

    TypeError: (0 , _constraints.isWithinTotalVolumeLimit) is not a function

      263 |       const limit = 100
      264 |
    > 265 |       expect(isWithinTotalVolumeLimit(volumes, limit)).toBe(true)
          |                                      ^
      266 |     })
      267 |
      268 |     it('should return true when total equals limit', () => {

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:265:38)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Limit Check ‚Ä∫ should return true when total equals limit

    TypeError: (0 , _constraints.isWithinTotalVolumeLimit) is not a function

      270 |       const limit = 100
      271 |
    > 272 |       expect(isWithinTotalVolumeLimit(volumes, limit)).toBe(true)
          |                                      ^
      273 |     })
      274 |
      275 |     it('should return false when total exceeds limit', () => {

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:272:38)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Limit Check ‚Ä∫ should return false when total exceeds limit

    TypeError: (0 , _constraints.isWithinTotalVolumeLimit) is not a function

      277 |       const limit = 100
      278 |
    > 279 |       expect(isWithinTotalVolumeLimit(volumes, limit)).toBe(false)
          |                                      ^
      280 |     })
      281 |
      282 |     it('should handle empty array as within limit', () => {

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:279:38)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Limit Check ‚Ä∫ should handle empty array as within limit

    TypeError: (0 , _constraints.isWithinTotalVolumeLimit) is not a function

      284 |       const limit = 100
      285 |
    > 286 |       expect(isWithinTotalVolumeLimit(volumes, limit)).toBe(true)
          |                                      ^
      287 |     })
      288 |
      289 |     it('should handle zero limit', () => {

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:286:38)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Limit Check ‚Ä∫ should handle zero limit

    TypeError: (0 , _constraints.isWithinTotalVolumeLimit) is not a function

      291 |       const limit = 0
      292 |
    > 293 |       expect(isWithinTotalVolumeLimit(volumes, limit)).toBe(false)
          |                                      ^
      294 |     })
      295 |
      296 |     it('should handle floating point volumes accurately', () => {

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:293:38)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Limit Check ‚Ä∫ should handle floating point volumes accurately

    TypeError: (0 , _constraints.isWithinTotalVolumeLimit) is not a function

      298 |       const limit = 100
      299 |
    > 300 |       expect(isWithinTotalVolumeLimit(volumes, limit)).toBe(true)
          |                                      ^
      301 |     })
      302 |   })
      303 |

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:300:38)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Calculation ‚Ä∫ should calculate correct total for multiple volumes

    TypeError: (0 , _constraints.calculateTotalVolume) is not a function

      306 |       const volumes = [10, 20, 30]
      307 |
    > 308 |       const total = calculateTotalVolume(volumes)
          |                                         ^
      309 |
      310 |       expect(total).toBe(60)
      311 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:308:41)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Calculation ‚Ä∫ should return 0 for empty array

    TypeError: (0 , _constraints.calculateTotalVolume) is not a function

      314 |       const volumes: number[] = []
      315 |
    > 316 |       const total = calculateTotalVolume(volumes)
          |                                         ^
      317 |
      318 |       expect(total).toBe(0)
      319 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:316:41)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Calculation ‚Ä∫ should handle single volume

    TypeError: (0 , _constraints.calculateTotalVolume) is not a function

      322 |       const volumes = [50]
      323 |
    > 324 |       const total = calculateTotalVolume(volumes)
          |                                         ^
      325 |
      326 |       expect(total).toBe(50)
      327 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:324:41)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Calculation ‚Ä∫ should handle decimal volumes

    TypeError: (0 , _constraints.calculateTotalVolume) is not a function

      330 |       const volumes = [10.5, 20.3, 30.7]
      331 |
    > 332 |       const total = calculateTotalVolume(volumes)
          |                                         ^
      333 |
      334 |       expect(total).toBeCloseTo(61.5, 2)
      335 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:332:41)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Calculation ‚Ä∫ should handle zero volumes

    TypeError: (0 , _constraints.calculateTotalVolume) is not a function

      338 |       const volumes = [0, 0, 0]
      339 |
    > 340 |       const total = calculateTotalVolume(volumes)
          |                                         ^
      341 |
      342 |       expect(total).toBe(0)
      343 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:340:41)

  ‚óè Paint Mixing Optimization ‚Ä∫ Total Volume Calculation ‚Ä∫ should handle mixed zero and non-zero volumes

    TypeError: (0 , _constraints.calculateTotalVolume) is not a function

      346 |       const volumes = [10, 0, 30]
      347 |
    > 348 |       const total = calculateTotalVolume(volumes)
          |                                         ^
      349 |
      350 |       expect(total).toBe(40)
      351 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:348:41)

  ‚óè Paint Mixing Optimization ‚Ä∫ Constraint Edge Cases ‚Ä∫ should handle very small volumes (milliliter precision)

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      361 |       }
      362 |
    > 363 |       const result = validateVolumeConstraints(volumes, constraints)
          |                                               ^
      364 |
      365 |       expect(result.valid).toBe(true)
      366 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:363:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Constraint Edge Cases ‚Ä∫ should handle very large volumes

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      374 |       }
      375 |
    > 376 |       const result = validateVolumeConstraints(volumes, constraints)
          |                                               ^
      377 |
      378 |       expect(result.valid).toBe(true)
      379 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:376:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Constraint Edge Cases ‚Ä∫ should handle precise fractional volumes

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      387 |       }
      388 |
    > 389 |       const result = validateVolumeConstraints(volumes, constraints)
          |                                               ^
      390 |
      391 |       expect(result.valid).toBe(true)
      392 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:389:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Constraint Edge Cases ‚Ä∫ should handle maximum number of paint colors

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      400 |       }
      401 |
    > 402 |       const result = validateVolumeConstraints(volumes, constraints)
          |                                               ^
      403 |
      404 |       expect(result.valid).toBe(true)
      405 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:402:47)

  ‚óè Paint Mixing Optimization ‚Ä∫ Integration Scenarios ‚Ä∫ should validate, normalize, and apply minimum in sequence

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      416 |
      417 |       // Step 1: Validate
    > 418 |       const validation = validateVolumeConstraints(volumes, constraints)
          |                                                   ^
      419 |       expect(validation.valid).toBe(true)
      420 |
      421 |       // Step 2: Normalize

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:418:51)

  ‚óè Paint Mixing Optimization ‚Ä∫ Integration Scenarios ‚Ä∫ should handle three-color mixing formula

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      438 |       }
      439 |
    > 440 |       const validation = validateVolumeConstraints(volumes, constraints)
          |                                                   ^
      441 |       expect(validation.valid).toBe(true)
      442 |       expect(calculateTotalVolume(volumes)).toBe(100)
      443 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:440:51)

  ‚óè Paint Mixing Optimization ‚Ä∫ Integration Scenarios ‚Ä∫ should handle two-color mixing formula

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      451 |       }
      452 |
    > 453 |       const validation = validateVolumeConstraints(volumes, constraints)
          |                                                   ^
      454 |       expect(validation.valid).toBe(true)
      455 |       expect(calculateTotalVolume(volumes)).toBe(100)
      456 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:453:51)

  ‚óè Paint Mixing Optimization ‚Ä∫ Integration Scenarios ‚Ä∫ should reject formula with insufficient total volume

    TypeError: (0 , _constraints.applyMinimumVolume) is not a function

      466 |       // Total is 30ml, but after applying minimum (10ml each), it would be 30ml
      467 |       // which is still less than required 100ml total
    > 468 |       const adjusted = applyMinimumVolume(volumes, constraints.min_volume)
          |                                          ^
      469 |       const total = calculateTotalVolume(adjusted)
      470 |
      471 |       expect(total).toBeLessThan(constraints.total_volume)

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:468:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Integration Scenarios ‚Ä∫ should handle asymmetric mixing ratios

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      480 |       }
      481 |
    > 482 |       const validation = validateVolumeConstraints(volumes, constraints)
          |                                                   ^
      483 |       expect(validation.valid).toBe(true)
      484 |     })
      485 |   })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:482:51)

  ‚óè Paint Mixing Optimization ‚Ä∫ Precision and Accuracy ‚Ä∫ should maintain milliliter precision in normalization

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      490 |       const targetTotal = 100
      491 |
    > 492 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      493 |
      494 |       // Check that each volume has reasonable decimal precision
      495 |       for (const vol of normalized) {

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:492:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Precision and Accuracy ‚Ä∫ should handle floating point arithmetic correctly

    TypeError: (0 , _constraints.normalizeVolumes) is not a function

      503 |       const targetTotal = 1.0
      504 |
    > 505 |       const normalized = normalizeVolumes(volumes, targetTotal)
          |                                          ^
      506 |
      507 |       expect(calculateTotalVolume(normalized)).toBeCloseTo(targetTotal, 10)
      508 |     })

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:505:42)

  ‚óè Paint Mixing Optimization ‚Ä∫ Precision and Accuracy ‚Ä∫ should produce deterministic results for same inputs

    TypeError: (0 , _constraints.validateVolumeConstraints) is not a function

      516 |       }
      517 |
    > 518 |       const result1 = validateVolumeConstraints(volumes, constraints)
          |                                                ^
      519 |       const result2 = validateVolumeConstraints(volumes, constraints)
      520 |       const result3 = validateVolumeConstraints(volumes, constraints)
      521 |

      at Object.<anonymous> (__tests__/unit/mixing-optimizer.test.ts:518:48)

