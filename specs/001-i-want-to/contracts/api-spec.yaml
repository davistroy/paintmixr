openapi: 3.0.3
info:
  title: Paint Mixing Color App API
  description: API for paint color matching and mixing calculations
  version: 1.0.0
  contact:
    name: Paint Mixer API Support

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://paintmixr.vercel.app/api
    description: Production server

paths:
  /color-match:
    post:
      summary: Calculate paint mixing ratios for target color
      description: Given a target color, calculate the optimal mixing ratios of predefined paints
      operationId: calculateColorMatch
      tags:
        - Color Matching
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColorMatchRequest'
      responses:
        '200':
          description: Color matching calculation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorMatchResponse'
        '400':
          description: Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Color cannot be matched with available paints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorMatchErrorResponse'

  /ratio-predict:
    post:
      summary: Predict resulting color from paint mixing ratios
      description: Given specific paint volumes, predict the resulting mixed color
      operationId: predictMixingResult
      tags:
        - Color Prediction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatioPredictRequest'
      responses:
        '200':
          description: Color prediction successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatioPredictResponse'
        '400':
          description: Invalid mixing ratios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sessions:
    get:
      summary: Get user's mixing sessions
      description: Retrieve saved mixing sessions with optional filtering
      operationId: getUserSessions
      tags:
        - Sessions
      parameters:
        - name: limit
          in: query
          description: Maximum number of sessions to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of sessions to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: favorites_only
          in: query
          description: Return only favorite sessions
          schema:
            type: boolean
            default: false
        - name: session_type
          in: query
          description: Filter by session type
          schema:
            type: string
            enum: [color_matching, ratio_prediction]
      responses:
        '200':
          description: Sessions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionListResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Save a mixing session
      description: Save color matching or prediction session with results
      operationId: createSession
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        '201':
          description: Session saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Invalid session data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sessions/{sessionId}:
    get:
      summary: Get specific mixing session
      description: Retrieve detailed information about a specific session
      operationId: getSession
      tags:
        - Sessions
      parameters:
        - name: sessionId
          in: path
          required: true
          description: Session UUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Session retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDetailResponse'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update session metadata
      description: Update session label, notes, or favorite status
      operationId: updateSession
      tags:
        - Sessions
      parameters:
        - name: sessionId
          in: path
          required: true
          description: Session UUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionRequest'
      responses:
        '200':
          description: Session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Invalid update data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete mixing session
      description: Permanently delete a saved session
      operationId: deleteSession
      tags:
        - Sessions
      parameters:
        - name: sessionId
          in: path
          required: true
          description: Session UUID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Session deleted successfully
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /paints:
    get:
      summary: Get available paint colors
      description: Retrieve all predefined paint colors with properties
      operationId: getPaintColors
      tags:
        - Paints
      responses:
        '200':
          description: Paint colors retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaintColorsResponse'

  /image/extract-color:
    post:
      summary: Extract color from uploaded image
      description: Upload image and extract color at specified coordinates
      operationId: extractImageColor
      tags:
        - Image Processing
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Image file (PNG, JPEG, WebP)
                x:
                  type: integer
                  description: X coordinate for color extraction
                  minimum: 0
                y:
                  type: integer
                  description: Y coordinate for color extraction
                  minimum: 0
                extraction_type:
                  type: string
                  enum: [pixel, average, dominant]
                  default: pixel
                  description: Color extraction method
              required:
                - image
                - x
                - y
      responses:
        '200':
          description: Color extracted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractedColorResponse'
        '400':
          description: Invalid image or coordinates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ColorMatchRequest:
      type: object
      required:
        - target_color
        - total_volume_ml
      properties:
        target_color:
          $ref: '#/components/schemas/ColorValue'
        total_volume_ml:
          type: integer
          minimum: 100
          maximum: 1000
          description: Desired total volume in milliliters
        optimization_preference:
          type: string
          enum: [accuracy, cost, simplicity]
          default: accuracy
          description: Optimization priority for mixing formula

    ColorMatchResponse:
      type: object
      properties:
        formula:
          $ref: '#/components/schemas/MixingFormula'
        achieved_color:
          $ref: '#/components/schemas/ColorValue'
        delta_e:
          type: number
          format: float
          minimum: 0
          description: Color accuracy (CIE 2000 Delta E)
        alternatives:
          type: array
          items:
            type: object
            properties:
              formula:
                $ref: '#/components/schemas/MixingFormula'
              delta_e:
                type: number
                format: float
              description:
                type: string
          description: Alternative mixing approaches

    ColorMatchErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "color_not_achievable"
        message:
          type: string
          example: "Target color cannot be achieved with available paints"
        closest_achievable:
          $ref: '#/components/schemas/ColorValue'
        min_delta_e:
          type: number
          format: float
          description: Best possible accuracy with current paints

    RatioPredictRequest:
      type: object
      required:
        - paint_ratios
      properties:
        paint_ratios:
          type: array
          items:
            type: object
            required:
              - paint_id
              - volume_ml
            properties:
              paint_id:
                type: string
                description: ID of predefined paint
              volume_ml:
                type: number
                format: float
                minimum: 0.1
                description: Volume in milliliters

    RatioPredictResponse:
      type: object
      properties:
        resulting_color:
          $ref: '#/components/schemas/ColorValue'
        total_volume_ml:
          type: number
          format: float
        formula:
          $ref: '#/components/schemas/MixingFormula'

    CreateSessionRequest:
      type: object
      required:
        - session_type
        - input_method
      properties:
        session_type:
          type: string
          enum: [color_matching, ratio_prediction]
        input_method:
          type: string
          enum: [hex, picker, image]
        target_color:
          $ref: '#/components/schemas/ColorValue'
        calculated_color:
          $ref: '#/components/schemas/ColorValue'
        formula:
          $ref: '#/components/schemas/MixingFormula'
        delta_e:
          type: number
          format: float
          minimum: 0
        custom_label:
          type: string
          maxLength: 100
        notes:
          type: string
          maxLength: 500
        image_url:
          type: string
          format: uri

    UpdateSessionRequest:
      type: object
      properties:
        custom_label:
          type: string
          maxLength: 100
        notes:
          type: string
          maxLength: 500
        is_favorite:
          type: boolean

    SessionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        session_type:
          type: string
          enum: [color_matching, ratio_prediction]
        custom_label:
          type: string
        is_favorite:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SessionDetailResponse:
      allOf:
        - $ref: '#/components/schemas/SessionResponse'
        - type: object
          properties:
            input_method:
              type: string
              enum: [hex, picker, image]
            target_color:
              $ref: '#/components/schemas/ColorValue'
            calculated_color:
              $ref: '#/components/schemas/ColorValue'
            delta_e:
              type: number
              format: float
            formula:
              $ref: '#/components/schemas/MixingFormula'
            notes:
              type: string
            image_url:
              type: string
              format: uri

    SessionListResponse:
      type: object
      properties:
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/SessionResponse'
        total_count:
          type: integer
        has_more:
          type: boolean

    PaintColorsResponse:
      type: object
      properties:
        paints:
          type: array
          items:
            $ref: '#/components/schemas/PaintColor'

    ExtractedColorResponse:
      type: object
      properties:
        color:
          $ref: '#/components/schemas/ColorValue'
        extraction_type:
          type: string
          enum: [pixel, average, dominant]
        image_dimensions:
          type: object
          properties:
            width:
              type: integer
            height:
              type: integer

    ColorValue:
      type: object
      required:
        - hex
        - lab
      properties:
        hex:
          type: string
          pattern: '^#[0-9A-Fa-f]{6}$'
          example: '#FF5733'
        lab:
          type: object
          required:
            - l
            - a
            - b
          properties:
            l:
              type: number
              format: float
              minimum: 0
              maximum: 100
            a:
              type: number
              format: float
              minimum: -128
              maximum: 127
            b:
              type: number
              format: float
              minimum: -128
              maximum: 127

    MixingFormula:
      type: object
      required:
        - total_volume_ml
        - paint_ratios
      properties:
        total_volume_ml:
          type: number
          format: float
          minimum: 100
          maximum: 1000
        paint_ratios:
          type: array
          items:
            type: object
            required:
              - paint_id
              - volume_ml
              - percentage
            properties:
              paint_id:
                type: string
              paint_name:
                type: string
              volume_ml:
                type: number
                format: float
                minimum: 0
              percentage:
                type: number
                format: float
                minimum: 0
                maximum: 100
        mixing_order:
          type: array
          items:
            type: string
          description: Recommended order for mixing paints

    PaintColor:
      type: object
      required:
        - id
        - name
        - brand
        - hex_color
        - lab
      properties:
        id:
          type: string
        name:
          type: string
        brand:
          type: string
        hex_color:
          type: string
          pattern: '^#[0-9A-Fa-f]{6}$'
        lab:
          type: object
          properties:
            l:
              type: number
              format: float
            a:
              type: number
              format: float
            b:
              type: number
              format: float
        opacity:
          type: number
          format: float
          minimum: 0
          maximum: 1
        tinting_strength:
          type: number
          format: float
          minimum: 0
          maximum: 1

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
          description: Additional error details

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Supabase JWT token

security:
  - BearerAuth: []

tags:
  - name: Color Matching
    description: Color matching and paint ratio calculation
  - name: Color Prediction
    description: Mixed color prediction from ratios
  - name: Sessions
    description: Session management and history
  - name: Paints
    description: Paint color database access
  - name: Image Processing
    description: Image color extraction