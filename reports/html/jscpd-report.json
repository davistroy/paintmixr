{
  "statistics": {
    "detectionDate": "2025-10-02T15:56:21.384Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/app/api/auth/admin/clear-lockout/route.ts": {
            "lines": 60,
            "tokens": 354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/sessions/[id]/route.ts": {
            "lines": 216,
            "tokens": 1654,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 197,
            "duplicatedTokens": 1598,
            "percentage": 91.2,
            "percentageTokens": 96.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/paints/[id]/route.ts": {
            "lines": 235,
            "tokens": 1961,
            "sources": 1,
            "clones": 43,
            "duplicatedLines": 702,
            "duplicatedTokens": 5323,
            "percentage": 298.72,
            "percentageTokens": 271.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/image/extract-color/route.ts": {
            "lines": 246,
            "tokens": 2089,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 103,
            "duplicatedTokens": 735,
            "percentage": 41.87,
            "percentageTokens": 35.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/collections/[id]/route.ts": {
            "lines": 382,
            "tokens": 3405,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 250,
            "duplicatedTokens": 2086,
            "percentage": 65.45,
            "percentageTokens": 61.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/signout/route.ts": {
            "lines": 120,
            "tokens": 671,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/rate-limit-status/route.ts": {
            "lines": 36,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/lockout-status/route.ts": {
            "lines": 65,
            "tokens": 463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/email-signin/route.ts": {
            "lines": 200,
            "tokens": 1165,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 100,
            "percentage": 8,
            "percentageTokens": 8.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/callback/route.ts": {
            "lines": 117,
            "tokens": 755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/__tests__/tpe-hybrid.test.ts": {
            "lines": 636,
            "tokens": 6096,
            "sources": 1,
            "clones": 42,
            "duplicatedLines": 535,
            "duplicatedTokens": 4926,
            "percentage": 84.12,
            "percentageTokens": 80.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/__tests__/differential-evolution.test.ts": {
            "lines": 723,
            "tokens": 6015,
            "sources": 1,
            "clones": 38,
            "duplicatedLines": 465,
            "duplicatedTokens": 3642,
            "percentage": 64.32,
            "percentageTokens": 60.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/database/repositories/enhanced-paint-repository.ts": {
            "lines": 605,
            "tokens": 5184,
            "sources": 1,
            "clones": 44,
            "duplicatedLines": 360,
            "duplicatedTokens": 3376,
            "percentage": 59.5,
            "percentageTokens": 65.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/database/models/enhanced-paint.ts": {
            "lines": 384,
            "tokens": 2492,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 87,
            "percentage": 1.3,
            "percentageTokens": 3.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts": {
            "lines": 482,
            "tokens": 5808,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 34,
            "duplicatedTokens": 346,
            "percentage": 7.05,
            "percentageTokens": 5.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/sessions/route.ts": {
            "lines": 283,
            "tokens": 2624,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 65,
            "duplicatedTokens": 630,
            "percentage": 22.97,
            "percentageTokens": 24.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/ratio-predict/route.ts": {
            "lines": 195,
            "tokens": 1473,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 346,
            "percentage": 24.1,
            "percentageTokens": 23.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/paints/route.ts": {
            "lines": 273,
            "tokens": 2507,
            "sources": 1,
            "clones": 23,
            "duplicatedLines": 253,
            "duplicatedTokens": 2014,
            "percentage": 92.67,
            "percentageTokens": 80.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/optimize/route.ts": {
            "lines": 388,
            "tokens": 3783,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 90,
            "duplicatedTokens": 774,
            "percentage": 23.2,
            "percentageTokens": 20.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/mixing-history/route.ts": {
            "lines": 340,
            "tokens": 3513,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 221,
            "duplicatedTokens": 1908,
            "percentage": 65,
            "percentageTokens": 54.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/color-match/route.ts": {
            "lines": 268,
            "tokens": 2285,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 50,
            "duplicatedTokens": 465,
            "percentage": 18.66,
            "percentageTokens": 20.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/collections/route.ts": {
            "lines": 390,
            "tokens": 3542,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 229,
            "duplicatedTokens": 1948,
            "percentage": 58.72,
            "percentageTokens": 55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/workers/optimization-client.ts": {
            "lines": 495,
            "tokens": 4177,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/workers/color-optimization.worker.ts": {
            "lines": 377,
            "tokens": 3474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/utils/performance.ts": {
            "lines": 421,
            "tokens": 3463,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 130,
            "percentage": 4.28,
            "percentageTokens": 3.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/types/index.ts": {
            "lines": 201,
            "tokens": 949,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/sessions.ts": {
            "lines": 431,
            "tokens": 3091,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 30,
            "duplicatedTokens": 246,
            "percentage": 6.96,
            "percentageTokens": 7.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/server.ts": {
            "lines": 18,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/client.ts": {
            "lines": 326,
            "tokens": 2135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/admin.ts": {
            "lines": 49,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/services/enhanced-optimization-integration.ts": {
            "lines": 480,
            "tokens": 3724,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 22,
            "duplicatedTokens": 202,
            "percentage": 4.58,
            "percentageTokens": 5.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/monitoring/performance-metrics.ts": {
            "lines": 433,
            "tokens": 3745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/monitoring/error-handling.ts": {
            "lines": 505,
            "tokens": 3866,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/mixing-optimization/differential-evolution.ts": {
            "lines": 775,
            "tokens": 6840,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 242,
            "percentage": 1.29,
            "percentageTokens": 3.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/mixing-optimization/constraints.ts": {
            "lines": 353,
            "tokens": 3568,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/middleware/error-handler.ts": {
            "lines": 280,
            "tokens": 2327,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 120,
            "percentage": 4.29,
            "percentageTokens": 5.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/image-processing/canvas-utils.ts": {
            "lines": 308,
            "tokens": 3043,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 434,
            "percentage": 10.39,
            "percentageTokens": 14.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/forms/schemas.ts": {
            "lines": 44,
            "tokens": 304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/database/supabase-client.ts": {
            "lines": 353,
            "tokens": 2757,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/database/database.types.ts": {
            "lines": 499,
            "tokens": 3765,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 152,
            "duplicatedTokens": 1252,
            "percentage": 30.46,
            "percentageTokens": 33.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/lab-enhanced.ts": {
            "lines": 409,
            "tokens": 5185,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 178,
            "percentage": 2.44,
            "percentageTokens": 3.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/kubelka-munk-enhanced.ts": {
            "lines": 494,
            "tokens": 4483,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 144,
            "percentage": 2.02,
            "percentageTokens": 3.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/delta-e-ciede2000.ts": {
            "lines": 488,
            "tokens": 4514,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 178,
            "percentage": 2.05,
            "percentageTokens": 3.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/validation.ts": {
            "lines": 35,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/supabase-server.ts": {
            "lines": 291,
            "tokens": 1466,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 64,
            "duplicatedTokens": 506,
            "percentage": 21.99,
            "percentageTokens": 34.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/supabase-client.ts": {
            "lines": 253,
            "tokens": 1265,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 24,
            "duplicatedTokens": 160,
            "percentage": 9.49,
            "percentageTokens": 12.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/session-manager.ts": {
            "lines": 402,
            "tokens": 2375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/rate-limit.ts": {
            "lines": 118,
            "tokens": 468,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 122,
            "percentage": 11.86,
            "percentageTokens": 26.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/metadata-helpers.ts": {
            "lines": 257,
            "tokens": 1172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/api/client.ts": {
            "lines": 123,
            "tokens": 809,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 108,
            "percentage": 8.13,
            "percentageTokens": 13.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/workers/color-worker.ts": {
            "lines": 210,
            "tokens": 1758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/types.ts": {
            "lines": 464,
            "tokens": 3373,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 108,
            "percentage": 3.02,
            "percentageTokens": 3.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/precision.ts": {
            "lines": 524,
            "tokens": 2933,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/optimization.ts": {
            "lines": 757,
            "tokens": 4177,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/mixing.ts": {
            "lines": 393,
            "tokens": 2276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/auth.ts": {
            "lines": 46,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware/accuracy-comparison.ts": {
            "lines": 316,
            "tokens": 2211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/user-paints.ts": {
            "lines": 99,
            "tokens": 807,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/kubelka-munk.ts": {
            "lines": 423,
            "tokens": 3353,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/feature-flags.ts": {
            "lines": 22,
            "tokens": 135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science.ts": {
            "lines": 319,
            "tokens": 3598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-sessions.ts": {
            "lines": 246,
            "tokens": 2164,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 16,
            "duplicatedTokens": 176,
            "percentage": 6.5,
            "percentageTokens": 8.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-paint-colors.ts": {
            "lines": 114,
            "tokens": 1040,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 58,
            "percentage": 5.26,
            "percentageTokens": 5.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-image-processing.ts": {
            "lines": 208,
            "tokens": 1838,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 104,
            "percentage": 4.81,
            "percentageTokens": 5.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-color-matching.ts": {
            "lines": 109,
            "tokens": 911,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/manifest.ts": {
            "lines": 126,
            "tokens": 826,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware.ts": {
            "lines": 170,
            "tokens": 855,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 20408,
          "tokens": 163714,
          "sources": 67,
          "clones": 172,
          "duplicatedLines": 2043,
          "duplicatedTokens": 17386,
          "percentage": 10.01,
          "percentageTokens": 10.62,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "src/app/auth/signin/page.tsx": {
            "lines": 33,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/auth/error/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/color-picker.tsx": {
            "lines": 227,
            "tokens": 1898,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SessionCard.tsx": {
            "lines": 244,
            "tokens": 2150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SaveForm.tsx": {
            "lines": 171,
            "tokens": 1340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/paint-library.tsx": {
            "lines": 373,
            "tokens": 3192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-results.tsx": {
            "lines": 357,
            "tokens": 3520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-controls.tsx": {
            "lines": 350,
            "tokens": 2975,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/RatioDisplay.tsx": {
            "lines": 107,
            "tokens": 994,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/AccuracyIndicator.tsx": {
            "lines": 114,
            "tokens": 877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/paint-mixing-dashboard.tsx": {
            "lines": 188,
            "tokens": 1651,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ImageUpload.tsx": {
            "lines": 104,
            "tokens": 691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/HexInput.tsx": {
            "lines": 26,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ColorPicker.tsx": {
            "lines": 70,
            "tokens": 454,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-display/ColorValue.tsx": {
            "lines": 15,
            "tokens": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/collection-manager.tsx": {
            "lines": 313,
            "tokens": 2860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignOutButton.tsx": {
            "lines": 158,
            "tokens": 872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignInButton.tsx": {
            "lines": 142,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/EmailSigninForm.tsx": {
            "lines": 96,
            "tokens": 784,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/AuthProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/history/page.tsx": {
            "lines": 111,
            "tokens": 982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmailPasswordForm.tsx": {
            "lines": 123,
            "tokens": 1071,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/page.tsx": {
            "lines": 312,
            "tokens": 2410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/layout.tsx": {
            "lines": 1,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 3635,
          "tokens": 30119,
          "sources": 24,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "src/app/auth/signin/page.tsx": {
            "lines": 175,
            "tokens": 1013,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/auth/error/page.tsx": {
            "lines": 267,
            "tokens": 1555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/color-picker.tsx": {
            "lines": 423,
            "tokens": 4053,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 50,
            "duplicatedTokens": 380,
            "percentage": 11.82,
            "percentageTokens": 9.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SessionCard.tsx": {
            "lines": 337,
            "tokens": 3008,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 188,
            "percentage": 5.34,
            "percentageTokens": 6.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SaveForm.tsx": {
            "lines": 286,
            "tokens": 2169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/paint-library.tsx": {
            "lines": 663,
            "tokens": 5774,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 182,
            "duplicatedTokens": 1504,
            "percentage": 27.45,
            "percentageTokens": 26.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-results.tsx": {
            "lines": 540,
            "tokens": 5217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-controls.tsx": {
            "lines": 551,
            "tokens": 4604,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 54,
            "duplicatedTokens": 494,
            "percentage": 9.8,
            "percentageTokens": 10.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/RatioDisplay.tsx": {
            "lines": 186,
            "tokens": 1662,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 64,
            "percentage": 5.38,
            "percentageTokens": 3.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/AccuracyIndicator.tsx": {
            "lines": 229,
            "tokens": 1782,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 64,
            "percentage": 4.37,
            "percentageTokens": 3.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/paint-mixing-dashboard.tsx": {
            "lines": 477,
            "tokens": 4239,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 53,
            "percentage": 1.26,
            "percentageTokens": 1.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ImageUpload.tsx": {
            "lines": 314,
            "tokens": 2568,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/HexInput.tsx": {
            "lines": 154,
            "tokens": 1037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ColorPicker.tsx": {
            "lines": 157,
            "tokens": 1159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-display/ColorValue.tsx": {
            "lines": 93,
            "tokens": 724,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/collection-manager.tsx": {
            "lines": 596,
            "tokens": 5338,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 196,
            "duplicatedTokens": 1615,
            "percentage": 32.89,
            "percentageTokens": 30.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignOutButton.tsx": {
            "lines": 232,
            "tokens": 1321,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 50,
            "duplicatedTokens": 348,
            "percentage": 21.55,
            "percentageTokens": 26.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignInButton.tsx": {
            "lines": 232,
            "tokens": 1312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/EmailSigninForm.tsx": {
            "lines": 235,
            "tokens": 1673,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 406,
            "percentage": 15.32,
            "percentageTokens": 24.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/AuthProvider.tsx": {
            "lines": 274,
            "tokens": 1227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/history/page.tsx": {
            "lines": 293,
            "tokens": 2585,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 192,
            "percentage": 9.22,
            "percentageTokens": 7.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmailPasswordForm.tsx": {
            "lines": 295,
            "tokens": 2304,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 440,
            "percentage": 12.88,
            "percentageTokens": 19.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/page.tsx": {
            "lines": 547,
            "tokens": 4499,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 192,
            "percentage": 4.94,
            "percentageTokens": 4.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/layout.tsx": {
            "lines": 146,
            "tokens": 770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 7702,
          "tokens": 61593,
          "sources": 24,
          "clones": 29,
          "duplicatedLines": 352,
          "duplicatedTokens": 2970,
          "percentage": 4.57,
          "percentageTokens": 4.82,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/app/globals.css": {
            "lines": 58,
            "tokens": 494,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 58,
          "tokens": 494,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 31803,
      "tokens": 255920,
      "sources": 116,
      "clones": 201,
      "duplicatedLines": 2395,
      "duplicatedTokens": 20356,
      "percentage": 7.53,
      "percentageTokens": 7.95,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n\n      if (error.message === 'Session not found') {\n        const errorResponse: ErrorResponse = {\n          error: 'NOT_FOUND',\n          message: 'Session not found',\n        }\n        return NextResponse.json(errorResponse, { status: 404 })\n      }\n    }\n\n    const errorResponse: ErrorResponse = {\n      error: 'INTERNAL_ERROR',\n      message: 'Failed to update session'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 120,
        "end": 146,
        "startLoc": {
          "line": 120,
          "column": 23,
          "position": 878
        },
        "endLoc": {
          "line": 146,
          "column": 27,
          "position": 1091
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 64,
        "end": 90,
        "startLoc": {
          "line": 64,
          "column": 21,
          "position": 424
        },
        "endLoc": {
          "line": 90,
          "column": 26,
          "position": 637
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": ", error)\n\n    if (error instanceof z.ZodError) {\n      const errorResponse: ErrorResponse = {\n        error: 'VALIDATION_ERROR',\n        message: 'Invalid session ID',\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n\n      if (error.message === 'Session not found') {\n        const errorResponse: ErrorResponse = {\n          error: 'NOT_FOUND',\n          message: 'Session not found',\n        }\n        return NextResponse.json(errorResponse, { status: 404 })\n      }\n    }\n\n    const errorResponse: ErrorResponse = {\n      error: 'INTERNAL_ERROR',\n      message: 'Failed to delete session'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 167,
        "end": 198,
        "startLoc": {
          "line": 167,
          "column": 26,
          "position": 1259
        },
        "endLoc": {
          "line": 198,
          "column": 27,
          "position": 1517
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 59,
        "end": 90,
        "startLoc": {
          "line": 59,
          "column": 23,
          "position": 379
        },
        "endLoc": {
          "line": 90,
          "column": 26,
          "position": 637
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate paint ID\n    const paintId = PaintIdSchema.parse(params.id);\n\n    const body",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 88,
        "end": 99,
        "startLoc": {
          "line": 88,
          "column": 6,
          "position": 752
        },
        "endLoc": {
          "line": 99,
          "column": 5,
          "position": 846
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 17,
        "end": 28,
        "startLoc": {
          "line": 17,
          "column": 4,
          "position": 178
        },
        "endLoc": {
          "line": 28,
          "column": 11,
          "position": 272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 105,
        "end": 119,
        "startLoc": {
          "line": 105,
          "column": 11,
          "position": 916
        },
        "endLoc": {
          "line": 119,
          "column": 7,
          "position": 1011
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 43,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 303
        },
        "endLoc": {
          "line": 43,
          "column": 3,
          "position": 398
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid update data'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 128,
        "end": 135,
        "startLoc": {
          "line": 128,
          "column": 32,
          "position": 1083
        },
        "endLoc": {
          "line": 135,
          "column": 22,
          "position": 1133
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 135,
        "end": 157,
        "startLoc": {
          "line": 135,
          "column": 22,
          "position": 1134
        },
        "endLoc": {
          "line": 157,
          "column": 7,
          "position": 1300
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate paint ID\n    const paintId = PaintIdSchema.parse(params.id);\n\n    // Check for soft delete vs hard delete",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 157,
        "end": 168,
        "startLoc": {
          "line": 157,
          "column": 7,
          "position": 1301
        },
        "endLoc": {
          "line": 168,
          "column": 40,
          "position": 1393
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 17,
        "end": 28,
        "startLoc": {
          "line": 17,
          "column": 4,
          "position": 178
        },
        "endLoc": {
          "line": 28,
          "column": 6,
          "position": 270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: {",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 183,
        "end": 198,
        "startLoc": {
          "line": 183,
          "column": 2,
          "position": 1579
        },
        "endLoc": {
          "line": 198,
          "column": 2,
          "position": 1684
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 120,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 305
        },
        "endLoc": {
          "line": 120,
          "column": 7,
          "position": 1023
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid paint ID',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 209,
        "end": 236,
        "startLoc": {
          "line": 209,
          "column": 33,
          "position": 1753
        },
        "endLoc": {
          "line": 236,
          "column": 2,
          "position": 1961
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 86,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 742
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "\n\n  const rgb = hslToRgb(hue / 360, saturation, lightness)\n  const hex = rgbToHex(rgb.r, rgb.g, rgb.b)\n  const lab = hexToLab(hex)\n\n  return { hex, lab }\n}\n\n/**\n * Simple hash function for consistent color generation\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 78,
        "end": 89,
        "startLoc": {
          "line": 78,
          "column": 4,
          "position": 585
        },
        "endLoc": {
          "line": 89,
          "column": 4,
          "position": 661
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 61,
        "end": 72,
        "startLoc": {
          "line": 61,
          "column": 4,
          "position": 417
        },
        "endLoc": {
          "line": 72,
          "column": 4,
          "position": 493
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", error)\n\n    if (error instanceof z.ZodError) {\n      const errorResponse: ErrorResponse = {\n        error: 'VALIDATION_ERROR',\n        message: 'Invalid request data',\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 208,
        "end": 219,
        "startLoc": {
          "line": 208,
          "column": 32,
          "position": 1793
        },
        "endLoc": {
          "line": 219,
          "column": 6,
          "position": 1877
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 24,
          "position": 833
        },
        "endLoc": {
          "line": 126,
          "column": 3,
          "position": 917
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": " },\n    { status: 405 }\n  )\n}\n\nexport async function PUT() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'PUT method not supported' },\n    { status: 405 }\n  )\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 230,
        "end": 240,
        "startLoc": {
          "line": 230,
          "column": 27,
          "position": 1966
        },
        "endLoc": {
          "line": 240,
          "column": 2,
          "position": 2036
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 28,
          "position": 1584
        },
        "endLoc": {
          "line": 217,
          "column": 2,
          "position": 1654
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 19,
        "end": 29,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 198
        },
        "endLoc": {
          "line": 29,
          "column": 7,
          "position": 284
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 5,
        "end": 15,
        "startLoc": {
          "line": 5,
          "column": 6,
          "position": 66
        },
        "endLoc": {
          "line": 15,
          "column": 6,
          "position": 152
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate collection ID",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 30,
        "end": 37,
        "startLoc": {
          "line": 30,
          "column": 9,
          "position": 295
        },
        "endLoc": {
          "line": 37,
          "column": 26,
          "position": 362
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 18,
        "end": 25,
        "startLoc": {
          "line": 18,
          "column": 8,
          "position": 182
        },
        "endLoc": {
          "line": 25,
          "column": 21,
          "position": 249
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", user.id);\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    if (!result.data) {\n      return NextResponse.json(\n        { error: { code: 'NOT_FOUND', message: 'Collection not found'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 41,
        "end": 57,
        "startLoc": {
          "line": 41,
          "column": 13,
          "position": 411
        },
        "endLoc": {
          "line": 57,
          "column": 23,
          "position": 547
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 45,
        "startLoc": {
          "line": 29,
          "column": 8,
          "position": 298
        },
        "endLoc": {
          "line": 45,
          "column": 18,
          "position": 434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid collection ID'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 128,
        "end": 135,
        "startLoc": {
          "line": 128,
          "column": 35,
          "position": 1334
        },
        "endLoc": {
          "line": 135,
          "column": 24,
          "position": 1384
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PATCH(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate collection ID\n    const collectionId = CollectionIdSchema.parse(params.id);\n\n    const body",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 135,
        "end": 168,
        "startLoc": {
          "line": 135,
          "column": 24,
          "position": 1385
        },
        "endLoc": {
          "line": 168,
          "column": 5,
          "position": 1646
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 40,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 40,
          "column": 11,
          "position": 385
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", user.id, updateData);\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result.data,\n      meta: {\n        updated_at: result.data?.updated_at,\n        collection_id",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 212,
        "end": 230,
        "startLoc": {
          "line": 212,
          "column": 13,
          "position": 2049
        },
        "endLoc": {
          "line": 230,
          "column": 14,
          "position": 2188
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 105,
        "end": 123,
        "startLoc": {
          "line": 105,
          "column": 8,
          "position": 908
        },
        "endLoc": {
          "line": 123,
          "column": 8,
          "position": 1047
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid update data',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate collection ID\n    const collectionId = CollectionIdSchema.parse(params.id);\n\n    const url",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 235,
        "end": 275,
        "startLoc": {
          "line": 235,
          "column": 37,
          "position": 2219
        },
        "endLoc": {
          "line": 275,
          "column": 4,
          "position": 2531
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 40,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 40,
          "column": 11,
          "position": 385
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ".data) {\n      return NextResponse.json(\n        { error: { code: 'NOT_FOUND', message: 'Collection not found' } },\n        { status: 404 }\n      );\n    }\n\n    // Check if this is the default collection",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 283,
        "end": 290,
        "startLoc": {
          "line": 283,
          "column": 17,
          "position": 2637
        },
        "endLoc": {
          "line": 290,
          "column": 43,
          "position": 2694
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 55,
        "end": 62,
        "startLoc": {
          "line": 55,
          "column": 7,
          "position": 516
        },
        "endLoc": {
          "line": 62,
          "column": 48,
          "position": 573
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n    }\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 327,
        "end": 338,
        "startLoc": {
          "line": 327,
          "column": 2,
          "position": 3013
        },
        "endLoc": {
          "line": 338,
          "column": 4,
          "position": 3081
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 182,
        "end": 39,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 1575
        },
        "endLoc": {
          "line": 39,
          "column": 7,
          "position": 369
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "\n      },\n      meta: {\n        deleted_at: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    console.error('DELETE /api/collections/[id] error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 348,
        "end": 356,
        "startLoc": {
          "line": 348,
          "column": 15,
          "position": 3146
        },
        "endLoc": {
          "line": 356,
          "column": 38,
          "position": 3196
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 201,
        "end": 209,
        "startLoc": {
          "line": 201,
          "column": 8,
          "position": 1702
        },
        "endLoc": {
          "line": 209,
          "column": 33,
          "position": 1752
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid collection ID',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 356,
        "end": 383,
        "startLoc": {
          "line": 356,
          "column": 38,
          "position": 3197
        },
        "endLoc": {
          "line": 383,
          "column": 2,
          "position": 3405
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 86,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 742
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "\n      recordAuthAttempt(ipAddress)\n      return NextResponse.json(\n        { error: 'invalid_credentials', message: 'Invalid email or password' },\n        { status: 401 }\n      )\n    }\n\n    // Check lockout status BEFORE password verification (FR-012)",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/auth/email-signin/route.ts",
        "start": 109,
        "end": 117,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 511
        },
        "endLoc": {
          "line": 117,
          "column": 62,
          "position": 561
        }
      },
      "secondFile": {
        "name": "src/app/api/auth/email-signin/route.ts",
        "start": 98,
        "end": 106,
        "startLoc": {
          "line": 98,
          "column": 39,
          "position": 435
        },
        "endLoc": {
          "line": 106,
          "column": 6,
          "position": 485
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-3'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 39,
        "end": 45,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 478
        },
        "endLoc": {
          "line": 45,
          "column": 10,
          "position": 568
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-4'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 55,
        "end": 61,
        "startLoc": {
          "line": 55,
          "column": 2,
          "position": 729
        },
        "endLoc": {
          "line": 61,
          "column": 10,
          "position": 819
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-5'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 71,
        "end": 77,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 981
        },
        "endLoc": {
          "line": 77,
          "column": 10,
          "position": 1071
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-6'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 87,
        "end": 93,
        "startLoc": {
          "line": 87,
          "column": 2,
          "position": 1232
        },
        "endLoc": {
          "line": 93,
          "column": 10,
          "position": 1322
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  }\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 103,
        "end": 108,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 1484
        },
        "endLoc": {
          "line": 108,
          "column": 1,
          "position": 1565
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 27,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 308
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 75",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 225,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2478
        },
        "endLoc": {
          "line": 225,
          "column": 3,
          "position": 2597
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 174,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 150",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 249,
        "end": 263,
        "startLoc": {
          "line": 249,
          "column": 20,
          "position": 2793
        },
        "endLoc": {
          "line": 263,
          "column": 4,
          "position": 2918
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 160,
        "end": 174,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 2032
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ").map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 304,
        "end": 318,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 3253
        },
        "endLoc": {
          "line": 318,
          "column": 4,
          "position": 3380
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 175,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2477
        },
        "endLoc": {
          "line": 175,
          "column": 4,
          "position": 2164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "\n        available_paints: mockPaints.slice(0, 4).map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 80",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 353,
        "end": 367,
        "startLoc": {
          "line": 353,
          "column": 2,
          "position": 3650
        },
        "endLoc": {
          "line": 367,
          "column": 3,
          "position": 3783
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 211,
        "end": 174,
        "startLoc": {
          "line": 211,
          "column": 21,
          "position": 2464
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 50",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 405,
        "end": 418,
        "startLoc": {
          "line": 405,
          "column": 14,
          "position": 4079
        },
        "endLoc": {
          "line": 418,
          "column": 3,
          "position": 4198
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 174,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ").map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 1000",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 441,
        "end": 454,
        "startLoc": {
          "line": 441,
          "column": 2,
          "position": 4407
        },
        "endLoc": {
          "line": 454,
          "column": 5,
          "position": 4527
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 174,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2477
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'tpe_hybrid',\n          max_iterations: 100,\n          time_limit_ms: 8000,\n          quality_vs_speed: 'balanced'\n        }\n      });\n\n      expect(result.success).toBe(true);\n      ",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 457,
        "end": 469,
        "startLoc": {
          "line": 457,
          "column": 5,
          "position": 4553
        },
        "endLoc": {
          "line": 469,
          "column": 7,
          "position": 4621
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 228,
        "end": 241,
        "startLoc": {
          "line": 228,
          "column": 6,
          "position": 2619
        },
        "endLoc": {
          "line": 241,
          "column": 1,
          "position": 2687
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 5",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 487,
        "end": 503,
        "startLoc": {
          "line": 487,
          "column": 2,
          "position": 4815
        },
        "endLoc": {
          "line": 503,
          "column": 2,
          "position": 4955
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 160,
        "end": 319,
        "startLoc": {
          "line": 160,
          "column": 12,
          "position": 2031
        },
        "endLoc": {
          "line": 319,
          "column": 2,
          "position": 3387
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "\n        available_paints: mockPaints.slice(0, 5).map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        }\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 578,
        "end": 597,
        "startLoc": {
          "line": 578,
          "column": 2,
          "position": 5688
        },
        "endLoc": {
          "line": 597,
          "column": 1,
          "position": 5846
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 303,
        "end": 321,
        "startLoc": {
          "line": 303,
          "column": 18,
          "position": 3240
        },
        "endLoc": {
          "line": 321,
          "column": 2,
          "position": 3398
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 3",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 63,
        "end": 74,
        "startLoc": {
          "line": 63,
          "column": 4,
          "position": 449
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 525
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 28,
        "end": 39,
        "startLoc": {
          "line": 28,
          "column": 4,
          "position": 178
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 254
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-3'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 74,
        "end": 84,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 526
        },
        "endLoc": {
          "line": 84,
          "column": 10,
          "position": 620
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 255
        },
        "endLoc": {
          "line": 49,
          "column": 10,
          "position": 349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 7",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 98,
        "end": 109,
        "startLoc": {
          "line": 98,
          "column": 3,
          "position": 719
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 795
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 28,
        "end": 39,
        "startLoc": {
          "line": 28,
          "column": 4,
          "position": 178
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 254
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-4'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 109,
        "end": 119,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 796
        },
        "endLoc": {
          "line": 119,
          "column": 10,
          "position": 890
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 255
        },
        "endLoc": {
          "line": 49,
          "column": 10,
          "position": 349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 4",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 133,
        "end": 144,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 989
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1065
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 28,
        "end": 39,
        "startLoc": {
          "line": 28,
          "column": 4,
          "position": 178
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 254
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-5'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 144,
        "end": 154,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1066
        },
        "endLoc": {
          "line": 154,
          "column": 10,
          "position": 1160
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 255
        },
        "endLoc": {
          "line": 49,
          "column": 10,
          "position": 349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 2",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 168,
        "end": 179,
        "startLoc": {
          "line": 168,
          "column": 4,
          "position": 1260
        },
        "endLoc": {
          "line": 179,
          "column": 2,
          "position": 1336
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 28,
        "end": 39,
        "startLoc": {
          "line": 28,
          "column": 4,
          "position": 178
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 254
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  }\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 179,
        "end": 188,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 1337
        },
        "endLoc": {
          "line": 188,
          "column": 1,
          "position": 1422
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 39,
        "end": 47,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 255
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 340
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 2",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 240,
        "end": 255,
        "startLoc": {
          "line": 240,
          "column": 13,
          "position": 1897
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 2030
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 319,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 319,
          "column": 2,
          "position": 3387
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n        target_color: targetColor,\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 50,\n          min_volume_per_paint_ml: 0.5",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 280,
        "end": 296,
        "startLoc": {
          "line": 280,
          "column": 19,
          "position": 2236
        },
        "endLoc": {
          "line": 296,
          "column": 4,
          "position": 2376
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 159,
        "end": 419,
        "startLoc": {
          "line": 159,
          "column": 20,
          "position": 2024
        },
        "endLoc": {
          "line": 419,
          "column": 4,
          "position": 4205
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "\n        available_paints: mockPaints.slice(0, 3).map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 25",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 323,
        "end": 337,
        "startLoc": {
          "line": 323,
          "column": 2,
          "position": 2603
        },
        "endLoc": {
          "line": 337,
          "column": 3,
          "position": 2736
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 440,
        "end": 174,
        "startLoc": {
          "line": 440,
          "column": 16,
          "position": 4394
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n          time_limit_ms: 8000,\n          quality_vs_speed: 'balanced'\n        }\n      });\n\n      expect(result.success).toBe(true);\n      expect(result.solution.total_volume_ml).toBeCloseTo(25",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 345,
        "end": 352,
        "startLoc": {
          "line": 345,
          "column": 4,
          "position": 2788
        },
        "endLoc": {
          "line": 352,
          "column": 3,
          "position": 2838
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 462,
        "end": 469,
        "startLoc": {
          "line": 462,
          "column": 4,
          "position": 4583
        },
        "endLoc": {
          "line": 469,
          "column": 5,
          "position": 4633
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 0.1",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 368,
        "end": 383,
        "startLoc": {
          "line": 368,
          "column": 19,
          "position": 3008
        },
        "endLoc": {
          "line": 383,
          "column": 4,
          "position": 3140
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 160,
        "end": 175,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 2032
        },
        "endLoc": {
          "line": 175,
          "column": 4,
          "position": 2164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n        target_color: targetColor,\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 423,
        "end": 445,
        "startLoc": {
          "line": 423,
          "column": 19,
          "position": 3491
        },
        "endLoc": {
          "line": 445,
          "column": 25,
          "position": 3668
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 159,
        "end": 324,
        "startLoc": {
          "line": 159,
          "column": 20,
          "position": 2024
        },
        "endLoc": {
          "line": 324,
          "column": 13,
          "position": 3417
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n          max_paint_count: 4,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution',\n          max_iterations: 200,\n          time_limit_ms: 3000",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 439,
        "end": 447,
        "startLoc": {
          "line": 439,
          "column": 4,
          "position": 3632
        },
        "endLoc": {
          "line": 447,
          "column": 5,
          "position": 3682
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 296,
        "end": 304,
        "startLoc": {
          "line": 296,
          "column": 4,
          "position": 2377
        },
        "endLoc": {
          "line": 304,
          "column": 6,
          "position": 2427
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "\n          quality_vs_speed: 'speed'\n        }\n      });\n\n      const elapsed = Date.now() - startTime;\n\n      expect(result.success).toBe(true);\n      expect(elapsed).toBeLessThan(4000",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 447,
        "end": 455,
        "startLoc": {
          "line": 447,
          "column": 18,
          "position": 3686
        },
        "endLoc": {
          "line": 455,
          "column": 5,
          "position": 3743
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 510,
        "end": 518,
        "startLoc": {
          "line": 510,
          "column": 25,
          "position": 5005
        },
        "endLoc": {
          "line": 518,
          "column": 5,
          "position": 5062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ",\n        target_color: targetColor,\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 1.0",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 472,
        "end": 493,
        "startLoc": {
          "line": 472,
          "column": 19,
          "position": 3872
        },
        "endLoc": {
          "line": 493,
          "column": 4,
          "position": 4042
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 159,
        "end": 323,
        "startLoc": {
          "line": 159,
          "column": 20,
          "position": 2024
        },
        "endLoc": {
          "line": 323,
          "column": 4,
          "position": 3410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 50,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 1",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 517,
        "end": 532,
        "startLoc": {
          "line": 517,
          "column": 20,
          "position": 4254
        },
        "endLoc": {
          "line": 532,
          "column": 2,
          "position": 4378
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 420,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 2047
        },
        "endLoc": {
          "line": 420,
          "column": 2,
          "position": 4212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 5,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 556,
        "end": 565,
        "startLoc": {
          "line": 556,
          "column": 13,
          "position": 4604
        },
        "endLoc": {
          "line": 565,
          "column": 25,
          "position": 4659
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 499,
        "end": 508,
        "startLoc": {
          "line": 499,
          "column": 2,
          "position": 4930
        },
        "endLoc": {
          "line": 508,
          "column": 13,
          "position": 4985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 150",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 577,
        "end": 591,
        "startLoc": {
          "line": 577,
          "column": 2,
          "position": 4776
        },
        "endLoc": {
          "line": 591,
          "column": 4,
          "position": 4902
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 175,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 175,
          "column": 4,
          "position": 2164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution',\n          max_iterations: 100,\n          time_limit_ms: 5000,\n          quality_vs_speed: 'balanced'\n        }\n      });",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 592,
        "end": 602,
        "startLoc": {
          "line": 592,
          "column": 2,
          "position": 4912
        },
        "endLoc": {
          "line": 602,
          "column": 2,
          "position": 4970
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 560,
        "end": 570,
        "startLoc": {
          "line": 560,
          "column": 2,
          "position": 4630
        },
        "endLoc": {
          "line": 570,
          "column": 2,
          "position": 4688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ").map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 2,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 614,
        "end": 633,
        "startLoc": {
          "line": 614,
          "column": 2,
          "position": 5081
        },
        "endLoc": {
          "line": 633,
          "column": 4,
          "position": 5238
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 259,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2477
        },
        "endLoc": {
          "line": 259,
          "column": 4,
          "position": 2053
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution',\n          max_iterations: 100,\n          time_limit_ms: 5000,\n          quality_vs_speed: 'balanced'\n        }\n      })).rejects.toThrow();\n    });\n  ",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 629,
        "end": 641,
        "startLoc": {
          "line": 629,
          "column": 2,
          "position": 5216
        },
        "endLoc": {
          "line": 641,
          "column": 3,
          "position": 5288
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 560,
        "end": 573,
        "startLoc": {
          "line": 560,
          "column": 2,
          "position": 4630
        },
        "endLoc": {
          "line": 573,
          "column": 1,
          "position": 4702
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": " },\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 5,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution',\n          max_iterations: 150",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 647,
        "end": 669,
        "startLoc": {
          "line": 647,
          "column": 5,
          "position": 5366
        },
        "endLoc": {
          "line": 669,
          "column": 4,
          "position": 5545
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 487,
        "end": 566,
        "startLoc": {
          "line": 487,
          "column": 5,
          "position": 4813
        },
        "endLoc": {
          "line": 566,
          "column": 4,
          "position": 4666
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n          algorithm: 'differential_evolution',\n          max_iterations: 150,\n          time_limit_ms: 8000,\n          quality_vs_speed: 'balanced'\n        }\n      });\n\n      expect(result.success).toBe(true);\n      expect(result.quality_metrics",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 667,
        "end": 676,
        "startLoc": {
          "line": 667,
          "column": 4,
          "position": 5532
        },
        "endLoc": {
          "line": 676,
          "column": 16,
          "position": 5589
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 343,
        "end": 352,
        "startLoc": {
          "line": 343,
          "column": 4,
          "position": 2774
        },
        "endLoc": {
          "line": 352,
          "column": 9,
          "position": 2831
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": " },\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution',\n          max_iterations: 200,\n          time_limit_ms: 10000,\n          quality_vs_speed: 'balanced'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 686,
        "end": 710,
        "startLoc": {
          "line": 686,
          "column": 5,
          "position": 5701
        },
        "endLoc": {
          "line": 710,
          "column": 11,
          "position": 5894
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 487,
        "end": 305,
        "startLoc": {
          "line": 487,
          "column": 5,
          "position": 4813
        },
        "endLoc": {
          "line": 305,
          "column": 10,
          "position": 2434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\n        .single();\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 77,
        "end": 84,
        "startLoc": {
          "line": 77,
          "column": 6,
          "position": 520
        },
        "endLoc": {
          "line": 84,
          "column": 7,
          "position": 580
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 39,
        "end": 46,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 250
        },
        "endLoc": {
          "line": 46,
          "column": 70,
          "position": 310
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ";\n      }\n\n      return { data, error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to get paint'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 81,
        "end": 90,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 573
        },
        "endLoc": {
          "line": 90,
          "column": 22,
          "position": 649
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 48,
        "end": 57,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 334
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "};\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to get paints'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 187,
        "end": 193,
        "startLoc": {
          "line": 187,
          "column": 7,
          "position": 1529
        },
        "endLoc": {
          "line": 193,
          "column": 23,
          "position": 1586
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 51,
        "end": 57,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 353
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ")\n        .select()\n        .single();\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      // Update collection stats if collection changed",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 227,
        "end": 235,
        "startLoc": {
          "line": 227,
          "column": 7,
          "position": 1867
        },
        "endLoc": {
          "line": 235,
          "column": 49,
          "position": 1933
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 38,
        "end": 46,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 244
        },
        "endLoc": {
          "line": 46,
          "column": 70,
          "position": 310
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "\n      }\n\n      return { data, error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to update paint'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 242,
        "end": 251,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 2007
        },
        "endLoc": {
          "line": 251,
          "column": 25,
          "position": 2082
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 48,
        "end": 57,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 335
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      // Update collection stats if paint was in a collection",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 266,
        "end": 272,
        "startLoc": {
          "line": 266,
          "column": 7,
          "position": 2202
        },
        "endLoc": {
          "line": 272,
          "column": 56,
          "position": 2256
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 40,
        "end": 46,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 256
        },
        "endLoc": {
          "line": 46,
          "column": 70,
          "position": 310
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to delete paint'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 277,
        "end": 283,
        "startLoc": {
          "line": 277,
          "column": 5,
          "position": 2300
        },
        "endLoc": {
          "line": 283,
          "column": 25,
          "position": 2364
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 51,
        "end": 57,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 346
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "\n        })\n        .eq('id', paintId)\n        .eq('user_id', userId)\n        .select()\n        .single();\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      // Update collection stats",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 301,
        "end": 312,
        "startLoc": {
          "line": 301,
          "column": 2,
          "position": 2500
        },
        "endLoc": {
          "line": 312,
          "column": 27,
          "position": 2589
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 224,
        "end": 46,
        "startLoc": {
          "line": 224,
          "column": 2,
          "position": 1844
        },
        "endLoc": {
          "line": 46,
          "column": 70,
          "position": 310
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ".collection_id);\n      }\n\n      return { data, error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to archive paint'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 314,
        "end": 323,
        "startLoc": {
          "line": 314,
          "column": 5,
          "position": 2610
        },
        "endLoc": {
          "line": 323,
          "column": 26,
          "position": 2689
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 48,
        "end": 57,
        "startLoc": {
          "line": 48,
          "column": 10,
          "position": 331
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return { data:",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 341,
        "end": 347,
        "startLoc": {
          "line": 341,
          "column": 2,
          "position": 2822
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 2881
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 40,
        "end": 84,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 256
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 585
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to search paints by color'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 347,
        "end": 353,
        "startLoc": {
          "line": 347,
          "column": 2,
          "position": 2889
        },
        "endLoc": {
          "line": 353,
          "column": 35,
          "position": 2953
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 51,
        "end": 57,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 346
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "\n      });\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return { data: data || [], error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to get mixing recommendations'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 368,
        "end": 381,
        "startLoc": {
          "line": 368,
          "column": 10,
          "position": 3065
        },
        "endLoc": {
          "line": 381,
          "column": 39,
          "position": 3199
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 340,
        "end": 57,
        "startLoc": {
          "line": 340,
          "column": 6,
          "position": 2819
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "\n      });\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return { data: data || false",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 394,
        "end": 401,
        "startLoc": {
          "line": 394,
          "column": 11,
          "position": 3291
        },
        "endLoc": {
          "line": 401,
          "column": 6,
          "position": 3359
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 340,
        "end": 347,
        "startLoc": {
          "line": 340,
          "column": 6,
          "position": 2819
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 2887
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to update paint usage'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 401,
        "end": 407,
        "startLoc": {
          "line": 401,
          "column": 6,
          "position": 3360
        },
        "endLoc": {
          "line": 407,
          "column": 31,
          "position": 3424
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 51,
        "end": 57,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 346
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "\n      });\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return { data: data?",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 416,
        "end": 423,
        "startLoc": {
          "line": 416,
          "column": 7,
          "position": 3498
        },
        "endLoc": {
          "line": 423,
          "column": 2,
          "position": 3563
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 340,
        "end": 347,
        "startLoc": {
          "line": 340,
          "column": 6,
          "position": 2819
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 2884
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to get user stats'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 423,
        "end": 429,
        "startLoc": {
          "line": 423,
          "column": 5,
          "position": 3572
        },
        "endLoc": {
          "line": 429,
          "column": 27,
          "position": 3636
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 51,
        "end": 57,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 346
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "?: string\n  ): Promise<DatabaseResponse<EnhancedPaintRow>> {\n    try {\n      const { data, error } = await this.supabase\n        .from(ENHANCED_PAINT_TABLE)\n        .update({\n          optical_properties",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 451,
        "end": 457,
        "startLoc": {
          "line": 451,
          "column": 17,
          "position": 3771
        },
        "endLoc": {
          "line": 457,
          "column": 19,
          "position": 3828
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 292,
        "end": 298,
        "startLoc": {
          "line": 292,
          "column": 7,
          "position": 2402
        },
        "endLoc": {
          "line": 298,
          "column": 9,
          "position": 2459
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', paintId)\n        .eq('user_id', userId)\n        .select()\n        .single();\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return { data, error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to update optical properties'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 460,
        "end": 478,
        "startLoc": {
          "line": 460,
          "column": 17,
          "position": 3861
        },
        "endLoc": {
          "line": 478,
          "column": 38,
          "position": 4034
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 300,
        "end": 57,
        "startLoc": {
          "line": 300,
          "column": 7,
          "position": 2485
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ")\n        .eq('id', paintId)\n        .eq('user_id', userId);\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return {\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 509,
        "end": 518,
        "startLoc": {
          "line": 509,
          "column": 2,
          "position": 4334
        },
        "endLoc": {
          "line": 518,
          "column": 1,
          "position": 4411
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 264,
        "end": 84,
        "startLoc": {
          "line": 264,
          "column": 2,
          "position": 2182
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "\n      };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to verify color accuracy'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 522,
        "end": 529,
        "startLoc": {
          "line": 522,
          "column": 5,
          "position": 4442
        },
        "endLoc": {
          "line": 529,
          "column": 34,
          "position": 4501
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 186,
        "end": 57,
        "startLoc": {
          "line": 186,
          "column": 2,
          "position": 1527
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "\n      const { data, error } = await this.supabase\n        .from(ENHANCED_PAINT_TABLE)\n        .update({\n          ...updates,\n          updated_at: new Date().toISOString()\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 540,
        "end": 546,
        "startLoc": {
          "line": 540,
          "column": 2,
          "position": 4567
        },
        "endLoc": {
          "line": 546,
          "column": 1,
          "position": 4619
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 218,
        "end": 223,
        "startLoc": {
          "line": 218,
          "column": 1,
          "position": 1771
        },
        "endLoc": {
          "line": 223,
          "column": 2,
          "position": 1823
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "();\n\n      if (error) {\n        return { data: null, error: { code: error.code, message: error.message } };\n      }\n\n      return { data: data || [], error: null };\n    } catch (err) {\n      return {\n        data: null,\n        error: {\n          code: 'UNKNOWN_ERROR',\n          message: err instanceof Error ? err.message : 'Failed to bulk update paints'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 549,
        "end": 561,
        "startLoc": {
          "line": 549,
          "column": 7,
          "position": 4647
        },
        "endLoc": {
          "line": 561,
          "column": 31,
          "position": 4779
        }
      },
      "secondFile": {
        "name": "src/lib/database/repositories/enhanced-paint-repository.ts",
        "start": 40,
        "end": 57,
        "startLoc": {
          "line": 40,
          "column": 7,
          "position": 255
        },
        "endLoc": {
          "line": 57,
          "column": 25,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "reflectanceSpectrum.forEach(r => {\n        expect(r).toBeGreaterThanOrEqual(0);\n        expect(r).toBeLessThanOrEqual(1);\n        expect(Number.isFinite(r)).toBe(true);\n      });\n\n      // Should show characteristics of all three components",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts",
        "start": 144,
        "end": 150,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1761
        },
        "endLoc": {
          "line": 150,
          "column": 55,
          "position": 1819
        }
      },
      "secondFile": {
        "name": "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts",
        "start": 59,
        "end": 65,
        "startLoc": {
          "line": 59,
          "column": 7,
          "position": 601
        },
        "endLoc": {
          "line": 65,
          "column": 49,
          "position": 659
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "\n      mixture.reflectanceSpectrum.forEach(r => {\n        expect(Number.isFinite(r)).toBe(true);\n        expect(r).toBeGreaterThanOrEqual(0);\n        expect(r).toBeLessThanOrEqual(1);\n      });\n    ",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts",
        "start": 393,
        "end": 399,
        "startLoc": {
          "line": 393,
          "column": 2,
          "position": 4812
        },
        "endLoc": {
          "line": 399,
          "column": 5,
          "position": 4872
        }
      },
      "secondFile": {
        "name": "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts",
        "start": 365,
        "end": 372,
        "startLoc": {
          "line": 365,
          "column": 1,
          "position": 4448
        },
        "endLoc": {
          "line": 372,
          "column": 1,
          "position": 4508
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".forEach(r => {\n        expect(r).toBeGreaterThanOrEqual(0);\n        expect(r).toBeLessThanOrEqual(1);\n        expect(Number.isFinite(r)).toBe(true);\n      });\n    ",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts",
        "start": 454,
        "end": 459,
        "startLoc": {
          "line": 454,
          "column": 9,
          "position": 5493
        },
        "endLoc": {
          "line": 459,
          "column": 5,
          "position": 5548
        }
      },
      "secondFile": {
        "name": "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts",
        "start": 59,
        "end": 65,
        "startLoc": {
          "line": 59,
          "column": 20,
          "position": 602
        },
        "endLoc": {
          "line": 65,
          "column": 1,
          "position": 657
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n    ",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 146,
        "end": 160,
        "startLoc": {
          "line": 146,
          "column": 27,
          "position": 1256
        },
        "endLoc": {
          "line": 160,
          "column": 5,
          "position": 1374
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 64,
        "end": 79,
        "startLoc": {
          "line": 64,
          "column": 21,
          "position": 424
        },
        "endLoc": {
          "line": 79,
          "column": 1,
          "position": 542
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n        hex: z.string().regex(/^#[0-9A-Fa-f]{6}$/, 'Invalid hex color format'),\n        lab: z.object({\n          l: z.number().min(0).max(100),\n          a: z.number().min(-128).max(127),\n          b: z.number().min(-128).max(127),\n        }),\n      }).optional(),\n      delta_e",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 186,
        "end": 194,
        "startLoc": {
          "line": 186,
          "column": 17,
          "position": 1655
        },
        "endLoc": {
          "line": 194,
          "column": 8,
          "position": 1772
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 178,
        "end": 186,
        "startLoc": {
          "line": 178,
          "column": 13,
          "position": 1537
        },
        "endLoc": {
          "line": 186,
          "column": 17,
          "position": 1654
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", error)\n\n    if (error instanceof z.ZodError) {\n      const errorResponse: ErrorResponse = {\n        error: 'VALIDATION_ERROR',\n        message: 'Invalid request data',\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n\n      if (error.message.",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 235,
        "end": 255,
        "startLoc": {
          "line": 235,
          "column": 26,
          "position": 2228
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 2399
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 115,
        "end": 79,
        "startLoc": {
          "line": 115,
          "column": 24,
          "position": 833
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 550
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "\n}\n\nexport async function PUT() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'PUT method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'DELETE method not supported' },\n    { status: 405 }\n  )\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 269,
        "end": 284,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 2517
        },
        "endLoc": {
          "line": 284,
          "column": 2,
          "position": 2624
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 209,
        "end": 247,
        "startLoc": {
          "line": 209,
          "column": 2,
          "position": 1600
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2089
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n\n    // Validate request\n    const validatedData = RatioPredictRequestSchema",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/ratio-predict/route.ts",
        "start": 81,
        "end": 89,
        "startLoc": {
          "line": 81,
          "column": 8,
          "position": 560
        },
        "endLoc": {
          "line": 89,
          "column": 26,
          "position": 611
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 145,
        "end": 153,
        "startLoc": {
          "line": 145,
          "column": 2,
          "position": 1349
        },
        "endLoc": {
          "line": 153,
          "column": 34,
          "position": 1400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", error)\n\n    if (error instanceof z.ZodError) {\n      const errorResponse: ErrorResponse = {\n        error: 'VALIDATION_ERROR',\n        message: 'Invalid request data',\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    const errorResponse: ErrorResponse = {\n      error: 'INTERNAL_ERROR',\n      message: 'Failed to process ratio prediction request'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/ratio-predict/route.ts",
        "start": 157,
        "end": 170,
        "startLoc": {
          "line": 157,
          "column": 26,
          "position": 1177
        },
        "endLoc": {
          "line": 170,
          "column": 45,
          "position": 1283
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 115,
        "end": 221,
        "startLoc": {
          "line": 115,
          "column": 24,
          "position": 833
        },
        "endLoc": {
          "line": 221,
          "column": 37,
          "position": 1899
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n    }\n    return NextResponse.json(errorResponse, { status: 500 })\n  }\n}\n\n// Handle unsupported methods\nexport async function GET() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'GET method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function PUT() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'PUT method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'DELETE method not supported' },\n    { status: 405 }\n  )\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/ratio-predict/route.ts",
        "start": 170,
        "end": 196,
        "startLoc": {
          "line": 170,
          "column": 45,
          "position": 1284
        },
        "endLoc": {
          "line": 196,
          "column": 2,
          "position": 1473
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 221,
        "end": 247,
        "startLoc": {
          "line": 221,
          "column": 37,
          "position": 1900
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2089
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport async function GET(request",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 29,
        "end": 39,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 453
        },
        "endLoc": {
          "line": 39,
          "column": 8,
          "position": 548
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 31,
          "position": 197
        },
        "endLoc": {
          "line": 30,
          "column": 1,
          "position": 292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result.data,\n      pagination",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 74,
        "end": 90,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 857
        },
        "endLoc": {
          "line": 90,
          "column": 11,
          "position": 970
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 121,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 303
        },
        "endLoc": {
          "line": 121,
          "column": 5,
          "position": 1029
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid query parameters'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 99,
        "end": 106,
        "startLoc": {
          "line": 99,
          "column": 25,
          "position": 1071
        },
        "endLoc": {
          "line": 106,
          "column": 27,
          "position": 1121
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 106,
        "end": 128,
        "startLoc": {
          "line": 106,
          "column": 27,
          "position": 1122
        },
        "endLoc": {
          "line": 128,
          "column": 5,
          "position": 1288
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'VALIDATION_ERROR'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 142,
        "end": 152,
        "startLoc": {
          "line": 142,
          "column": 10,
          "position": 1412
        },
        "endLoc": {
          "line": 152,
          "column": 19,
          "position": 1486
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 39,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 303
        },
        "endLoc": {
          "line": 39,
          "column": 12,
          "position": 377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid paint data'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 168,
        "end": 175,
        "startLoc": {
          "line": 168,
          "column": 26,
          "position": 1594
        },
        "endLoc": {
          "line": 175,
          "column": 21,
          "position": 1644
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\n// Bulk operations endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 175,
        "end": 197,
        "startLoc": {
          "line": 175,
          "column": 21,
          "position": 1645
        },
        "endLoc": {
          "line": 197,
          "column": 28,
          "position": 1805
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const body = await request.json();\n    ",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 198,
        "end": 204,
        "startLoc": {
          "line": 198,
          "column": 4,
          "position": 1814
        },
        "endLoc": {
          "line": 204,
          "column": 5,
          "position": 1872
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 128,
        "end": 135,
        "startLoc": {
          "line": 128,
          "column": 5,
          "position": 1289
        },
        "endLoc": {
          "line": 135,
          "column": 1,
          "position": 1347
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 230,
        "end": 245,
        "startLoc": {
          "line": 230,
          "column": 8,
          "position": 2159
        },
        "endLoc": {
          "line": 245,
          "column": 7,
          "position": 2250
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 343,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 303
        },
        "endLoc": {
          "line": 343,
          "column": 2,
          "position": 3106
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE()",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 253,
        "end": 269,
        "startLoc": {
          "line": 253,
          "column": 2,
          "position": 2322
        },
        "endLoc": {
          "line": 269,
          "column": 2,
          "position": 2457
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 72,
        "end": 158,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 618
        },
        "endLoc": {
          "line": 158,
          "column": 1,
          "position": 1302
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n});\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\n// Global optimization client instance",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 784
        },
        "endLoc": {
          "line": 70,
          "column": 39,
          "position": 874
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 28,
        "end": 15,
        "startLoc": {
          "line": 28,
          "column": 6,
          "position": 450
        },
        "endLoc": {
          "line": 15,
          "column": 6,
          "position": 152
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const body = await request.json();\n    const requestData",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 77,
        "end": 86,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 934
        },
        "endLoc": {
          "line": 86,
          "column": 12,
          "position": 1006
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 125,
        "end": 204,
        "startLoc": {
          "line": 125,
          "column": 2,
          "position": 1278
        },
        "endLoc": {
          "line": 204,
          "column": 2,
          "position": 1875
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid optimization request'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 292,
        "end": 299,
        "startLoc": {
          "line": 292,
          "column": 28,
          "position": 2958
        },
        "endLoc": {
          "line": 299,
          "column": 31,
          "position": 3008
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Optimization failed'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 299,
        "end": 315,
        "startLoc": {
          "line": 299,
          "column": 31,
          "position": 3009
        },
        "endLoc": {
          "line": 315,
          "column": 22,
          "position": 3142
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 82,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 82,
          "column": 24,
          "position": 718
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 318,
        "end": 326,
        "startLoc": {
          "line": 318,
          "column": 2,
          "position": 3165
        },
        "endLoc": {
          "line": 326,
          "column": 6,
          "position": 3219
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 36,
        "end": 44,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 536
        },
        "endLoc": {
          "line": 44,
          "column": 26,
          "position": 590
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", error);\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 27,
          "position": 3654
        },
        "endLoc": {
          "line": 389,
          "column": 2,
          "position": 3783
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 253,
        "end": 86,
        "startLoc": {
          "line": 253,
          "column": 25,
          "position": 2317
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 742
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createServerSupabaseClient } from '@/lib/database/supabase-client';\nimport { EnhancedPaintRepository } from '@/lib/database/repositories/enhanced-paint-repository';\nimport { z } from 'zod';\n\nconst QueryParamsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 4,
        "end": 11,
        "startLoc": {
          "line": 4,
          "column": 4,
          "position": 1
        },
        "endLoc": {
          "line": 11,
          "column": 18,
          "position": 61
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 4,
        "end": 11,
        "startLoc": {
          "line": 4,
          "column": 4,
          "position": 1
        },
        "endLoc": {
          "line": 11,
          "column": 28,
          "position": 61
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ";\nimport { z } from 'zod';\n\nconst QueryParamsSchema = z.object({\n  page: z.coerce.number().min(1).default(1),\n  limit: z.coerce.number().min(1).max(100).default(20),\n  sort_field: z.enum(['created_at'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 8,
        "end": 14,
        "startLoc": {
          "line": 8,
          "column": 56,
          "position": 43
        },
        "endLoc": {
          "line": 14,
          "column": 13,
          "position": 131
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 10,
        "end": 16,
        "startLoc": {
          "line": 10,
          "column": 32,
          "position": 72
        },
        "endLoc": {
          "line": 16,
          "column": 7,
          "position": 160
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": z.object({\n    L: z.number().min(0).max(100),\n    a: z.number().min(-128).max(127),\n    b: z.number().min(-128).max(127)\n  }),\n  delta_e_achieved",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 35,
        "end": 40,
        "startLoc": {
          "line": 35,
          "column": 15,
          "position": 484
        },
        "endLoc": {
          "line": 40,
          "column": 17,
          "position": 562
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 30,
        "end": 35,
        "startLoc": {
          "line": 30,
          "column": 13,
          "position": 405
        },
        "endLoc": {
          "line": 35,
          "column": 15,
          "position": 483
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ").optional()\n});\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    // Parse query parameters\n    const url = new URL(request.url);\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n    ",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 61,
        "end": 80,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 926
        },
        "endLoc": {
          "line": 80,
          "column": 5,
          "position": 1110
        }
      },
      "secondFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 59,
        "end": 48,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 780
        },
        "endLoc": {
          "line": 48,
          "column": 1,
          "position": 630
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": " = {\n      page: parsedParams.page,\n      limit: parsedParams.limit,\n      sort_field: parsedParams.sort_field,\n      sort_direction: parsedParams.sort_direction\n    };\n\n    const repository = new EnhancedPaintRepository(supabase);\n    const result = await repository.getMixingHistory",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 121,
        "end": 129,
        "startLoc": {
          "line": 121,
          "column": 11,
          "position": 1463
        },
        "endLoc": {
          "line": 129,
          "column": 17,
          "position": 1534
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 18,
          "position": 775
        },
        "endLoc": {
          "line": 74,
          "column": 14,
          "position": 846
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(user.id, filters, pagination);\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    // Calculate analytics for current page",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 129,
        "end": 143,
        "startLoc": {
          "line": 129,
          "column": 17,
          "position": 1535
        },
        "endLoc": {
          "line": 143,
          "column": 40,
          "position": 1624
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 74,
        "end": 342,
        "startLoc": {
          "line": 74,
          "column": 14,
          "position": 847
        },
        "endLoc": {
          "line": 342,
          "column": 7,
          "position": 3094
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid query parameters',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const body = await request.json();\n    const sessionData",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 172,
        "end": 207,
        "startLoc": {
          "line": 172,
          "column": 33,
          "position": 2116
        },
        "endLoc": {
          "line": 207,
          "column": 12,
          "position": 2395
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 204,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 204,
          "column": 2,
          "position": 1875
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    // Update paint usage statistics",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 213,
        "end": 227,
        "startLoc": {
          "line": 213,
          "column": 2,
          "position": 2453
        },
        "endLoc": {
          "line": 227,
          "column": 33,
          "position": 2532
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 342,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 303
        },
        "endLoc": {
          "line": 342,
          "column": 7,
          "position": 3094
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid mixing session data'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 251,
        "end": 258,
        "startLoc": {
          "line": 251,
          "column": 34,
          "position": 2711
        },
        "endLoc": {
          "line": 258,
          "column": 30,
          "position": 2761
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\n// Analytics endpoint for dashboard metrics",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 258,
        "end": 280,
        "startLoc": {
          "line": 258,
          "column": 30,
          "position": 2762
        },
        "endLoc": {
          "line": 280,
          "column": 44,
          "position": 2922
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "\nexport async function PUT(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const url",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 280,
        "end": 286,
        "startLoc": {
          "line": 280,
          "column": 44,
          "position": 2923
        },
        "endLoc": {
          "line": 286,
          "column": 4,
          "position": 2976
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 197,
        "end": 203,
        "startLoc": {
          "line": 197,
          "column": 28,
          "position": 1806
        },
        "endLoc": {
          "line": 203,
          "column": 5,
          "position": 1859
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const url = new URL(request.url);\n    const analyticsType",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 281,
        "end": 287,
        "startLoc": {
          "line": 281,
          "column": 4,
          "position": 2931
        },
        "endLoc": {
          "line": 287,
          "column": 14,
          "position": 2993
        }
      },
      "secondFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 321,
        "end": 327,
        "startLoc": {
          "line": 321,
          "column": 4,
          "position": 3176
        },
        "endLoc": {
          "line": 327,
          "column": 15,
          "position": 3238
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", error);\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Analytics request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 327,
        "end": 337,
        "startLoc": {
          "line": 327,
          "column": 43,
          "position": 3384
        },
        "endLoc": {
          "line": 337,
          "column": 27,
          "position": 3489
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 253,
        "end": 82,
        "startLoc": {
          "line": 253,
          "column": 25,
          "position": 2317
        },
        "endLoc": {
          "line": 82,
          "column": 24,
          "position": 718
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".map(ratio => ({\n      ...ratio,\n      volume_ml: (ratio.percentage / 100) * totalVolume,\n      paint_properties: PAINT_DATABASE.find(p => p.id === ratio.paint_id)!,\n    }))\n\n    if (simpleRatiosWithProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/color-match/route.ts",
        "start": 86,
        "end": 92,
        "startLoc": {
          "line": 86,
          "column": 13,
          "position": 721
        },
        "endLoc": {
          "line": 92,
          "column": 22,
          "position": 790
        }
      },
      "secondFile": {
        "name": "src/app/api/color-match/route.ts",
        "start": 61,
        "end": 67,
        "startLoc": {
          "line": 61,
          "column": 11,
          "position": 494
        },
        "endLoc": {
          "line": 67,
          "column": 20,
          "position": 563
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".map(ratio => ({\n      ...ratio,\n      volume_ml: (ratio.percentage / 100) * totalVolume,\n      paint_properties: PAINT_DATABASE.find(p => p.id === ratio.paint_id)!,\n    }))\n\n    if (chromaRatiosWithProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/color-match/route.ts",
        "start": 114,
        "end": 120,
        "startLoc": {
          "line": 114,
          "column": 13,
          "position": 987
        },
        "endLoc": {
          "line": 120,
          "column": 22,
          "position": 1056
        }
      },
      "secondFile": {
        "name": "src/app/api/color-match/route.ts",
        "start": 61,
        "end": 67,
        "startLoc": {
          "line": 61,
          "column": 11,
          "position": 494
        },
        "endLoc": {
          "line": 67,
          "column": 20,
          "position": 563
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n    }\n    return NextResponse.json(errorResponse, { status: 500 })\n  }\n}\n\n// Handle unsupported methods\nexport async function GET() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'GET method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function PUT() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'PUT method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'DELETE method not supported' },\n    { status: 405 }\n  )\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/color-match/route.ts",
        "start": 243,
        "end": 269,
        "startLoc": {
          "line": 243,
          "column": 43,
          "position": 2096
        },
        "endLoc": {
          "line": 269,
          "column": 2,
          "position": 2285
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 221,
        "end": 247,
        "startLoc": {
          "line": 221,
          "column": 37,
          "position": 1900
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2089
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createServerSupabaseClient } from '@/lib/database/supabase-client';\nimport { EnhancedPaintRepository } from '@/lib/database/repositories/enhanced-paint-repository';\nimport { z } from 'zod';\n\nconst QueryParamsSchema = z.object({\n  page: z.coerce.number().min(1).default(1),\n  limit: z.coerce.number().min(1).max(100).default(20),\n  sort_field: z.enum(['name', 'created_at'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 4,
        "end": 14,
        "startLoc": {
          "line": 4,
          "column": 4,
          "position": 1
        },
        "endLoc": {
          "line": 14,
          "column": 13,
          "position": 134
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 4,
        "end": 16,
        "startLoc": {
          "line": 4,
          "column": 4,
          "position": 1
        },
        "endLoc": {
          "line": 16,
          "column": 8,
          "position": 163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "\n  name: z.string().min(1).max(255),\n  description: z.string().max(1000).optional(),\n  color_space: z.enum(['sRGB', 'Adobe_RGB', 'ProPhoto_RGB', 'Lab']).default('sRGB'),\n  is_default: z.boolean().default(false),\n  tags",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 24,
        "end": 29,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 337
        },
        "endLoc": {
          "line": 29,
          "column": 5,
          "position": 424
        }
      },
      "secondFile": {
        "name": "src/lib/database/models/enhanced-paint.ts",
        "start": 118,
        "end": 123,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1512
        },
        "endLoc": {
          "line": 123,
          "column": 12,
          "position": 1599
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ";\n\nconst PaintCollectionUpdateSchema = z.object({\n  name: z.string().min(1).max(255).optional(),\n  description: z.string().max(1000).optional(),\n  color_space: z.enum(['sRGB', 'Adobe_RGB', 'ProPhoto_RGB', 'Lab']).optional(),\n  is_default: z.boolean().optional(),\n  tags: z.array(z.string()).optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 30,
        "end": 37,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 444
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 564
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 9,
        "end": 17,
        "startLoc": {
          "line": 9,
          "column": 6,
          "position": 56
        },
        "endLoc": {
          "line": 17,
          "column": 1,
          "position": 176
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ": z.boolean().optional()\n});\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    // Parse query parameters\n    const url = new URL(request.url);\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n    const parsedParams = QueryParamsSchema.parse(queryParams);\n\n    // Build filters\n    const filters: any = {\n      archived: parsedParams",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 38,
        "end": 61,
        "startLoc": {
          "line": 38,
          "column": 9,
          "position": 568
        },
        "endLoc": {
          "line": 61,
          "column": 13,
          "position": 793
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 61,
        "end": 84,
        "startLoc": {
          "line": 61,
          "column": 16,
          "position": 920
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 1145
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n    }\n\n    const pagination = {\n      page: parsedParams.page,\n      limit: parsedParams.limit,\n      sort_field: parsedParams.sort_field,\n      sort_direction: parsedParams.sort_direction\n    };\n\n    const repository = new EnhancedPaintRepository(supabase);\n    const result = await repository.getUserCollections",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 77,
        "end": 88,
        "startLoc": {
          "line": 77,
          "column": 6,
          "position": 934
        },
        "endLoc": {
          "line": 88,
          "column": 19,
          "position": 1015
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 118,
        "end": 74,
        "startLoc": {
          "line": 118,
          "column": 16,
          "position": 1453
        },
        "endLoc": {
          "line": 74,
          "column": 14,
          "position": 846
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(user.id, filters, pagination);\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    // Calculate summary statistics",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 88,
        "end": 102,
        "startLoc": {
          "line": 88,
          "column": 19,
          "position": 1016
        },
        "endLoc": {
          "line": 102,
          "column": 32,
          "position": 1105
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 74,
        "end": 342,
        "startLoc": {
          "line": 74,
          "column": 14,
          "position": 847
        },
        "endLoc": {
          "line": 342,
          "column": 7,
          "position": 3094
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": result.pagination.total_count,\n        filters_applied: Object.keys(filters).filter(key => filters[key] !== undefined).length,\n        query_timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    console.error('GET /api/collections error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 121,
        "end": 128,
        "startLoc": {
          "line": 121,
          "column": 18,
          "position": 1393
        },
        "endLoc": {
          "line": 128,
          "column": 30,
          "position": 1471
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 165,
        "end": 172,
        "startLoc": {
          "line": 165,
          "column": 15,
          "position": 2037
        },
        "endLoc": {
          "line": 172,
          "column": 33,
          "position": 2115
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid query parameters',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const body = await request.json();\n    const collectionData",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 128,
        "end": 163,
        "startLoc": {
          "line": 128,
          "column": 30,
          "position": 1472
        },
        "endLoc": {
          "line": 163,
          "column": 15,
          "position": 1751
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 204,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 204,
          "column": 2,
          "position": 1875
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ") {\n      const existingDefault = await repository.getUserCollections(\n        user.id,\n        { is_default: true, archived: false },\n        { page: 1, limit: 1 }\n      );\n\n      if (existingDefault.data && existingDefault.data.length > 0)",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 168,
        "end": 175,
        "startLoc": {
          "line": 168,
          "column": 11,
          "position": 1790
        },
        "endLoc": {
          "line": 175,
          "column": 2,
          "position": 1871
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 174,
        "end": 181,
        "startLoc": {
          "line": 174,
          "column": 5,
          "position": 1705
        },
        "endLoc": {
          "line": 181,
          "column": 2,
          "position": 1786
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "\n    });\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json(\n",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 212,
        "end": 228,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2128
        },
        "endLoc": {
          "line": 228,
          "column": 1,
          "position": 2216
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 212,
        "end": 342,
        "startLoc": {
          "line": 212,
          "column": 3,
          "position": 2450
        },
        "endLoc": {
          "line": 342,
          "column": 2,
          "position": 3100
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": 500 }\n      );\n    }\n\n    return NextResponse.json(\n      {\n        data: result.data,\n        meta: {\n          created_at: result.data?.created_at,\n          collection_id",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 223,
        "end": 232,
        "startLoc": {
          "line": 223,
          "column": 7,
          "position": 2195
        },
        "endLoc": {
          "line": 232,
          "column": 14,
          "position": 2248
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 152,
        "end": 161,
        "startLoc": {
          "line": 152,
          "column": 2,
          "position": 1492
        },
        "endLoc": {
          "line": 161,
          "column": 8,
          "position": 1545
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid collection data'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 239,
        "end": 246,
        "startLoc": {
          "line": 239,
          "column": 31,
          "position": 2297
        },
        "endLoc": {
          "line": 246,
          "column": 26,
          "position": 2347
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\n// Bulk operations for collections",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 246,
        "end": 268,
        "startLoc": {
          "line": 246,
          "column": 26,
          "position": 2348
        },
        "endLoc": {
          "line": 268,
          "column": 35,
          "position": 2508
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "\nexport async function PUT(request: NextRequest) {\n  try {\n    const supabase = createServerSupabaseClient();\n    const user = await getCurrentUser(supabase);\n\n    const body = await request.json();\n    const { collection_ids",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 268,
        "end": 275,
        "startLoc": {
          "line": 268,
          "column": 35,
          "position": 2509
        },
        "endLoc": {
          "line": 275,
          "column": 15,
          "position": 2580
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 197,
        "end": 204,
        "startLoc": {
          "line": 197,
          "column": 28,
          "position": 1806
        },
        "endLoc": {
          "line": 204,
          "column": 10,
          "position": 1877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\n    }\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result.data,\n      meta: {\n        operation",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 332,
        "end": 350,
        "startLoc": {
          "line": 332,
          "column": 9,
          "position": 3108
        },
        "endLoc": {
          "line": 350,
          "column": 10,
          "position": 3214
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 327,
        "end": 247,
        "startLoc": {
          "line": 327,
          "column": 18,
          "position": 3012
        },
        "endLoc": {
          "line": 247,
          "column": 14,
          "position": 2262
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid bulk operation data'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 357,
        "end": 364,
        "startLoc": {
          "line": 357,
          "column": 30,
          "position": 3273
        },
        "endLoc": {
          "line": 364,
          "column": 30,
          "position": 3323
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 534
        },
        "endLoc": {
          "line": 66,
          "column": 19,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: { code: 'METHOD_NOT_ALLOWED', message: 'Use DELETE /api/collections/[id] for individual collection deletion'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 364,
        "end": 388,
        "startLoc": {
          "line": 364,
          "column": 30,
          "position": 3324
        },
        "endLoc": {
          "line": 388,
          "column": 70,
          "position": 3521
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 271,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 585
        },
        "endLoc": {
          "line": 271,
          "column": 60,
          "position": 2486
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": " operation()\n    performanceMonitor.endTimer(name, metadata)\n    return result\n  } catch (error) {\n    performanceMonitor.endTimer(name, { ...metadata, error: true })\n    throw error\n  }\n}\n\n// API call wrapper with performance tracking",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/utils/performance.ts",
        "start": 361,
        "end": 370,
        "startLoc": {
          "line": 361,
          "column": 2,
          "position": 2991
        },
        "endLoc": {
          "line": 370,
          "column": 46,
          "position": 3056
        }
      },
      "secondFile": {
        "name": "src/lib/utils/performance.ts",
        "start": 345,
        "end": 354,
        "startLoc": {
          "line": 345,
          "column": 6,
          "position": 2858
        },
        "endLoc": {
          "line": 354,
          "column": 7,
          "position": 2923
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\n      .single()\n\n    if (error) {\n      if (error.code === 'PGRST116') {\n        throw new Error('Session not found')\n      }\n      throw new Error(`Failed to update session: ",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/supabase/sessions.ts",
        "start": 276,
        "end": 283,
        "startLoc": {
          "line": 276,
          "column": 2,
          "position": 1926
        },
        "endLoc": {
          "line": 283,
          "column": 28,
          "position": 1979
        }
      },
      "secondFile": {
        "name": "src/lib/supabase/sessions.ts",
        "start": 205,
        "end": 212,
        "startLoc": {
          "line": 205,
          "column": 10,
          "position": 1433
        },
        "endLoc": {
          "line": 212,
          "column": 27,
          "position": 1486
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "> {\n    const user = await getCurrentUser()\n    if (!user) {\n      throw new Error('User not authenticated')\n    }\n\n    const { data, error } = await supabase\n      .from('mixing_sessions')\n      .select('*'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/supabase/sessions.ts",
        "start": 411,
        "end": 419,
        "startLoc": {
          "line": 411,
          "column": 2,
          "position": 2924
        },
        "endLoc": {
          "line": 419,
          "column": 4,
          "position": 2994
        }
      },
      "secondFile": {
        "name": "src/lib/supabase/sessions.ts",
        "start": 183,
        "end": 204,
        "startLoc": {
          "line": 183,
          "column": 20,
          "position": 1352
        },
        "endLoc": {
          "line": 204,
          "column": 8,
          "position": 1422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": " = await this.repository.getUserPaints(\n      userId,\n      {\n        collection_id: request.collection_id,\n        archived: false\n      },\n      { page: 1, limit: 1",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/services/enhanced-optimization-integration.ts",
        "start": 303,
        "end": 309,
        "startLoc": {
          "line": 303,
          "column": 18,
          "position": 2328
        },
        "endLoc": {
          "line": 309,
          "column": 2,
          "position": 2378
        }
      },
      "secondFile": {
        "name": "src/lib/services/enhanced-optimization-integration.ts",
        "start": 239,
        "end": 245,
        "startLoc": {
          "line": 239,
          "column": 13,
          "position": 1790
        },
        "endLoc": {
          "line": 245,
          "column": 3,
          "position": 1840
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": " = Date.now();\n    let enhancedResult: OptimizationResult | null = null;\n    let legacyResult: LegacyMixingFormula | null = null;\n\n    try {\n      enhancedResult",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/services/enhanced-optimization-integration.ts",
        "start": 436,
        "end": 441,
        "startLoc": {
          "line": 436,
          "column": 18,
          "position": 3291
        },
        "endLoc": {
          "line": 441,
          "column": 15,
          "position": 3342
        }
      },
      "secondFile": {
        "name": "src/lib/services/enhanced-optimization-integration.ts",
        "start": 74,
        "end": 79,
        "startLoc": {
          "line": 74,
          "column": 10,
          "position": 509
        },
        "endLoc": {
          "line": 79,
          "column": 39,
          "position": 560
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "] = indices.map(i => this.population.individuals[i].variables);\n    const best = this.population.best_individual.variables;\n\n    const trial: number[] = [];\n    for (let j = 0; j < this.availablePaints.length; j++) {\n      trial.push(best[j] + this.config.F * (r1[j] - r2[j]) ",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/mixing-optimization/differential-evolution.ts",
        "start": 466,
        "end": 471,
        "startLoc": {
          "line": 466,
          "column": 3,
          "position": 3630
        },
        "endLoc": {
          "line": 471,
          "column": 2,
          "position": 3751
        }
      },
      "secondFile": {
        "name": "src/lib/mixing-optimization/differential-evolution.ts",
        "start": 424,
        "end": 429,
        "startLoc": {
          "line": 424,
          "column": 3,
          "position": 3033
        },
        "endLoc": {
          "line": 429,
          "column": 2,
          "position": 3154
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": " {\n        issues: error.issues.map(issue => ({\n          path: issue.path.join('.'),\n          message: issue.message,\n          code: issue.code,\n        })),\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/middleware/error-handler.ts",
        "start": 200,
        "end": 206,
        "startLoc": {
          "line": 200,
          "column": 2,
          "position": 1628
        },
        "endLoc": {
          "line": 206,
          "column": 2,
          "position": 1688
        }
      },
      "secondFile": {
        "name": "src/lib/middleware/error-handler.ts",
        "start": 118,
        "end": 124,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 963
        },
        "endLoc": {
          "line": 124,
          "column": 2,
          "position": 1023
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "\n    for (let i = 0; i < data.length; i += 4) {\n      // Skip transparent pixels\n      if (data[i + 3] < 128) continue\n\n      const r = data[i]\n      const g = data[i + 1]\n      const b = data[i + 2]\n\n      // Quantize colors",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 195,
        "end": 204,
        "startLoc": {
          "line": 195,
          "column": 16,
          "position": 1845
        },
        "endLoc": {
          "line": 204,
          "column": 19,
          "position": 1947
        }
      },
      "secondFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 153,
        "end": 162,
        "startLoc": {
          "line": 153,
          "column": 48,
          "position": 1388
        },
        "endLoc": {
          "line": 162,
          "column": 44,
          "position": 1490
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "\n      const quantizedR = Math.floor(r / tolerance) * tolerance\n      const quantizedG = Math.floor(g / tolerance) * tolerance\n      const quantizedB = Math.floor(b / tolerance) * tolerance\n\n      const colorKey = `${quantizedR},${quantizedG},${quantizedB}`\n      colorMap.set(colorKey, (colorMap.get(colorKey) || 0) + 1)\n      ",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 204,
        "end": 211,
        "startLoc": {
          "line": 204,
          "column": 19,
          "position": 1948
        },
        "endLoc": {
          "line": 211,
          "column": 7,
          "position": 2063
        }
      },
      "secondFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 162,
        "end": 169,
        "startLoc": {
          "line": 162,
          "column": 44,
          "position": 1491
        },
        "endLoc": {
          "line": 169,
          "column": 5,
          "position": 1606
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": string | null\n          finish_type: 'matte' | 'satin' | 'semi_gloss' | 'gloss' | 'high_gloss'\n          lab_color: Json\n          rgb_color: Json\n          hex_color: string\n          optical_properties: Json\n          volume_ml: number\n          cost_per_ml: number\n          viscosity?",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 63,
        "end": 71,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 478
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 546
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 20,
        "end": 28,
        "startLoc": {
          "line": 20,
          "column": 11,
          "position": 135
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 203
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ": number\n          viscosity?: number | null\n          density_g_per_ml?: number | null\n          mixing_compatibility?: Json\n          mixing_restrictions?: Json\n          drying_time_minutes?: number | null\n          coverage_sqm_per_liter?: number | null\n          delta_e_tolerance?: number\n          color_stability_rating?: number\n          lightfastness_rating?: number | null\n          times_used?: number\n          total_volume_mixed?: number\n          last_used_at?: string | null\n          color_accuracy_verified?: boolean\n          optical_properties_calibrated?: boolean\n          calibration_date?: string | null\n          quality_control_notes?: string | null\n          tags?: Json\n          notes?: string | null\n          purchase_date?: string | null\n          expiry_date?: string | null\n          supplier?: string | null\n          created_at?: string\n          updated_at?: string\n          version?: number\n          archived?: boolean\n          archived_at?: string | null\n          archived_reason?: string | null\n        }\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 113,
        "end": 142,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 920
        },
        "endLoc": {
          "line": 142,
          "column": 14,
          "position": 1173
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 70,
        "end": 99,
        "startLoc": {
          "line": 70,
          "column": 12,
          "position": 540
        },
        "endLoc": {
          "line": 99,
          "column": 7,
          "position": 793
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": string\n          description?: string | null\n          color_space?: 'sRGB' | 'Adobe_RGB' | 'ProPhoto_RGB' | 'Lab'\n          is_default?: boolean\n          paint_count?: number\n          total_volume_ml?: number\n          average_cost_per_ml?: number\n          tags?: Json\n          created_at?: string\n          updated_at?: string\n          archived?: boolean\n        }\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 193,
        "end": 205,
        "startLoc": {
          "line": 193,
          "column": 2,
          "position": 1511
        },
        "endLoc": {
          "line": 205,
          "column": 14,
          "position": 1605
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 178,
        "end": 190,
        "startLoc": {
          "line": 178,
          "column": 5,
          "position": 1395
        },
        "endLoc": {
          "line": 190,
          "column": 7,
          "position": 1489
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": string\n          user_id: string\n          target_color: Json\n          achieved_color: Json\n          delta_e_achieved: number\n          paint_volumes: Json\n          total_volume_ml: number\n          mixing_time_minutes: number\n          algorithm_used: string\n          iterations_completed: number\n          optimization_time_ms: number\n          convergence_achieved: boolean\n          color_accuracy_score?",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 244,
        "end": 256,
        "startLoc": {
          "line": 244,
          "column": 2,
          "position": 1870
        },
        "endLoc": {
          "line": 256,
          "column": 2,
          "position": 1942
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 217,
        "end": 229,
        "startLoc": {
          "line": 217,
          "column": 3,
          "position": 1670
        },
        "endLoc": {
          "line": 229,
          "column": 2,
          "position": 1742
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ": boolean\n          color_accuracy_score?: number | null\n          mixing_efficiency_score?: number | null\n          cost_effectiveness_score?: number | null\n          project_name?: string | null\n          surface_type?: string | null\n          application_method?: string | null\n          environmental_conditions?: Json | null\n          user_satisfaction_rating?: number | null\n          notes?: string | null\n          would_use_again?: boolean | null\n          created_at?: string\n          updated_at?: string\n          archived?: boolean\n        }\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 282,
        "end": 297,
        "startLoc": {
          "line": 282,
          "column": 2,
          "position": 2160
        },
        "endLoc": {
          "line": 297,
          "column": 14,
          "position": 2299
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 255,
        "end": 270,
        "startLoc": {
          "line": 255,
          "column": 21,
          "position": 1936
        },
        "endLoc": {
          "line": 270,
          "column": 7,
          "position": 2075
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "\n  const a = (k + s) / s;\n  const b = Math.sqrt(a * a - 1);\n  const opacityInfinite = (a - b) / (a + b);\n\n  if",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/color-science/kubelka-munk-enhanced.ts",
        "start": 479,
        "end": 484,
        "startLoc": {
          "line": 479,
          "column": 1,
          "position": 4288
        },
        "endLoc": {
          "line": 484,
          "column": 3,
          "position": 4360
        }
      },
      "secondFile": {
        "name": "src/lib/color-science/kubelka-munk-enhanced.ts",
        "start": 385,
        "end": 390,
        "startLoc": {
          "line": 385,
          "column": 44,
          "position": 3309
        },
        "endLoc": {
          "line": 390,
          "column": 32,
          "position": 3381
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "\n  const c1 = Math.sqrt(lab1.a * lab1.a + lab1.b * lab1.b);\n  const c2 = Math.sqrt(lab2.a * lab2.a + lab2.b * lab2.b);\n  const cAvg = (c1 + c2) / 2;\n\n  // Step 2: Calculate G factor for a* modification",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/color-science/delta-e-ciede2000.ts",
        "start": 93,
        "end": 98,
        "startLoc": {
          "line": 93,
          "column": 40,
          "position": 495
        },
        "endLoc": {
          "line": 98,
          "column": 50,
          "position": 588
        }
      },
      "secondFile": {
        "name": "src/lib/color-science/lab-enhanced.ts",
        "start": 209,
        "end": 214,
        "startLoc": {
          "line": 209,
          "column": 28,
          "position": 2350
        },
        "endLoc": {
          "line": 214,
          "column": 22,
          "position": 2443
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "\n  const c1Prime = Math.sqrt(a1Prime * a1Prime + lab1.b * lab1.b);\n  const c2Prime = Math.sqrt(a2Prime * a2Prime + lab2.b * lab2.b);\n  const cPrimeAvg = (c1Prime + c2Prime) / 2;\n\n  // Step 4: Calculate modified hue angles",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/color-science/delta-e-ciede2000.ts",
        "start": 104,
        "end": 109,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 692
        },
        "endLoc": {
          "line": 109,
          "column": 41,
          "position": 777
        }
      },
      "secondFile": {
        "name": "src/lib/color-science/lab-enhanced.ts",
        "start": 221,
        "end": 226,
        "startLoc": {
          "line": 221,
          "column": 29,
          "position": 2555
        },
        "endLoc": {
          "line": 226,
          "column": 26,
          "position": 2640
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "() {\n  const cookieStore = await cookies()\n\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Missing Supabase environment variables')\n  }\n\n  return createServerClient<Database>(supabaseUrl, supabaseAnonKey, {\n    cookies: {\n      getAll() {\n        return cookieStore.getAll()\n      },\n      setAll(cookiesToSet) {\n        try {\n          cookiesToSet.forEach(({ name, value, options }) =>\n            cookieStore.set(name, value, options)\n          )\n        } catch (",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/auth/supabase-server.ts",
        "start": 62,
        "end": 82,
        "startLoc": {
          "line": 62,
          "column": 25,
          "position": 259
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 432
        }
      },
      "secondFile": {
        "name": "src/lib/auth/supabase-server.ts",
        "start": 31,
        "end": 51,
        "startLoc": {
          "line": 31,
          "column": 28,
          "position": 51
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 224
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "()\n\n  const {\n    data: { session },\n    error\n  } = await supabase.auth.getSession()\n\n  if (error) {\n    console.error('Get session error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/auth/supabase-client.ts",
        "start": 111,
        "end": 119,
        "startLoc": {
          "line": 111,
          "column": 13,
          "position": 516
        },
        "endLoc": {
          "line": 119,
          "column": 21,
          "position": 569
        }
      },
      "secondFile": {
        "name": "src/lib/auth/supabase-server.ts",
        "start": 116,
        "end": 124,
        "startLoc": {
          "line": 116,
          "column": 28,
          "position": 522
        },
        "endLoc": {
          "line": 124,
          "column": 28,
          "position": 575
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "()\n\n  const {\n    data: { user },\n    error\n  } = await supabase.auth.getUser()\n\n  if (error) {\n    console.error('Get user error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/auth/supabase-client.ts",
        "start": 132,
        "end": 140,
        "startLoc": {
          "line": 132,
          "column": 13,
          "position": 634
        },
        "endLoc": {
          "line": 140,
          "column": 18,
          "position": 687
        }
      },
      "secondFile": {
        "name": "src/lib/auth/supabase-server.ts",
        "start": 144,
        "end": 152,
        "startLoc": {
          "line": 144,
          "column": 28,
          "position": 694
        },
        "endLoc": {
          "line": 152,
          "column": 25,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "()\n\n  const {\n    data: { session },\n    error\n  } = await supabase.auth.exchangeCodeForSession(code)\n\n  if (error) {\n    console.error('Exchange code error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/auth/supabase-client.ts",
        "start": 202,
        "end": 210,
        "startLoc": {
          "line": 202,
          "column": 13,
          "position": 976
        },
        "endLoc": {
          "line": 210,
          "column": 23,
          "position": 1030
        }
      },
      "secondFile": {
        "name": "src/lib/auth/supabase-server.ts",
        "start": 229,
        "end": 237,
        "startLoc": {
          "line": 229,
          "column": 25,
          "position": 1096
        },
        "endLoc": {
          "line": 237,
          "column": 30,
          "position": 1150
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": " {\n  const now = Date.now()\n  const windowStart = now - RATE_LIMIT_WINDOW_MS\n\n  // Get existing record or create empty one\n  const record = rateLimitCache.get(ipAddress) || { timestamps: [] }\n\n  // Prune old timestamps and add new one",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/auth/rate-limit.ts",
        "start": 104,
        "end": 111,
        "startLoc": {
          "line": 104,
          "column": 5,
          "position": 356
        },
        "endLoc": {
          "line": 111,
          "column": 40,
          "position": 417
        }
      },
      "secondFile": {
        "name": "src/lib/auth/rate-limit.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 110
        },
        "endLoc": {
          "line": 66,
          "column": 65,
          "position": 171
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "<T>(\n  endpoint: string,\n  body: unknown,\n  signal?: AbortSignal\n): Promise<APIResponse<T>> {\n  return apiRequest<T>(endpoint, { method: 'PUT'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/api/client.ts",
        "start": 107,
        "end": 112,
        "startLoc": {
          "line": 107,
          "column": 7,
          "position": 676
        },
        "endLoc": {
          "line": 112,
          "column": 6,
          "position": 730
        }
      },
      "secondFile": {
        "name": "src/lib/api/client.ts",
        "start": 96,
        "end": 101,
        "startLoc": {
          "line": 96,
          "column": 8,
          "position": 599
        },
        "endLoc": {
          "line": 101,
          "column": 7,
          "position": 653
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "*</label>\n            <input\n              type=\"number\"\n              min=\"-128\"\n              max=\"127\"\n              step=\"0.1\"\n              value={colorInputs.b}\n              onChange={(e) => handleLABInput('b', e.target.value)}\n              disabled={disabled}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <div className=\"text-xs text-gray-500 mt-1\">-128 to 127</div>\n          </div>\n        ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 316,
        "end": 329,
        "startLoc": {
          "line": 316,
          "column": 2,
          "position": 3194
        },
        "endLoc": {
          "line": 329,
          "column": 9,
          "position": 3295
        }
      },
      "secondFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 302,
        "end": 315,
        "startLoc": {
          "line": 302,
          "column": 2,
          "position": 3077
        },
        "endLoc": {
          "line": 315,
          "column": 11,
          "position": 3178
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"255\"\n              value={colorInputs.g}\n              onChange={(e) => handleRGBInput('g', e.target.value)}\n              disabled={disabled}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Blue",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 347,
        "end": 359,
        "startLoc": {
          "line": 347,
          "column": 6,
          "position": 3438
        },
        "endLoc": {
          "line": 359,
          "column": 5,
          "position": 3527
        }
      },
      "secondFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 335,
        "end": 347,
        "startLoc": {
          "line": 335,
          "column": 4,
          "position": 3348
        },
        "endLoc": {
          "line": 347,
          "column": 6,
          "position": 3437
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ">\n                    <button\n                      onClick={() => {\n                        onEdit?.(session.id)\n                        setIsMenuOpen(false)\n                      }}\n                      className=\"flex items-center gap-2 w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/session-manager/SessionCard.tsx",
        "start": 192,
        "end": 201,
        "startLoc": {
          "line": 192,
          "column": 7,
          "position": 1721
        },
        "endLoc": {
          "line": 201,
          "column": 119,
          "position": 1815
        }
      },
      "secondFile": {
        "name": "src/components/session-manager/SessionCard.tsx",
        "start": 179,
        "end": 188,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 1579
        },
        "endLoc": {
          "line": 188,
          "column": 33,
          "position": 1673
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "}\n          <div className=\"space-y-3\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={filters.available_only}\n                onChange={(e) => handleFiltersChange({ available_only: e.target.checked })}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">Available",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/optimization-controls.tsx",
        "start": 459,
        "end": 468,
        "startLoc": {
          "line": 459,
          "column": 22,
          "position": 3845
        },
        "endLoc": {
          "line": 468,
          "column": 10,
          "position": 3928
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-controls.tsx",
        "start": 315,
        "end": 324,
        "startLoc": {
          "line": 315,
          "column": 27,
          "position": 2642
        },
        "endLoc": {
          "line": 324,
          "column": 8,
          "position": 2725
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</span>\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={filters.verified_only}\n                onChange={(e) => handleFiltersChange({ verified_only: e.target.checked })}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">Color",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/optimization-controls.tsx",
        "start": 468,
        "end": 477,
        "startLoc": {
          "line": 468,
          "column": 2,
          "position": 3939
        },
        "endLoc": {
          "line": 477,
          "column": 6,
          "position": 4018
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-controls.tsx",
        "start": 324,
        "end": 333,
        "startLoc": {
          "line": 324,
          "column": 5,
          "position": 2734
        },
        "endLoc": {
          "line": 333,
          "column": 8,
          "position": 2813
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "-verified paints only</span>\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={filters.calibrated_only}\n                onChange={(e) => handleFiltersChange({ calibrated_only: e.target.checked })}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">Calibrated",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/optimization-controls.tsx",
        "start": 477,
        "end": 486,
        "startLoc": {
          "line": 477,
          "column": 6,
          "position": 4019
        },
        "endLoc": {
          "line": 486,
          "column": 11,
          "position": 4104
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-controls.tsx",
        "start": 324,
        "end": 333,
        "startLoc": {
          "line": 324,
          "column": 6,
          "position": 2728
        },
        "endLoc": {
          "line": 333,
          "column": 8,
          "position": 2813
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`bg-white rounded-lg border border-gray-200 p-4 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">Color",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/mixing-calculator/AccuracyIndicator.tsx",
        "start": 102,
        "end": 112,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 761
        },
        "endLoc": {
          "line": 112,
          "column": 6,
          "position": 825
        }
      },
      "secondFile": {
        "name": "src/components/mixing-calculator/RatioDisplay.tsx",
        "start": 71,
        "end": 81,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 653
        },
        "endLoc": {
          "line": 81,
          "column": 6,
          "position": 717
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ")\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error?.message || 'Optimization failed'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/dashboard/paint-mixing-dashboard.tsx",
        "start": 149,
        "end": 155,
        "startLoc": {
          "line": 149,
          "column": 20,
          "position": 1292
        },
        "endLoc": {
          "line": 155,
          "column": 22,
          "position": 1345
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 208,
        "end": 214,
        "startLoc": {
          "line": 208,
          "column": 9,
          "position": 2029
        },
        "endLoc": {
          "line": 214,
          "column": 23,
          "position": 2082
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\n  sortField: string;\n  sortDirection: 'asc' | 'desc';\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n  };\n}\n\ninterface CollectionFormData",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 18,
        "end": 28,
        "startLoc": {
          "line": 18,
          "column": 23,
          "position": 148
        },
        "endLoc": {
          "line": 28,
          "column": 19,
          "position": 204
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 24,
        "end": 34,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 219
        },
        "endLoc": {
          "line": 34,
          "column": 14,
          "position": 275
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": " = useCallback(async () => {\n    setState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const params = new URLSearchParams({\n        page: state.pagination.page.toString(),\n        limit: state.pagination.limit.toString(),\n        sort_field: state.sortField,\n        sort_direction: state.sortDirection,",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 86,
        "end": 94,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 668
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 777
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 96,
        "end": 105,
        "startLoc": {
          "line": 96,
          "column": 11,
          "position": 751
        },
        "endLoc": {
          "line": 105,
          "column": 1,
          "position": 860
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ": result.data || [],\n        pagination: {\n          ...prev.pagination,\n          total: result.pagination?.total_count || 0\n        },\n        loading: false\n      }));\n\n      ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 113,
        "end": 121,
        "startLoc": {
          "line": 113,
          "column": 12,
          "position": 1039
        },
        "endLoc": {
          "line": 121,
          "column": 7,
          "position": 1096
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 131,
        "end": 139,
        "startLoc": {
          "line": 131,
          "column": 7,
          "position": 1313
        },
        "endLoc": {
          "line": 139,
          "column": 5,
          "position": 1370
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "\n\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        loading: false\n      }));\n    }\n  }, [state.pagination.page, state.pagination.limit, state.sortField, state.sortDirection, state.filters,",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 136,
        "end": 145,
        "startLoc": {
          "line": 136,
          "column": 2,
          "position": 1277
        },
        "endLoc": {
          "line": 145,
          "column": 2,
          "position": 1373
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 137,
        "end": 146,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1368
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1464
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ", value: any) => {\n    setState(prev => ({\n      ...prev,\n      filters: { ...prev.filters, [field]: value },\n      pagination: { ...prev.pagination, page: 1 }\n    }));\n  };\n\n  // Handle sorting\n  const handleSort = (field: string) => {\n    setState(prev => ({\n      ...prev,\n      sortField: field,\n      sortDirection: prev.sortField === field && prev.sortDirection === 'asc' ? 'desc' : 'asc',\n      pagination: { ...prev.pagination, page: 1 }\n    }));\n  };\n\n  // Handle form submission\n  const handleFormSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const url = editingCollection",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 158,
        "end": 181,
        "startLoc": {
          "line": 158,
          "column": 23,
          "position": 1463
        },
        "endLoc": {
          "line": 181,
          "column": 18,
          "position": 1692
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 179,
        "end": 202,
        "startLoc": {
          "line": 179,
          "column": 13,
          "position": 1721
        },
        "endLoc": {
          "line": 202,
          "column": 13,
          "position": 1950
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": " ? 'PATCH' : 'POST';\n\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData)\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error?.message || 'Failed to save collection'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 182,
        "end": 193,
        "startLoc": {
          "line": 182,
          "column": 18,
          "position": 1717
        },
        "endLoc": {
          "line": 193,
          "column": 28,
          "position": 1824
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 203,
        "end": 214,
        "startLoc": {
          "line": 203,
          "column": 13,
          "position": 1975
        },
        "endLoc": {
          "line": 214,
          "column": 23,
          "position": 2082
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "\n      });\n\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      }));\n    }\n  };\n\n  // Handle collection deletion",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 212,
        "end": 223,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 1929
        },
        "endLoc": {
          "line": 223,
          "column": 30,
          "position": 1997
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 238,
        "end": 249,
        "startLoc": {
          "line": 238,
          "column": 13,
          "position": 2221
        },
        "endLoc": {
          "line": 249,
          "column": 31,
          "position": 2289
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error?.message || 'Failed to delete collection'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 231,
        "end": 237,
        "startLoc": {
          "line": 231,
          "column": 9,
          "position": 2078
        },
        "endLoc": {
          "line": 237,
          "column": 30,
          "position": 2130
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 208,
        "end": 214,
        "startLoc": {
          "line": 208,
          "column": 2,
          "position": 2030
        },
        "endLoc": {
          "line": 214,
          "column": 23,
          "position": 2082
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ");\n\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      }));\n    }\n  };\n\n  // Format statistics display",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 240,
        "end": 250,
        "startLoc": {
          "line": 240,
          "column": 2,
          "position": 2143
        },
        "endLoc": {
          "line": 250,
          "column": 29,
          "position": 2208
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 239,
        "end": 249,
        "startLoc": {
          "line": 239,
          "column": 2,
          "position": 2224
        },
        "endLoc": {
          "line": 249,
          "column": 31,
          "position": 2289
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`collection-manager bg-white rounded-lg shadow-lg ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Paint Collections",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 266,
        "end": 277,
        "startLoc": {
          "line": 266,
          "column": 12,
          "position": 2409
        },
        "endLoc": {
          "line": 277,
          "column": 12,
          "position": 2491
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 273,
        "end": 284,
        "startLoc": {
          "line": 273,
          "column": 7,
          "position": 2513
        },
        "endLoc": {
          "line": 284,
          "column": 8,
          "position": 2595
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ">\n          </div>\n          <div>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={state.filters.archived}\n                onChange={(e) => handleFilterChange('archived', e.target.checked)}\n                className=\"mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"text-sm text-gray-700\">Show",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 329,
        "end": 339,
        "startLoc": {
          "line": 329,
          "column": 6,
          "position": 2969
        },
        "endLoc": {
          "line": 339,
          "column": 5,
          "position": 3051
        }
      },
      "secondFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 318,
        "end": 328,
        "startLoc": {
          "line": 318,
          "column": 7,
          "position": 2877
        },
        "endLoc": {
          "line": 328,
          "column": 8,
          "position": 2959
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\n      </div>\n\n      {/* Error display */}\n      {state.error && (\n        <div className=\"p-4 bg-red-50 border-l-4 border-red-400 text-red-700\">\n          {state.error}\n        </div>\n      )}\n\n      {/* Collections grid */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 342,
        "end": 352,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 3072
        },
        "endLoc": {
          "line": 352,
          "column": 23,
          "position": 3124
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 402,
        "end": 412,
        "startLoc": {
          "line": 402,
          "column": 2,
          "position": 3539
        },
        "endLoc": {
          "line": 412,
          "column": 17,
          "position": 3591
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        {/* Pagination */}\n        {state.pagination.total > state.pagination.limit && (\n          <div className=\"mt-6 flex items-center justify-between\">\n            <div className=\"text-sm text-gray-700\">\n              Showing {((state.pagination.page - 1) * state.pagination.limit) + 1} to{' '}\n              {Math.min(state.pagination.page * state.pagination.limit, state.pagination.total)} of{' '}\n              {state.pagination.total} collections",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 471,
        "end": 484,
        "startLoc": {
          "line": 471,
          "column": 2,
          "position": 4247
        },
        "endLoc": {
          "line": 484,
          "column": 12,
          "position": 4398
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 504,
        "end": 517,
        "startLoc": {
          "line": 504,
          "column": 2,
          "position": 4421
        },
        "endLoc": {
          "line": 517,
          "column": 7,
          "position": 4572
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "\n            </div>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => setState(prev => ({\n                  ...prev,\n                  pagination: { ...prev.pagination, page: prev.pagination.page - 1 }\n                }))}\n                disabled={state.pagination.page <= 1}\n                className=\"px-3 py-2 text-sm text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Previous\n              </button>\n              <button\n                onClick={() => setState(prev => ({\n                  ...prev,\n                  pagination: { ...prev.pagination, page: prev.pagination.page + 1 }\n                }))}\n                disabled={state.pagination.page >= Math.ceil(state.pagination.total / state.pagination.limit)}\n                className=\"px-3 py-2 text-sm text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Create/Edit Collection Modal */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 484,
        "end": 512,
        "startLoc": {
          "line": 484,
          "column": 12,
          "position": 4399
        },
        "endLoc": {
          "line": 512,
          "column": 35,
          "position": 4637
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 517,
        "end": 545,
        "startLoc": {
          "line": 517,
          "column": 7,
          "position": 4573
        },
        "endLoc": {
          "line": 545,
          "column": 27,
          "position": 4811
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "\n                </div>\n\n                <div className=\"flex justify-end space-x-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowCreateForm(false);\n                      setEditingCollection(null);\n                    }}\n                    className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n                  >\n                    {editingCollection",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 569,
        "end": 587,
        "startLoc": {
          "line": 569,
          "column": 2,
          "position": 5195
        },
        "endLoc": {
          "line": 587,
          "column": 18,
          "position": 5284
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 636,
        "end": 654,
        "startLoc": {
          "line": 636,
          "column": 3,
          "position": 5631
        },
        "endLoc": {
          "line": 654,
          "column": 13,
          "position": 5720
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "}) {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSignOut = async () => {\n    setIsLoading(true)\n\n    try {\n      const { error } = await signOut()\n\n      if (!error) {\n        router.push('/auth/signin')\n        router.refresh()\n      }\n    } catch (err) {\n      console.error('Sign-out error:', err)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <button\n      onClick={handleSignOut}\n      disabled={isLoading}\n      data-testid=\"signout-menu-item",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/auth/SignOutButton.tsx",
        "start": 189,
        "end": 214,
        "startLoc": {
          "line": 189,
          "column": 2,
          "position": 1061
        },
        "endLoc": {
          "line": 214,
          "column": 18,
          "position": 1235
        }
      },
      "secondFile": {
        "name": "src/components/auth/SignOutButton.tsx",
        "start": 140,
        "end": 165,
        "startLoc": {
          "line": 140,
          "column": 1,
          "position": 785
        },
        "endLoc": {
          "line": 165,
          "column": 20,
          "position": 959
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": " : undefined}\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg\n                     focus:ring-2 focus:ring-blue-500 focus:border-blue-500\n                     dark:bg-gray-700 dark:text-white\n                     disabled:opacity-50 disabled:cursor-not-allowed\n                     aria-[invalid=true]:border-red-500\"\n          {...register('password'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/auth/EmailSigninForm.tsx",
        "start": 191,
        "end": 197,
        "startLoc": {
          "line": 191,
          "column": 17,
          "position": 1341
        },
        "endLoc": {
          "line": 197,
          "column": 11,
          "position": 1456
        }
      },
      "secondFile": {
        "name": "src/components/auth/EmailSigninForm.tsx",
        "start": 161,
        "end": 167,
        "startLoc": {
          "line": 161,
          "column": 14,
          "position": 1062
        },
        "endLoc": {
          "line": 167,
          "column": 8,
          "position": 1177
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": " {\n  onChange?: (color: ColorValue) => void;\n  onColorChange: (color: ColorValue) => void;\n  disabled: boolean;\n  className?: string;\n}\n\n// ==================== Hook Return Types ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/types.ts",
        "start": 273,
        "end": 280,
        "startLoc": {
          "line": 273,
          "column": 14,
          "position": 1730
        },
        "endLoc": {
          "line": 280,
          "column": 63,
          "position": 1784
        }
      },
      "secondFile": {
        "name": "src/types/types.ts",
        "start": 266,
        "end": 273,
        "startLoc": {
          "line": 266,
          "column": 17,
          "position": 1671
        },
        "endLoc": {
          "line": 273,
          "column": 7,
          "position": 1725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "> => {\n    setState(prev => ({ ...prev, error: null }))\n\n    try {\n      const response = await fetch(`/api/sessions/${sessionId}`, {\n        method: 'DELETE'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/use-sessions.ts",
        "start": 176,
        "end": 181,
        "startLoc": {
          "line": 176,
          "column": 5,
          "position": 1554
        },
        "endLoc": {
          "line": 181,
          "column": 9,
          "position": 1613
        }
      },
      "secondFile": {
        "name": "src/hooks/use-sessions.ts",
        "start": 140,
        "end": 145,
        "startLoc": {
          "line": 140,
          "column": 12,
          "position": 1240
        },
        "endLoc": {
          "line": 145,
          "column": 8,
          "position": 1299
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n      }))\n    } catch (err) {\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        error: err instanceof Error ? err.message : 'Failed to fetch paint colors'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/use-paint-colors.ts",
        "start": 66,
        "end": 72,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 555
        },
        "endLoc": {
          "line": 72,
          "column": 31,
          "position": 613
        }
      },
      "secondFile": {
        "name": "src/hooks/use-sessions.ts",
        "start": 89,
        "end": 95,
        "startLoc": {
          "line": 89,
          "column": 9,
          "position": 803
        },
        "endLoc": {
          "line": 95,
          "column": 27,
          "position": 861
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "\n    } catch (err) {\n      setState(prev => ({\n        ...prev,\n        isProcessing: false,\n        error: err instanceof Error ? err.message : 'Failed to extract color'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/use-image-processing.ts",
        "start": 159,
        "end": 164,
        "startLoc": {
          "line": 159,
          "column": 15,
          "position": 1459
        },
        "endLoc": {
          "line": 164,
          "column": 26,
          "position": 1511
        }
      },
      "secondFile": {
        "name": "src/hooks/use-image-processing.ts",
        "start": 124,
        "end": 129,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1165
        },
        "endLoc": {
          "line": 129,
          "column": 26,
          "position": 1217
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "),\n    mode: 'onSubmit'\n  })\n\n  // Check lockout when component mounts and update countdown\n  useEffect(() => {\n    if (!isLocked) return\n\n    const interval = setInterval(() => {\n      const email = getValues('email')\n      if (!email) return\n\n      const updatedLockout = checkLocalLockout(email)\n      setIsLocked(updatedLockout.isLocked)\n      setLockoutMinutes(updatedLockout.minutesRemaining)\n\n      if (!updatedLockout.isLocked) {\n        clearInterval(interval)\n      }\n    }, 60000) // Update every minute\n\n    return () => clearInterval(interval)\n  }, [isLocked, getValues])\n\n  const onSubmit = async (data: LoginFormData",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 75,
        "end": 99,
        "startLoc": {
          "line": 75,
          "column": 7,
          "position": 509
        },
        "endLoc": {
          "line": 99,
          "column": 14,
          "position": 685
        }
      },
      "secondFile": {
        "name": "src/components/auth/EmailSigninForm.tsx",
        "start": 48,
        "end": 72,
        "startLoc": {
          "line": 48,
          "column": 18,
          "position": 291
        },
        "endLoc": {
          "line": 72,
          "column": 17,
          "position": 467
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": " : undefined}\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg\n                     bg-white dark:bg-gray-800 text-gray-900 dark:text-white\n                     focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\n                     disabled:opacity-50 disabled:cursor-not-allowed\n                     aria-[invalid=true]:border-red-500\"\n        />\n        {errors.password",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 223,
        "end": 230,
        "startLoc": {
          "line": 223,
          "column": 17,
          "position": 1711
        },
        "endLoc": {
          "line": 230,
          "column": 9,
          "position": 1843
        }
      },
      "secondFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 190,
        "end": 197,
        "startLoc": {
          "line": 190,
          "column": 14,
          "position": 1412
        },
        "endLoc": {
          "line": 197,
          "column": 6,
          "position": 1544
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center gap-3\">\n              <div",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/page.tsx",
        "start": 192,
        "end": 201,
        "startLoc": {
          "line": 192,
          "column": 2,
          "position": 1743
        },
        "endLoc": {
          "line": 201,
          "column": 4,
          "position": 1812
        }
      },
      "secondFile": {
        "name": "src/app/history/page.tsx",
        "start": 128,
        "end": 137,
        "startLoc": {
          "line": 128,
          "column": 2,
          "position": 1202
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1271
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center gap-2\">\n              <svg className=\"w-5 h-5 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n              <p className=\"text-sm text-red-600\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Loading State */",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/page.tsx",
        "start": 447,
        "end": 465,
        "startLoc": {
          "line": 447,
          "column": 2,
          "position": 3699
        },
        "endLoc": {
          "line": 465,
          "column": 20,
          "position": 3822
        }
      },
      "secondFile": {
        "name": "src/app/history/page.tsx",
        "start": 195,
        "end": 213,
        "startLoc": {
          "line": 195,
          "column": 2,
          "position": 1767
        },
        "endLoc": {
          "line": 213,
          "column": 20,
          "position": 1890
        }
      }
    }
  ],
  "filename": "/home/davistroy/.npm/_npx/652ead47bf63fe99/node_modules/@jscpd/html-reporter/dist/templates/main.pug"
}