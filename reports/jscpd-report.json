{
  "statistics": {
    "detectionDate": "2025-10-03T12:45:48.850Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/app/api/auth/admin/clear-lockout/route.ts": {
            "lines": 59,
            "tokens": 353,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/sessions/[id]/route.ts": {
            "lines": 216,
            "tokens": 1654,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 148,
            "duplicatedTokens": 1232,
            "percentage": 68.52,
            "percentageTokens": 74.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/paints/[id]/route.ts": {
            "lines": 235,
            "tokens": 1969,
            "sources": 1,
            "clones": 25,
            "duplicatedLines": 463,
            "duplicatedTokens": 3607,
            "percentage": 197.02,
            "percentageTokens": 183.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/image/extract-color/route.ts": {
            "lines": 246,
            "tokens": 2086,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 79,
            "duplicatedTokens": 590,
            "percentage": 32.11,
            "percentageTokens": 28.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/collections/[id]/route.ts": {
            "lines": 382,
            "tokens": 3409,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 255,
            "duplicatedTokens": 2071,
            "percentage": 66.75,
            "percentageTokens": 60.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/signout/route.ts": {
            "lines": 119,
            "tokens": 670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/rate-limit-status/route.ts": {
            "lines": 35,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/lockout-status/route.ts": {
            "lines": 64,
            "tokens": 462,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/email-signin/route.ts": {
            "lines": 199,
            "tokens": 1164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/callback/route.ts": {
            "lines": 116,
            "tokens": 754,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/__tests__/tpe-hybrid.test.ts": {
            "lines": 636,
            "tokens": 6096,
            "sources": 1,
            "clones": 44,
            "duplicatedLines": 619,
            "duplicatedTokens": 5785,
            "percentage": 97.33,
            "percentageTokens": 94.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/__tests__/differential-evolution.test.ts": {
            "lines": 723,
            "tokens": 6015,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 303,
            "duplicatedTokens": 2531,
            "percentage": 41.91,
            "percentageTokens": 42.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/database/models/enhanced-paint.ts": {
            "lines": 384,
            "tokens": 2492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/__tests__/kubelka-munk-enhanced.test.ts": {
            "lines": 482,
            "tokens": 5808,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/sessions/route.ts": {
            "lines": 283,
            "tokens": 2629,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 71,
            "duplicatedTokens": 741,
            "percentage": 25.09,
            "percentageTokens": 28.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/ratio-predict/route.ts": {
            "lines": 194,
            "tokens": 1469,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 39,
            "duplicatedTokens": 295,
            "percentage": 20.1,
            "percentageTokens": 20.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/paints/route.ts": {
            "lines": 273,
            "tokens": 2515,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 226,
            "duplicatedTokens": 1825,
            "percentage": 82.78,
            "percentageTokens": 72.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/optimize/route.ts": {
            "lines": 396,
            "tokens": 3872,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 70,
            "duplicatedTokens": 666,
            "percentage": 17.68,
            "percentageTokens": 17.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/mixing-history/route.ts": {
            "lines": 340,
            "tokens": 3517,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 164,
            "duplicatedTokens": 1627,
            "percentage": 48.24,
            "percentageTokens": 46.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/color-match/route.ts": {
            "lines": 267,
            "tokens": 2281,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 33,
            "duplicatedTokens": 300,
            "percentage": 12.36,
            "percentageTokens": 13.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/collections/route.ts": {
            "lines": 394,
            "tokens": 3594,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 176,
            "duplicatedTokens": 1494,
            "percentage": 44.67,
            "percentageTokens": 41.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/workers/optimization-client.ts": {
            "lines": 494,
            "tokens": 4173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/workers/color-optimization.worker.ts": {
            "lines": 376,
            "tokens": 3469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/utils/performance.ts": {
            "lines": 421,
            "tokens": 3463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/types/index.ts": {
            "lines": 215,
            "tokens": 1009,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/testing/optimization-fixtures.ts": {
            "lines": 209,
            "tokens": 1644,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/sessions.ts": {
            "lines": 471,
            "tokens": 3369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/server.ts": {
            "lines": 89,
            "tokens": 481,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 182,
            "percentage": 25.84,
            "percentageTokens": 37.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/route-handler.ts": {
            "lines": 85,
            "tokens": 458,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 182,
            "percentage": 27.06,
            "percentageTokens": 39.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/client.ts": {
            "lines": 104,
            "tokens": 557,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase/admin.ts": {
            "lines": 48,
            "tokens": 157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/services/enhanced-optimization-integration.ts": {
            "lines": 484,
            "tokens": 3755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/monitoring/performance-metrics.ts": {
            "lines": 429,
            "tokens": 3698,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/monitoring/error-handling.ts": {
            "lines": 505,
            "tokens": 3872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/mixing-optimization/differential-evolution.ts": {
            "lines": 776,
            "tokens": 6846,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 244,
            "percentage": 1.29,
            "percentageTokens": 3.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/mixing-optimization/constraints.ts": {
            "lines": 363,
            "tokens": 3605,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/mixing-optimization/constraint-utils.ts": {
            "lines": 173,
            "tokens": 1003,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/middleware/error-handler.ts": {
            "lines": 280,
            "tokens": 2327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/image-processing/canvas-utils.ts": {
            "lines": 308,
            "tokens": 3043,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 28,
            "duplicatedTokens": 428,
            "percentage": 9.09,
            "percentageTokens": 14.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/hooks/usePagination.ts": {
            "lines": 63,
            "tokens": 455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/hooks/useFilters.ts": {
            "lines": 41,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/hooks/useDataFetch.ts": {
            "lines": 49,
            "tokens": 349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/forms/useFormSubmit.ts": {
            "lines": 44,
            "tokens": 309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/forms/useFormErrors.ts": {
            "lines": 30,
            "tokens": 223,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/forms/schemas.ts": {
            "lines": 43,
            "tokens": 312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/database/database.types.ts": {
            "lines": 499,
            "tokens": 3765,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 112,
            "duplicatedTokens": 972,
            "percentage": 22.44,
            "percentageTokens": 25.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/types.ts": {
            "lines": 18,
            "tokens": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/lab-enhanced.ts": {
            "lines": 409,
            "tokens": 5185,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/kubelka-munk-enhanced.ts": {
            "lines": 496,
            "tokens": 4493,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science/delta-e-ciede2000.ts": {
            "lines": 488,
            "tokens": 4514,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/validation.ts": {
            "lines": 34,
            "tokens": 138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/session-manager.ts": {
            "lines": 401,
            "tokens": 2374,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/rate-limit.ts": {
            "lines": 211,
            "tokens": 1131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth/metadata-helpers.ts": {
            "lines": 256,
            "tokens": 1171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/api/route-helpers.ts": {
            "lines": 167,
            "tokens": 1122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/api/client.ts": {
            "lines": 122,
            "tokens": 814,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/workers/color-worker.ts": {
            "lines": 210,
            "tokens": 1755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/types.ts": {
            "lines": 464,
            "tokens": 3373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/precision.ts": {
            "lines": 524,
            "tokens": 2930,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/optimization.ts": {
            "lines": 757,
            "tokens": 4168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/mixing.ts": {
            "lines": 393,
            "tokens": 2276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/auth.ts": {
            "lines": 45,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware/accuracy-comparison.ts": {
            "lines": 315,
            "tokens": 2198,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/user-paints.ts": {
            "lines": 99,
            "tokens": 827,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/kubelka-munk.ts": {
            "lines": 418,
            "tokens": 3299,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/feature-flags.ts": {
            "lines": 22,
            "tokens": 135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/color-science.ts": {
            "lines": 319,
            "tokens": 3598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePaintLibrary.ts": {
            "lines": 257,
            "tokens": 2287,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 80,
            "duplicatedTokens": 681,
            "percentage": 31.13,
            "percentageTokens": 29.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useCollectionManager.ts": {
            "lines": 241,
            "tokens": 2069,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 499,
            "percentage": 21.58,
            "percentageTokens": 24.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-sessions.ts": {
            "lines": 246,
            "tokens": 2161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-paint-colors.ts": {
            "lines": 114,
            "tokens": 1040,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-image-processing.ts": {
            "lines": 208,
            "tokens": 1838,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 85,
            "percentage": 4.81,
            "percentageTokens": 4.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-color-matching.ts": {
            "lines": 110,
            "tokens": 919,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 85,
            "percentage": 9.09,
            "percentageTokens": 9.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/manifest.ts": {
            "lines": 120,
            "tokens": 788,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware.ts": {
            "lines": 169,
            "tokens": 854,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 20275,
          "tokens": 163333,
          "sources": 75,
          "clones": 93,
          "duplicatedLines": 1497,
          "duplicatedTokens": 13061,
          "percentage": 7.38,
          "percentageTokens": 8,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "src/app/auth/signin/page.tsx": {
            "lines": 33,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/auth/error/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/color-picker.tsx": {
            "lines": 227,
            "tokens": 1897,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SessionCard.tsx": {
            "lines": 244,
            "tokens": 2202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SaveForm.tsx": {
            "lines": 171,
            "tokens": 1340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/paint-library.tsx": {
            "lines": 79,
            "tokens": 574,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintPagination.tsx": {
            "lines": 8,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintFormModal.tsx": {
            "lines": 100,
            "tokens": 722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintFilters.tsx": {
            "lines": 81,
            "tokens": 683,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintCard.tsx": {
            "lines": 70,
            "tokens": 512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-results.tsx": {
            "lines": 149,
            "tokens": 1285,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 142,
            "duplicatedTokens": 1382,
            "percentage": 95.3,
            "percentageTokens": 107.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-results-old.tsx": {
            "lines": 357,
            "tokens": 3517,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 142,
            "duplicatedTokens": 1382,
            "percentage": 39.78,
            "percentageTokens": 39.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-controls.tsx": {
            "lines": 97,
            "tokens": 810,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/VolumeConstraintsSettings.tsx": {
            "lines": 72,
            "tokens": 597,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/ResultsSummaryView.tsx": {
            "lines": 19,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/PaintMixView.tsx": {
            "lines": 27,
            "tokens": 297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/PaintFiltersSettings.tsx": {
            "lines": 56,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/MixingInstructionsView.tsx": {
            "lines": 10,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/AlgorithmSettings.tsx": {
            "lines": 86,
            "tokens": 732,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/RatioDisplay.tsx": {
            "lines": 107,
            "tokens": 994,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/AccuracyIndicator.tsx": {
            "lines": 114,
            "tokens": 877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/paint-mixing-dashboard.tsx": {
            "lines": 188,
            "tokens": 1690,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ImageUpload.tsx": {
            "lines": 104,
            "tokens": 691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/HexInput.tsx": {
            "lines": 26,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ColorPicker.tsx": {
            "lines": 70,
            "tokens": 454,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-display/ColorValue.tsx": {
            "lines": 15,
            "tokens": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/collection-manager.tsx": {
            "lines": 102,
            "tokens": 797,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/CollectionFormModal.tsx": {
            "lines": 58,
            "tokens": 471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/CollectionFilters.tsx": {
            "lines": 40,
            "tokens": 411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/CollectionCard.tsx": {
            "lines": 102,
            "tokens": 872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignOutButton.tsx": {
            "lines": 158,
            "tokens": 872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignInButton.tsx": {
            "lines": 142,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/EmailSigninForm.tsx": {
            "lines": 97,
            "tokens": 790,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/AuthProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/history/page.tsx": {
            "lines": 111,
            "tokens": 985,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmailPasswordForm.tsx": {
            "lines": 123,
            "tokens": 1083,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/page.tsx": {
            "lines": 312,
            "tokens": 2410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/layout.tsx": {
            "lines": 1,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 3756,
          "tokens": 30805,
          "sources": 38,
          "clones": 1,
          "duplicatedLines": 142,
          "duplicatedTokens": 1382,
          "percentage": 3.78,
          "percentageTokens": 4.49,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "src/app/auth/signin/page.tsx": {
            "lines": 174,
            "tokens": 1012,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/auth/error/page.tsx": {
            "lines": 266,
            "tokens": 1554,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/color-picker.tsx": {
            "lines": 423,
            "tokens": 4052,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 50,
            "duplicatedTokens": 382,
            "percentage": 11.82,
            "percentageTokens": 9.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SessionCard.tsx": {
            "lines": 331,
            "tokens": 3027,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 28,
            "duplicatedTokens": 366,
            "percentage": 8.46,
            "percentageTokens": 12.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/session-manager/SaveForm.tsx": {
            "lines": 286,
            "tokens": 2169,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 72,
            "percentage": 1.75,
            "percentageTokens": 3.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/paint-library.tsx": {
            "lines": 209,
            "tokens": 1573,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 82,
            "percentage": 5.26,
            "percentageTokens": 5.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintPagination.tsx": {
            "lines": 46,
            "tokens": 345,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintFormModal.tsx": {
            "lines": 168,
            "tokens": 1188,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 141,
            "percentage": 12.5,
            "percentageTokens": 11.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintFilters.tsx": {
            "lines": 120,
            "tokens": 900,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 73,
            "percentage": 5.83,
            "percentageTokens": 8.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/paint/PaintCard.tsx": {
            "lines": 106,
            "tokens": 761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-results.tsx": {
            "lines": 320,
            "tokens": 2772,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 252,
            "duplicatedTokens": 2210,
            "percentage": 78.75,
            "percentageTokens": 79.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-results-old.tsx": {
            "lines": 548,
            "tokens": 5249,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 372,
            "duplicatedTokens": 3467,
            "percentage": 67.88,
            "percentageTokens": 66.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/optimization-controls.tsx": {
            "lines": 295,
            "tokens": 2430,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/VolumeConstraintsSettings.tsx": {
            "lines": 115,
            "tokens": 871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/ResultsSummaryView.tsx": {
            "lines": 109,
            "tokens": 848,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 510,
            "percentage": 43.12,
            "percentageTokens": 60.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/PaintMixView.tsx": {
            "lines": 83,
            "tokens": 696,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 50,
            "duplicatedTokens": 522,
            "percentage": 60.24,
            "percentageTokens": 75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/PaintFiltersSettings.tsx": {
            "lines": 102,
            "tokens": 784,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/MixingInstructionsView.tsx": {
            "lines": 71,
            "tokens": 638,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 225,
            "percentage": 32.39,
            "percentageTokens": 35.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/optimization/AlgorithmSettings.tsx": {
            "lines": 133,
            "tokens": 1039,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/RatioDisplay.tsx": {
            "lines": 185,
            "tokens": 1654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/mixing-calculator/AccuracyIndicator.tsx": {
            "lines": 229,
            "tokens": 1782,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/paint-mixing-dashboard.tsx": {
            "lines": 479,
            "tokens": 4302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ImageUpload.tsx": {
            "lines": 315,
            "tokens": 2556,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/HexInput.tsx": {
            "lines": 154,
            "tokens": 1037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-input/ColorPicker.tsx": {
            "lines": 157,
            "tokens": 1159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/color-display/ColorValue.tsx": {
            "lines": 93,
            "tokens": 724,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/collection-manager.tsx": {
            "lines": 207,
            "tokens": 1581,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 82,
            "percentage": 5.31,
            "percentageTokens": 5.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/CollectionFormModal.tsx": {
            "lines": 115,
            "tokens": 861,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 151,
            "percentage": 19.13,
            "percentageTokens": 17.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/CollectionFilters.tsx": {
            "lines": 73,
            "tokens": 614,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 83,
            "percentage": 10.96,
            "percentageTokens": 13.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/collection/CollectionCard.tsx": {
            "lines": 162,
            "tokens": 1311,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 116,
            "percentage": 8.64,
            "percentageTokens": 8.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignOutButton.tsx": {
            "lines": 231,
            "tokens": 1320,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 50,
            "duplicatedTokens": 388,
            "percentage": 21.65,
            "percentageTokens": 29.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/SignInButton.tsx": {
            "lines": 231,
            "tokens": 1311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/EmailSigninForm.tsx": {
            "lines": 251,
            "tokens": 1768,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 28,
            "duplicatedTokens": 352,
            "percentage": 11.16,
            "percentageTokens": 19.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/AuthProvider.tsx": {
            "lines": 273,
            "tokens": 1226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/history/page.tsx": {
            "lines": 293,
            "tokens": 2588,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 28,
            "duplicatedTokens": 258,
            "percentage": 9.56,
            "percentageTokens": 9.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmailPasswordForm.tsx": {
            "lines": 291,
            "tokens": 2304,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 46,
            "duplicatedTokens": 652,
            "percentage": 15.81,
            "percentageTokens": 28.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/page.tsx": {
            "lines": 547,
            "tokens": 4499,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 186,
            "percentage": 4.2,
            "percentageTokens": 4.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/layout.tsx": {
            "lines": 146,
            "tokens": 770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 8337,
          "tokens": 65275,
          "sources": 38,
          "clones": 27,
          "duplicatedLines": 548,
          "duplicatedTokens": 5159,
          "percentage": 6.57,
          "percentageTokens": 7.9,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/app/globals.css": {
            "lines": 58,
            "tokens": 494,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 58,
          "tokens": 494,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 32426,
      "tokens": 259907,
      "sources": 152,
      "clones": 121,
      "duplicatedLines": 2187,
      "duplicatedTokens": 19602,
      "percentage": 6.74,
      "percentageTokens": 7.54,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n\n      if (error.message === 'Session not found') {\n        const errorResponse: ErrorResponse = {\n          error: 'NOT_FOUND',\n          message: 'Session not found',\n        }\n        return NextResponse.json(errorResponse, { status: 404 })\n      }\n    }\n\n    const errorResponse: ErrorResponse = {\n      error: 'INTERNAL_ERROR',\n      message: 'Failed to update session'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 120,
        "end": 146,
        "startLoc": {
          "line": 120,
          "column": 23,
          "position": 878
        },
        "endLoc": {
          "line": 146,
          "column": 27,
          "position": 1091
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 64,
        "end": 90,
        "startLoc": {
          "line": 64,
          "column": 21,
          "position": 424
        },
        "endLoc": {
          "line": 90,
          "column": 26,
          "position": 637
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": ", error)\n\n    if (error instanceof z.ZodError) {\n      const errorResponse: ErrorResponse = {\n        error: 'VALIDATION_ERROR',\n        message: 'Invalid session ID',\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n\n      if (error.message === 'Session not found') {\n        const errorResponse: ErrorResponse = {\n          error: 'NOT_FOUND',\n          message: 'Session not found',\n        }\n        return NextResponse.json(errorResponse, { status: 404 })\n      }\n    }\n\n    const errorResponse: ErrorResponse = {\n      error: 'INTERNAL_ERROR',\n      message: 'Failed to delete session'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 167,
        "end": 198,
        "startLoc": {
          "line": 167,
          "column": 26,
          "position": 1259
        },
        "endLoc": {
          "line": 198,
          "column": 27,
          "position": 1517
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 59,
        "end": 90,
        "startLoc": {
          "line": 59,
          "column": 23,
          "position": 379
        },
        "endLoc": {
          "line": 90,
          "column": 26,
          "position": 637
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate paint ID\n    const paintId = PaintIdSchema.parse(params.id);\n\n    const body",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 89,
        "end": 99,
        "startLoc": {
          "line": 89,
          "column": 8,
          "position": 760
        },
        "endLoc": {
          "line": 99,
          "column": 5,
          "position": 850
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 18,
        "end": 28,
        "startLoc": {
          "line": 18,
          "column": 9,
          "position": 186
        },
        "endLoc": {
          "line": 28,
          "column": 11,
          "position": 276
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 105,
        "end": 119,
        "startLoc": {
          "line": 105,
          "column": 4,
          "position": 924
        },
        "endLoc": {
          "line": 119,
          "column": 7,
          "position": 1019
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 43,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 307
        },
        "endLoc": {
          "line": 43,
          "column": 3,
          "position": 402
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 135,
        "end": 157,
        "startLoc": {
          "line": 135,
          "column": 22,
          "position": 1142
        },
        "endLoc": {
          "line": 157,
          "column": 7,
          "position": 1308
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 755
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate paint ID\n    const paintId = PaintIdSchema.parse(params.id);\n\n    // Check for soft delete vs hard delete",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 157,
        "end": 168,
        "startLoc": {
          "line": 157,
          "column": 7,
          "position": 1309
        },
        "endLoc": {
          "line": 168,
          "column": 40,
          "position": 1401
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 88,
        "end": 99,
        "startLoc": {
          "line": 88,
          "column": 6,
          "position": 756
        },
        "endLoc": {
          "line": 99,
          "column": 6,
          "position": 848
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: {",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 185,
        "end": 198,
        "startLoc": {
          "line": 185,
          "column": 5,
          "position": 1590
        },
        "endLoc": {
          "line": 198,
          "column": 2,
          "position": 1692
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 31,
        "end": 120,
        "startLoc": {
          "line": 31,
          "column": 5,
          "position": 312
        },
        "endLoc": {
          "line": 120,
          "column": 7,
          "position": 1031
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid paint ID',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 209,
        "end": 236,
        "startLoc": {
          "line": 209,
          "column": 33,
          "position": 1761
        },
        "endLoc": {
          "line": 236,
          "column": 2,
          "position": 1969
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 59,
        "end": 86,
        "startLoc": {
          "line": 59,
          "column": 30,
          "position": 538
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 746
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 19,
        "end": 29,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 202
        },
        "endLoc": {
          "line": 29,
          "column": 7,
          "position": 288
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 5,
        "end": 15,
        "startLoc": {
          "line": 5,
          "column": 6,
          "position": 70
        },
        "endLoc": {
          "line": 15,
          "column": 6,
          "position": 156
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", user.id);\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    if (!result.data) {\n      return NextResponse.json(\n        { error: { code: 'NOT_FOUND', message: 'Collection not found'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 41,
        "end": 57,
        "startLoc": {
          "line": 41,
          "column": 13,
          "position": 415
        },
        "endLoc": {
          "line": 57,
          "column": 23,
          "position": 551
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 45,
        "startLoc": {
          "line": 29,
          "column": 8,
          "position": 302
        },
        "endLoc": {
          "line": 45,
          "column": 18,
          "position": 438
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PATCH(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate collection ID",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 135,
        "end": 165,
        "startLoc": {
          "line": 135,
          "column": 24,
          "position": 1389
        },
        "endLoc": {
          "line": 165,
          "column": 26,
          "position": 1627
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 96,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 96,
          "column": 21,
          "position": 827
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate collection ID\n    const collectionId = CollectionIdSchema.parse(params.id);\n\n    const body",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 158,
        "end": 168,
        "startLoc": {
          "line": 158,
          "column": 8,
          "position": 1560
        },
        "endLoc": {
          "line": 168,
          "column": 5,
          "position": 1650
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 30,
        "end": 40,
        "startLoc": {
          "line": 30,
          "column": 9,
          "position": 299
        },
        "endLoc": {
          "line": 40,
          "column": 11,
          "position": 389
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result.data,\n      meta: {\n        updated_at: result.data?.updated_at,\n        collection_id",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 212,
        "end": 230,
        "startLoc": {
          "line": 212,
          "column": 11,
          "position": 2061
        },
        "endLoc": {
          "line": 230,
          "column": 14,
          "position": 2192
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 123,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 307
        },
        "endLoc": {
          "line": 123,
          "column": 8,
          "position": 1055
        }
      }
    },
    {
      "format": "typescript",
      "lines": 38,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid update data',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate collection ID",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 235,
        "end": 272,
        "startLoc": {
          "line": 235,
          "column": 37,
          "position": 2223
        },
        "endLoc": {
          "line": 272,
          "column": 26,
          "position": 2512
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 128,
        "end": 165,
        "startLoc": {
          "line": 128,
          "column": 32,
          "position": 1091
        },
        "endLoc": {
          "line": 165,
          "column": 21,
          "position": 1380
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Validate collection ID\n    const collectionId = CollectionIdSchema.parse(params.id);\n\n    const url",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 264,
        "end": 275,
        "startLoc": {
          "line": 264,
          "column": 7,
          "position": 2441
        },
        "endLoc": {
          "line": 275,
          "column": 4,
          "position": 2535
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 157,
        "end": 40,
        "startLoc": {
          "line": 157,
          "column": 6,
          "position": 1556
        },
        "endLoc": {
          "line": 40,
          "column": 11,
          "position": 389
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid collection ID',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 356,
        "end": 383,
        "startLoc": {
          "line": 356,
          "column": 38,
          "position": 3201
        },
        "endLoc": {
          "line": 383,
          "column": 2,
          "position": 3409
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 128,
        "end": 86,
        "startLoc": {
          "line": 128,
          "column": 35,
          "position": 1338
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 746
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-3'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 39,
        "end": 45,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 478
        },
        "endLoc": {
          "line": 45,
          "column": 10,
          "position": 568
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-4'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 55,
        "end": 61,
        "startLoc": {
          "line": 55,
          "column": 2,
          "position": 729
        },
        "endLoc": {
          "line": 61,
          "column": 10,
          "position": 819
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-5'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 71,
        "end": 77,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 981
        },
        "endLoc": {
          "line": 77,
          "column": 10,
          "position": 1071
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-6'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 87,
        "end": 93,
        "startLoc": {
          "line": 87,
          "column": 2,
          "position": 1232
        },
        "endLoc": {
          "line": 93,
          "column": 10,
          "position": 1322
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 29,
          "column": 10,
          "position": 317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ",\n    last_used_at: new Date().toISOString(), purchase_date: new Date().toISOString(),\n    notes: null, tags: [], archived: false,\n    created_at: new Date().toISOString(), updated_at: new Date().toISOString()\n  }\n]",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 103,
        "end": 108,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 1484
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 1566
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 27,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 308
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 75",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 225,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2478
        },
        "endLoc": {
          "line": 225,
          "column": 3,
          "position": 2597
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 174,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 150",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 250,
        "end": 263,
        "startLoc": {
          "line": 250,
          "column": 9,
          "position": 2795
        },
        "endLoc": {
          "line": 263,
          "column": 4,
          "position": 2918
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 174,
        "startLoc": {
          "line": 161,
          "column": 9,
          "position": 2034
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ").map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 304,
        "end": 318,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 3253
        },
        "endLoc": {
          "line": 318,
          "column": 4,
          "position": 3380
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 175,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2477
        },
        "endLoc": {
          "line": 175,
          "column": 4,
          "position": 2164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "available_paints: mockPaints.slice(0, 4).map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 80",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 354,
        "end": 367,
        "startLoc": {
          "line": 354,
          "column": 9,
          "position": 3652
        },
        "endLoc": {
          "line": 367,
          "column": 3,
          "position": 3783
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 174,
        "startLoc": {
          "line": 212,
          "column": 9,
          "position": 2466
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 50",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 405,
        "end": 418,
        "startLoc": {
          "line": 405,
          "column": 14,
          "position": 4079
        },
        "endLoc": {
          "line": 418,
          "column": 3,
          "position": 4198
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 174,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ").map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 1000",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 441,
        "end": 454,
        "startLoc": {
          "line": 441,
          "column": 2,
          "position": 4407
        },
        "endLoc": {
          "line": 454,
          "column": 5,
          "position": 4527
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 174,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2477
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 5",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 487,
        "end": 503,
        "startLoc": {
          "line": 487,
          "column": 2,
          "position": 4815
        },
        "endLoc": {
          "line": 503,
          "column": 2,
          "position": 4955
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 160,
        "end": 319,
        "startLoc": {
          "line": 160,
          "column": 12,
          "position": 2031
        },
        "endLoc": {
          "line": 319,
          "column": 2,
          "position": 3387
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n          available_paints: mockPaints.slice(0, 4).map(paint => ({\n            id: paint.id,\n            name: paint.name,\n            brand: paint.brand,\n            lab_l: paint.lab_l,\n            lab_a: paint.lab_a,\n            lab_b: paint.lab_b,\n            volume_ml: paint.volume_ml,\n            cost_per_ml: paint.cost_per_ml,\n            finish_type: paint.finish_type,\n            optical_properties_calibrated: paint.optical_properties_calibrated || false\n          })),\n          volume_constraints: {\n            total_volume_ml: 100,\n            min_volume_per_paint_ml: 1.0,\n            max_paint_count: 3",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 532,
        "end": 548,
        "startLoc": {
          "line": 532,
          "column": 12,
          "position": 5231
        },
        "endLoc": {
          "line": 548,
          "column": 2,
          "position": 5379
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 353,
        "end": 319,
        "startLoc": {
          "line": 353,
          "column": 2,
          "position": 3649
        },
        "endLoc": {
          "line": 319,
          "column": 2,
          "position": 3387
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "available_paints: mockPaints.slice(0, 5).map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        }\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 579,
        "end": 597,
        "startLoc": {
          "line": 579,
          "column": 9,
          "position": 5690
        },
        "endLoc": {
          "line": 597,
          "column": 2,
          "position": 5848
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 304,
        "end": 321,
        "startLoc": {
          "line": 304,
          "column": 9,
          "position": 3242
        },
        "endLoc": {
          "line": 321,
          "column": 2,
          "position": 3398
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": ",\n    lab_l: 95.0,\n    lab_a: -0.5,\n    lab_b: 2.1,\n    volume_ml: 100,\n    cost_per_ml: 0.05,\n    finish_type: 'matte',\n    user_id: 'test-user',\n    collection_id: 'test-collection',\n    hex_color: '#F8F8FF',\n    rgb_r: 248,\n    rgb_g: 248,\n    rgb_b: 255,\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 5,\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-2',\n    name: 'Ultramarine Blue'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 16,
        "end": 50,
        "startLoc": {
          "line": 16,
          "column": 13,
          "position": 93
        },
        "endLoc": {
          "line": 50,
          "column": 19,
          "position": 356
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 15,
        "end": 30,
        "startLoc": {
          "line": 15,
          "column": 15,
          "position": 80
        },
        "endLoc": {
          "line": 30,
          "column": 14,
          "position": 324
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 3,\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-3',\n    name: 'Cadmium Red'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 63,
        "end": 85,
        "startLoc": {
          "line": 63,
          "column": 4,
          "position": 449
        },
        "endLoc": {
          "line": 85,
          "column": 14,
          "position": 627
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 83,
        "end": 46,
        "startLoc": {
          "line": 83,
          "column": 3,
          "position": 1162
        },
        "endLoc": {
          "line": 46,
          "column": 13,
          "position": 575
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 7,\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-4',\n    name: 'Chrome Yellow'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 98,
        "end": 120,
        "startLoc": {
          "line": 98,
          "column": 3,
          "position": 719
        },
        "endLoc": {
          "line": 120,
          "column": 16,
          "position": 897
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 99,
        "end": 62,
        "startLoc": {
          "line": 99,
          "column": 3,
          "position": 1414
        },
        "endLoc": {
          "line": 62,
          "column": 16,
          "position": 826
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n    pigment_info: null,\n    lightfastness_rating: null,\n    transparency_rating: null,\n    granulation_rating: null,\n    staining_rating: null,\n    color_temperature: null,\n    color_bias: null,\n    mixing_ratios: null,\n    color_accuracy_verified: true,\n    optical_properties_calibrated: true,\n    times_used: 4,\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  },\n  {\n    id: 'paint-5',\n    name: 'Viridian Green'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 133,
        "end": 155,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 989
        },
        "endLoc": {
          "line": 155,
          "column": 17,
          "position": 1167
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 51,
        "end": 78,
        "startLoc": {
          "line": 51,
          "column": 3,
          "position": 659
        },
        "endLoc": {
          "line": 78,
          "column": 12,
          "position": 1078
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    last_used_at: new Date().toISOString(),\n    purchase_date: new Date().toISOString(),\n    notes: null,\n    tags: [],\n    archived: false,\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  }\n];\n\ndescribe('DifferentialEvolutionOptimizer'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 1337
        },
        "endLoc": {
          "line": 190,
          "column": 33,
          "position": 1429
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 23,
        "end": 110,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 110,
          "column": 21,
          "position": 1572
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 2",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 240,
        "end": 255,
        "startLoc": {
          "line": 240,
          "column": 13,
          "position": 1897
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 2030
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 319,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 319,
          "column": 2,
          "position": 3387
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n        target_color: targetColor,\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 50,\n          min_volume_per_paint_ml: 0.5",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 280,
        "end": 296,
        "startLoc": {
          "line": 280,
          "column": 19,
          "position": 2236
        },
        "endLoc": {
          "line": 296,
          "column": 4,
          "position": 2376
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 159,
        "end": 419,
        "startLoc": {
          "line": 159,
          "column": 20,
          "position": 2024
        },
        "endLoc": {
          "line": 419,
          "column": 4,
          "position": 4205
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "available_paints: mockPaints.slice(0, 3).map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 25",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 324,
        "end": 337,
        "startLoc": {
          "line": 324,
          "column": 9,
          "position": 2605
        },
        "endLoc": {
          "line": 337,
          "column": 3,
          "position": 2736
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 441,
        "end": 174,
        "startLoc": {
          "line": 441,
          "column": 9,
          "position": 4396
        },
        "endLoc": {
          "line": 174,
          "column": 4,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 0.1",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 369,
        "end": 383,
        "startLoc": {
          "line": 369,
          "column": 9,
          "position": 3010
        },
        "endLoc": {
          "line": 383,
          "column": 4,
          "position": 3140
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 175,
        "startLoc": {
          "line": 161,
          "column": 9,
          "position": 2034
        },
        "endLoc": {
          "line": 175,
          "column": 4,
          "position": 2164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n        target_color: targetColor,\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 423,
        "end": 445,
        "startLoc": {
          "line": 423,
          "column": 19,
          "position": 3491
        },
        "endLoc": {
          "line": 445,
          "column": 25,
          "position": 3668
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 159,
        "end": 324,
        "startLoc": {
          "line": 159,
          "column": 20,
          "position": 2024
        },
        "endLoc": {
          "line": 324,
          "column": 13,
          "position": 3417
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ",\n        target_color: targetColor,\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 1.0",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 472,
        "end": 493,
        "startLoc": {
          "line": 472,
          "column": 19,
          "position": 3872
        },
        "endLoc": {
          "line": 493,
          "column": 4,
          "position": 4042
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 159,
        "end": 323,
        "startLoc": {
          "line": 159,
          "column": 20,
          "position": 2024
        },
        "endLoc": {
          "line": 323,
          "column": 4,
          "position": 3410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 50,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 1",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 518,
        "end": 532,
        "startLoc": {
          "line": 518,
          "column": 11,
          "position": 4256
        },
        "endLoc": {
          "line": 532,
          "column": 2,
          "position": 4378
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 162,
        "end": 420,
        "startLoc": {
          "line": 162,
          "column": 11,
          "position": 2049
        },
        "endLoc": {
          "line": 420,
          "column": 2,
          "position": 4212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 150",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 577,
        "end": 591,
        "startLoc": {
          "line": 577,
          "column": 2,
          "position": 4776
        },
        "endLoc": {
          "line": 591,
          "column": 4,
          "position": 4902
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 161,
        "end": 175,
        "startLoc": {
          "line": 161,
          "column": 11,
          "position": 2038
        },
        "endLoc": {
          "line": 175,
          "column": 4,
          "position": 2164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ").map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 2,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 614,
        "end": 633,
        "startLoc": {
          "line": 614,
          "column": 2,
          "position": 5081
        },
        "endLoc": {
          "line": 633,
          "column": 4,
          "position": 5238
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 212,
        "end": 259,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2477
        },
        "endLoc": {
          "line": 259,
          "column": 4,
          "position": 2053
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "},\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 5,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 647,
        "end": 668,
        "startLoc": {
          "line": 647,
          "column": 2,
          "position": 5367
        },
        "endLoc": {
          "line": 668,
          "column": 25,
          "position": 5538
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 487,
        "end": 508,
        "startLoc": {
          "line": 487,
          "column": 2,
          "position": 4814
        },
        "endLoc": {
          "line": 508,
          "column": 13,
          "position": 4985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "},\n        available_paints: mockPaints.map(paint => ({\n          id: paint.id,\n          name: paint.name,\n          brand: paint.brand,\n          lab_l: paint.lab_l,\n          lab_a: paint.lab_a,\n          lab_b: paint.lab_b,\n          volume_ml: paint.volume_ml,\n          cost_per_ml: paint.cost_per_ml,\n          finish_type: paint.finish_type,\n          optical_properties_calibrated: paint.optical_properties_calibrated || false\n        })),\n        volume_constraints: {\n          total_volume_ml: 100,\n          min_volume_per_paint_ml: 1.0,\n          max_paint_count: 4,\n          allow_waste: false\n        },\n        optimization_config: {\n          target_delta_e: 2.0,\n          algorithm: 'differential_evolution',\n          max_iterations: 200,\n          time_limit_ms: 10000",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/__tests__/differential-evolution.test.ts",
        "start": 686,
        "end": 709,
        "startLoc": {
          "line": 686,
          "column": 2,
          "position": 5702
        },
        "endLoc": {
          "line": 709,
          "column": 6,
          "position": 5887
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/__tests__/tpe-hybrid.test.ts",
        "start": 487,
        "end": 447,
        "startLoc": {
          "line": 487,
          "column": 2,
          "position": 4814
        },
        "endLoc": {
          "line": 447,
          "column": 5,
          "position": 3682
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 146,
        "end": 160,
        "startLoc": {
          "line": 146,
          "column": 27,
          "position": 1261
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 1380
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 64,
        "end": 79,
        "startLoc": {
          "line": 64,
          "column": 21,
          "position": 424
        },
        "endLoc": {
          "line": 79,
          "column": 3,
          "position": 544
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n        hex: z.string().regex(/^#[0-9A-Fa-f]{6}$/, 'Invalid hex color format'),\n        lab: z.object({\n          l: z.number().min(0).max(100),\n          a: z.number().min(-128).max(127),\n          b: z.number().min(-128).max(127),\n        }),\n      }).optional(),\n      delta_e",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 186,
        "end": 194,
        "startLoc": {
          "line": 186,
          "column": 17,
          "position": 1660
        },
        "endLoc": {
          "line": 194,
          "column": 8,
          "position": 1777
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 178,
        "end": 186,
        "startLoc": {
          "line": 178,
          "column": 13,
          "position": 1542
        },
        "endLoc": {
          "line": 186,
          "column": 17,
          "position": 1659
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", error)\n\n    if (error instanceof z.ZodError) {\n      const errorResponse: ErrorResponse = {\n        error: 'VALIDATION_ERROR',\n        message: 'Invalid request data',\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    if (error instanceof Error) {\n      if (error.message === 'User not authenticated') {\n        const errorResponse: ErrorResponse = {\n          error: 'AUTHENTICATION_ERROR',\n          message: 'Authentication required',\n        }\n        return NextResponse.json(errorResponse, { status: 401 })\n      }\n\n      if (error.message.",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 235,
        "end": 255,
        "startLoc": {
          "line": 235,
          "column": 26,
          "position": 2233
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 2404
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/[id]/route.ts",
        "start": 115,
        "end": 79,
        "startLoc": {
          "line": 115,
          "column": 24,
          "position": 833
        },
        "endLoc": {
          "line": 79,
          "column": 4,
          "position": 551
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "}\n\nexport async function PUT() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'PUT method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'DELETE method not supported' },\n    { status: 405 }\n  )\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 270,
        "end": 284,
        "startLoc": {
          "line": 270,
          "column": 1,
          "position": 2523
        },
        "endLoc": {
          "line": 284,
          "column": 2,
          "position": 2629
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 233,
        "end": 247,
        "startLoc": {
          "line": 233,
          "column": 1,
          "position": 1980
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2086
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", error)\n\n    if (error instanceof z.ZodError) {\n      const errorResponse: ErrorResponse = {\n        error: 'VALIDATION_ERROR',\n        message: 'Invalid request data',\n        details: error.errors,\n      }\n      return NextResponse.json(errorResponse, { status: 400 })\n    }\n\n    const errorResponse: ErrorResponse = {\n      error: 'INTERNAL_ERROR',\n      message: 'Failed to process ratio prediction request'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/ratio-predict/route.ts",
        "start": 156,
        "end": 169,
        "startLoc": {
          "line": 156,
          "column": 26,
          "position": 1173
        },
        "endLoc": {
          "line": 169,
          "column": 45,
          "position": 1279
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 208,
        "end": 221,
        "startLoc": {
          "line": 208,
          "column": 32,
          "position": 1790
        },
        "endLoc": {
          "line": 221,
          "column": 37,
          "position": 1896
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n    }\n    return NextResponse.json(errorResponse, { status: 500 })\n  }\n}\n\n// Handle unsupported methods\nexport async function GET() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'GET method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function PUT() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'PUT method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'DELETE method not supported' },\n    { status: 405 }\n  )\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/ratio-predict/route.ts",
        "start": 169,
        "end": 195,
        "startLoc": {
          "line": 169,
          "column": 45,
          "position": 1280
        },
        "endLoc": {
          "line": 195,
          "column": 2,
          "position": 1469
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 221,
        "end": 247,
        "startLoc": {
          "line": 221,
          "column": 37,
          "position": 1897
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2086
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport async function GET(request",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 29,
        "end": 39,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 457
        },
        "endLoc": {
          "line": 39,
          "column": 8,
          "position": 552
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 31,
          "position": 201
        },
        "endLoc": {
          "line": 30,
          "column": 9,
          "position": 298
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: result.error.code === 'NOT_FOUND' ? 404 : 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result.data,\n      pagination",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 74,
        "end": 90,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 861
        },
        "endLoc": {
          "line": 90,
          "column": 11,
          "position": 974
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 29,
        "end": 121,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 307
        },
        "endLoc": {
          "line": 121,
          "column": 5,
          "position": 1037
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 106,
        "end": 128,
        "startLoc": {
          "line": 106,
          "column": 27,
          "position": 1126
        },
        "endLoc": {
          "line": 128,
          "column": 5,
          "position": 1292
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 755
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\n// Bulk operations endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 175,
        "end": 197,
        "startLoc": {
          "line": 175,
          "column": 21,
          "position": 1653
        },
        "endLoc": {
          "line": 197,
          "column": 28,
          "position": 1813
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 232,
        "end": 245,
        "startLoc": {
          "line": 232,
          "column": 5,
          "position": 2172
        },
        "endLoc": {
          "line": 245,
          "column": 7,
          "position": 2258
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 330,
        "end": 343,
        "startLoc": {
          "line": 330,
          "column": 5,
          "position": 3024
        },
        "endLoc": {
          "line": 343,
          "column": 2,
          "position": 3110
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE()",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 5,
          "position": 2333
        },
        "endLoc": {
          "line": 269,
          "column": 2,
          "position": 2465
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 74,
        "end": 158,
        "startLoc": {
          "line": 74,
          "column": 5,
          "position": 625
        },
        "endLoc": {
          "line": 158,
          "column": 8,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n});\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\n// Global optimization client instance",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 789
        },
        "endLoc": {
          "line": 70,
          "column": 39,
          "position": 879
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 28,
        "end": 15,
        "startLoc": {
          "line": 28,
          "column": 6,
          "position": 454
        },
        "endLoc": {
          "line": 15,
          "column": 6,
          "position": 156
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Optimization failed'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 307,
        "end": 323,
        "startLoc": {
          "line": 307,
          "column": 31,
          "position": 3090
        },
        "endLoc": {
          "line": 323,
          "column": 22,
          "position": 3223
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 82,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 82,
          "column": 24,
          "position": 722
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", error);\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 383,
        "end": 397,
        "startLoc": {
          "line": 383,
          "column": 27,
          "position": 3743
        },
        "endLoc": {
          "line": 397,
          "column": 2,
          "position": 3872
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 253,
        "end": 86,
        "startLoc": {
          "line": 253,
          "column": 25,
          "position": 2325
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 746
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ";\nimport { z } from 'zod';\n\nconst QueryParamsSchema = z.object({\n  page: z.coerce.number().min(1).default(1),\n  limit: z.coerce.number().min(1).max(100).default(20),\n  sort_field: z.enum(['created_at'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 8,
        "end": 14,
        "startLoc": {
          "line": 8,
          "column": 56,
          "position": 47
        },
        "endLoc": {
          "line": 14,
          "column": 13,
          "position": 135
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 10,
        "end": 16,
        "startLoc": {
          "line": 10,
          "column": 32,
          "position": 76
        },
        "endLoc": {
          "line": 16,
          "column": 7,
          "position": 164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": z.object({\n    L: z.number().min(0).max(100),\n    a: z.number().min(-128).max(127),\n    b: z.number().min(-128).max(127)\n  }),\n  delta_e_achieved",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 35,
        "end": 40,
        "startLoc": {
          "line": 35,
          "column": 15,
          "position": 488
        },
        "endLoc": {
          "line": 40,
          "column": 17,
          "position": 566
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 30,
        "end": 35,
        "startLoc": {
          "line": 30,
          "column": 13,
          "position": 409
        },
        "endLoc": {
          "line": 35,
          "column": 15,
          "position": 487
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "project_name: z.string().optional(),\n  surface_type: z.string().optional(),\n  application_method: z.string().optional(),\n  environmental_conditions: z.object({\n    temperature_c: z.number().optional(),\n    humidity_percent: z.number().optional(),\n    lighting_conditions: z.string().optional()\n  }).optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 51,
        "end": 58,
        "startLoc": {
          "line": 51,
          "column": 3,
          "position": 775
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 880
        }
      },
      "secondFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 51,
        "end": 59,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 677
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 784
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ").optional()\n});\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Parse query parameters\n    const url = new URL(request.url);\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n    const parsedParams = QueryParamsSchema.parse(queryParams);\n\n    // Build filters\n    const filters: any",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 61,
        "end": 83,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 930
        },
        "endLoc": {
          "line": 83,
          "column": 4,
          "position": 1139
        }
      },
      "secondFile": {
        "name": "src/app/api/optimize/route.ts",
        "start": 59,
        "end": 51,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 785
        },
        "endLoc": {
          "line": 51,
          "column": 13,
          "position": 660
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid query parameters',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    const body = await request.json();\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 172,
        "end": 207,
        "startLoc": {
          "line": 172,
          "column": 33,
          "position": 2120
        },
        "endLoc": {
          "line": 207,
          "column": 6,
          "position": 2397
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 99,
        "end": 135,
        "startLoc": {
          "line": 99,
          "column": 25,
          "position": 1075
        },
        "endLoc": {
          "line": 135,
          "column": 25,
          "position": 1353
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\n// Analytics endpoint for dashboard metrics",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 258,
        "end": 280,
        "startLoc": {
          "line": 258,
          "column": 30,
          "position": 2766
        },
        "endLoc": {
          "line": 280,
          "column": 44,
          "position": 2926
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", error);\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Analytics request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 327,
        "end": 337,
        "startLoc": {
          "line": 327,
          "column": 43,
          "position": 3388
        },
        "endLoc": {
          "line": 337,
          "column": 27,
          "position": 3493
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 253,
        "end": 82,
        "startLoc": {
          "line": 253,
          "column": 25,
          "position": 2325
        },
        "endLoc": {
          "line": 82,
          "column": 24,
          "position": 722
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "target_color: z.object({\n    hex: z.string().regex(/^#[0-9A-Fa-f]{6}$/, 'Invalid hex color format'),\n    lab: z.object({\n      l: z.number().min(0).max(100),\n      a: z.number().min(-128).max(127),\n      b: z.number().min(-128).max(127),\n    }),\n  }),",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/color-match/route.ts",
        "start": 23,
        "end": 30,
        "startLoc": {
          "line": 23,
          "column": 3,
          "position": 137
        },
        "endLoc": {
          "line": 30,
          "column": 2,
          "position": 248
        }
      },
      "secondFile": {
        "name": "src/app/api/sessions/route.ts",
        "start": 178,
        "end": 185,
        "startLoc": {
          "line": 178,
          "column": 7,
          "position": 1541
        },
        "endLoc": {
          "line": 185,
          "column": 2,
          "position": 1652
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n    }\n    return NextResponse.json(errorResponse, { status: 500 })\n  }\n}\n\n// Handle unsupported methods\nexport async function GET() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'GET method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function PUT() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'PUT method not supported' },\n    { status: 405 }\n  )\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: 'METHOD_NOT_ALLOWED', message: 'DELETE method not supported' },\n    { status: 405 }\n  )\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/color-match/route.ts",
        "start": 242,
        "end": 268,
        "startLoc": {
          "line": 242,
          "column": 43,
          "position": 2092
        },
        "endLoc": {
          "line": 268,
          "column": 2,
          "position": 2281
        }
      },
      "secondFile": {
        "name": "src/app/api/image/extract-color/route.ts",
        "start": 221,
        "end": 247,
        "startLoc": {
          "line": 221,
          "column": 37,
          "position": 1897
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2086
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "import { NextRequest, NextResponse } from 'next/server';\nimport { createClient as createAdminClient } from '@/lib/supabase/admin';\nimport { EnhancedPaintRepository } from '@/lib/database/repositories/enhanced-paint-repository';\nimport { z } from 'zod';\n\nconst QueryParamsSchema = z.object({\n  page: z.coerce.number().min(1).default(1),\n  limit: z.coerce.number().min(1).max(100).default(20),\n  sort_field: z.enum(['name', 'created_at'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 6,
        "end": 14,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 14,
          "column": 13,
          "position": 138
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 16,
          "column": 8,
          "position": 167
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ";\n\nconst PaintCollectionUpdateSchema = z.object({\n  name: z.string().min(1).max(255).optional(),\n  description: z.string().max(1000).optional(),\n  color_space: z.enum(['sRGB', 'Adobe_RGB', 'ProPhoto_RGB', 'Lab']).optional(),\n  is_default: z.boolean().optional(),\n  tags: z.array(z.string()).optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 30,
        "end": 37,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 448
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 568
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 9,
        "end": 17,
        "startLoc": {
          "line": 9,
          "column": 6,
          "position": 60
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 181
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ": z.boolean().optional()\n});\n\nasync function getCurrentUser(supabase: any) {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  if (error || !user) {\n    throw new Error('Unauthorized');\n  }\n  return user;\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    // Parse query parameters\n    const url = new URL(request.url);\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n    const parsedParams = QueryParamsSchema.parse(queryParams);\n\n    // Build filters\n    const filters: any = {\n      archived: parsedParams",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 38,
        "end": 61,
        "startLoc": {
          "line": 38,
          "column": 9,
          "position": 572
        },
        "endLoc": {
          "line": 61,
          "column": 13,
          "position": 797
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 61,
        "end": 84,
        "startLoc": {
          "line": 61,
          "column": 16,
          "position": 924
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 1149
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(user.id, filters, pagination);\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    // Calculate summary statistics",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 88,
        "end": 102,
        "startLoc": {
          "line": 88,
          "column": 19,
          "position": 1020
        },
        "endLoc": {
          "line": 102,
          "column": 32,
          "position": 1109
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 129,
        "end": 143,
        "startLoc": {
          "line": 129,
          "column": 17,
          "position": 1539
        },
        "endLoc": {
          "line": 143,
          "column": 40,
          "position": 1628
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": result.pagination.total_count,\n        filters_applied: Object.keys(filters).filter(key => filters[key] !== undefined).length,\n        query_timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    console.error('GET /api/collections error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 121,
        "end": 128,
        "startLoc": {
          "line": 121,
          "column": 18,
          "position": 1397
        },
        "endLoc": {
          "line": 128,
          "column": 30,
          "position": 1475
        }
      },
      "secondFile": {
        "name": "src/app/api/mixing-history/route.ts",
        "start": 165,
        "end": 172,
        "startLoc": {
          "line": 165,
          "column": 15,
          "position": 2041
        },
        "endLoc": {
          "line": 172,
          "column": 33,
          "position": 2119
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": ", error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'Invalid query parameters',\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabase = createAdminClient();\n    const user = await getCurrentUser(supabase);\n\n    const body = await request.json();\n    const collectionData",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 128,
        "end": 163,
        "startLoc": {
          "line": 128,
          "column": 30,
          "position": 1476
        },
        "endLoc": {
          "line": 163,
          "column": 15,
          "position": 1755
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 99,
        "end": 207,
        "startLoc": {
          "line": 99,
          "column": 25,
          "position": 1075
        },
        "endLoc": {
          "line": 207,
          "column": 12,
          "position": 2399
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json(\n      {\n        data: result.data,\n        meta: {\n          created_at",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 217,
        "end": 235,
        "startLoc": {
          "line": 217,
          "column": 2,
          "position": 2183
        },
        "endLoc": {
          "line": 235,
          "column": 11,
          "position": 2288
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/route.ts",
        "start": 230,
        "end": 247,
        "startLoc": {
          "line": 230,
          "column": 8,
          "position": 2167
        },
        "endLoc": {
          "line": 247,
          "column": 14,
          "position": 2270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\n// Bulk operations for collections",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 250,
        "end": 272,
        "startLoc": {
          "line": 250,
          "column": 26,
          "position": 2400
        },
        "endLoc": {
          "line": 272,
          "column": 35,
          "position": 2560
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 88,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\n    }\n\n    if (result.error) {\n      return NextResponse.json(\n        {\n          error: {\n            code: result.error.code,\n            message: result.error.message\n          }\n        },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({\n      data: result.data,\n      meta: {\n        operation",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 336,
        "end": 354,
        "startLoc": {
          "line": 336,
          "column": 9,
          "position": 3160
        },
        "endLoc": {
          "line": 354,
          "column": 10,
          "position": 3266
        }
      },
      "secondFile": {
        "name": "src/app/api/collections/[id]/route.ts",
        "start": 327,
        "end": 247,
        "startLoc": {
          "line": 327,
          "column": 18,
          "position": 3016
        },
        "endLoc": {
          "line": 247,
          "column": 14,
          "position": 2270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ",\n            details: error.errors\n          }\n        },\n        { status: 400 }\n      );\n    }\n\n    if (error instanceof Error && error.message === 'Unauthorized') {\n      return NextResponse.json(\n        { error: { code: 'UNAUTHORIZED', message: 'Authentication required' } },\n        { status: 401 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: { code: 'INTERNAL_ERROR', message: 'Internal server error' } },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE() {\n  return NextResponse.json(\n    { error: { code: 'METHOD_NOT_ALLOWED', message: 'Use DELETE /api/collections/[id] for individual collection deletion'",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/api/collections/route.ts",
        "start": 368,
        "end": 392,
        "startLoc": {
          "line": 368,
          "column": 30,
          "position": 3376
        },
        "endLoc": {
          "line": 392,
          "column": 70,
          "position": 3573
        }
      },
      "secondFile": {
        "name": "src/app/api/paints/[id]/route.ts",
        "start": 66,
        "end": 271,
        "startLoc": {
          "line": 66,
          "column": 19,
          "position": 589
        },
        "endLoc": {
          "line": 271,
          "column": 60,
          "position": 2494
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "export async function createClient() {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Missing Supabase environment variables (NEXT_PUBLIC_SUPABASE_URL or NEXT_PUBLIC_SUPABASE_ANON_KEY)')\n  }\n\n  const cookieStore = await cookies()\n\n  return createServerClient<Database>(supabaseUrl, supabaseAnonKey, {\n    cookies: {\n      getAll: () => cookieStore.getAll(),\n      setAll: (cookies) => {\n        cookies.forEach(({ name, value, options }) => cookieStore.set(name, value, options))\n      },\n    },\n  })\n}\n\n/**\n * Exchange OAuth code for session in route handler\n * Called in callback route handler after OAuth redirect\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/supabase/route-handler.ts",
        "start": 31,
        "end": 54,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 44
        },
        "endLoc": {
          "line": 54,
          "column": 4,
          "position": 226
        }
      },
      "secondFile": {
        "name": "src/lib/supabase/server.ts",
        "start": 31,
        "end": 54,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 44
        },
        "endLoc": {
          "line": 54,
          "column": 4,
          "position": 226
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "] = indices.map(i => this.population.individuals[i].variables);\n    const best = this.population.best_individual.variables;\n\n    const trial: number[] = [];\n    for (let j = 0; j < this.availablePaints.length; j++) {\n      trial.push(best[j] + this.config.F * (r1[j] - r2[j]) +",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/mixing-optimization/differential-evolution.ts",
        "start": 467,
        "end": 472,
        "startLoc": {
          "line": 467,
          "column": 3,
          "position": 3632
        },
        "endLoc": {
          "line": 472,
          "column": 2,
          "position": 3754
        }
      },
      "secondFile": {
        "name": "src/lib/mixing-optimization/differential-evolution.ts",
        "start": 425,
        "end": 430,
        "startLoc": {
          "line": 425,
          "column": 3,
          "position": 3035
        },
        "endLoc": {
          "line": 430,
          "column": 2,
          "position": 3156
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "for (let i = 0; i < data.length; i += 4) {\n      // Skip transparent pixels\n      if (data[i + 3] < 128) continue\n\n      const r = data[i]\n      const g = data[i + 1]\n      const b = data[i + 2]\n\n      // Quantize colors",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 196,
        "end": 204,
        "startLoc": {
          "line": 196,
          "column": 5,
          "position": 1847
        },
        "endLoc": {
          "line": 204,
          "column": 19,
          "position": 1947
        }
      },
      "secondFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 154,
        "end": 162,
        "startLoc": {
          "line": 154,
          "column": 5,
          "position": 1390
        },
        "endLoc": {
          "line": 162,
          "column": 44,
          "position": 1490
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const quantizedR = Math.floor(r / tolerance) * tolerance\n      const quantizedG = Math.floor(g / tolerance) * tolerance\n      const quantizedB = Math.floor(b / tolerance) * tolerance\n\n      const colorKey = `${quantizedR},${quantizedG},${quantizedB}`\n      colorMap.set(colorKey, (colorMap.get(colorKey) || 0) + 1)\n      totalPixels",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 205,
        "end": 211,
        "startLoc": {
          "line": 205,
          "column": 7,
          "position": 1950
        },
        "endLoc": {
          "line": 211,
          "column": 12,
          "position": 2064
        }
      },
      "secondFile": {
        "name": "src/lib/image-processing/canvas-utils.ts",
        "start": 163,
        "end": 169,
        "startLoc": {
          "line": 163,
          "column": 7,
          "position": 1493
        },
        "endLoc": {
          "line": 169,
          "column": 2,
          "position": 1607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ": number\n          viscosity?: number | null\n          density_g_per_ml?: number | null\n          mixing_compatibility?: Json\n          mixing_restrictions?: Json\n          drying_time_minutes?: number | null\n          coverage_sqm_per_liter?: number | null\n          delta_e_tolerance?: number\n          color_stability_rating?: number\n          lightfastness_rating?: number | null\n          times_used?: number\n          total_volume_mixed?: number\n          last_used_at?: string | null\n          color_accuracy_verified?: boolean\n          optical_properties_calibrated?: boolean\n          calibration_date?: string | null\n          quality_control_notes?: string | null\n          tags?: Json\n          notes?: string | null\n          purchase_date?: string | null\n          expiry_date?: string | null\n          supplier?: string | null\n          created_at?: string\n          updated_at?: string\n          version?: number\n          archived?: boolean\n          archived_at?: string | null\n          archived_reason?: string | null\n        }\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 113,
        "end": 142,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 920
        },
        "endLoc": {
          "line": 142,
          "column": 14,
          "position": 1173
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 70,
        "end": 99,
        "startLoc": {
          "line": 70,
          "column": 12,
          "position": 540
        },
        "endLoc": {
          "line": 99,
          "column": 7,
          "position": 793
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": string\n          description?: string | null\n          color_space?: 'sRGB' | 'Adobe_RGB' | 'ProPhoto_RGB' | 'Lab'\n          is_default?: boolean\n          paint_count?: number\n          total_volume_ml?: number\n          average_cost_per_ml?: number\n          tags?: Json\n          created_at?: string\n          updated_at?: string\n          archived?: boolean\n        }\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 193,
        "end": 205,
        "startLoc": {
          "line": 193,
          "column": 2,
          "position": 1511
        },
        "endLoc": {
          "line": 205,
          "column": 14,
          "position": 1605
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 178,
        "end": 190,
        "startLoc": {
          "line": 178,
          "column": 5,
          "position": 1395
        },
        "endLoc": {
          "line": 190,
          "column": 7,
          "position": 1489
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ": boolean\n          color_accuracy_score?: number | null\n          mixing_efficiency_score?: number | null\n          cost_effectiveness_score?: number | null\n          project_name?: string | null\n          surface_type?: string | null\n          application_method?: string | null\n          environmental_conditions?: Json | null\n          user_satisfaction_rating?: number | null\n          notes?: string | null\n          would_use_again?: boolean | null\n          created_at?: string\n          updated_at?: string\n          archived?: boolean\n        }\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 282,
        "end": 297,
        "startLoc": {
          "line": 282,
          "column": 2,
          "position": 2160
        },
        "endLoc": {
          "line": 297,
          "column": 14,
          "position": 2299
        }
      },
      "secondFile": {
        "name": "src/lib/database/database.types.ts",
        "start": 255,
        "end": 270,
        "startLoc": {
          "line": 255,
          "column": 21,
          "position": 1936
        },
        "endLoc": {
          "line": 270,
          "column": 7,
          "position": 2075
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "*</label>\n            <input\n              type=\"number\"\n              min=\"-128\"\n              max=\"127\"\n              step=\"0.1\"\n              value={colorInputs.b}\n              onChange={(e) => handleLABInput('b', e.target.value)}\n              disabled={disabled}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <div className=\"text-xs text-gray-500 mt-1\">-128 to 127</div>\n          </div>\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 316,
        "end": 329,
        "startLoc": {
          "line": 316,
          "column": 2,
          "position": 3193
        },
        "endLoc": {
          "line": 329,
          "column": 3,
          "position": 3295
        }
      },
      "secondFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 302,
        "end": 315,
        "startLoc": {
          "line": 302,
          "column": 2,
          "position": 3076
        },
        "endLoc": {
          "line": 315,
          "column": 2,
          "position": 3178
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"255\"\n              value={colorInputs.g}\n              onChange={(e) => handleRGBInput('g', e.target.value)}\n              disabled={disabled}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Blue",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 347,
        "end": 359,
        "startLoc": {
          "line": 347,
          "column": 6,
          "position": 3437
        },
        "endLoc": {
          "line": 359,
          "column": 5,
          "position": 3526
        }
      },
      "secondFile": {
        "name": "src/components/ui/color-picker.tsx",
        "start": 335,
        "end": 347,
        "startLoc": {
          "line": 335,
          "column": 4,
          "position": 3347
        },
        "endLoc": {
          "line": 347,
          "column": 6,
          "position": 3436
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ">\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                      </svg>\n                      View",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/session-manager/SessionCard.tsx",
        "start": 180,
        "end": 185,
        "startLoc": {
          "line": 180,
          "column": 21,
          "position": 1637
        },
        "endLoc": {
          "line": 185,
          "column": 5,
          "position": 1734
        }
      },
      "secondFile": {
        "name": "src/components/session-manager/SessionCard.tsx",
        "start": 124,
        "end": 129,
        "startLoc": {
          "line": 124,
          "column": 15,
          "position": 1110
        },
        "endLoc": {
          "line": 129,
          "column": 3,
          "position": 1207
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ">\n                    <button\n                      onClick={() => {\n                        \n                        setIsMenuOpen(false)\n                      }}\n                      className=\"flex items-center gap-2 w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/session-manager/SessionCard.tsx",
        "start": 186,
        "end": 195,
        "startLoc": {
          "line": 186,
          "column": 7,
          "position": 1741
        },
        "endLoc": {
          "line": 195,
          "column": 119,
          "position": 1827
        }
      },
      "secondFile": {
        "name": "src/components/session-manager/SessionCard.tsx",
        "start": 173,
        "end": 182,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1607
        },
        "endLoc": {
          "line": 182,
          "column": 33,
          "position": 1693
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n            <option value=\"matte\">Matte</option>\n            <option value=\"satin\">Satin</option>\n            <option value=\"gloss\">Gloss</option>\n            <option value=\"metallic\">Metallic</option>\n          </select>\n        </div>\n        <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/paint/PaintFilters.tsx",
        "start": 63,
        "end": 70,
        "startLoc": {
          "line": 63,
          "column": 7,
          "position": 494
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 567
        }
      },
      "secondFile": {
        "name": "src/components/paint/PaintFormModal.tsx",
        "start": 128,
        "end": 135,
        "startLoc": {
          "line": 128,
          "column": 17,
          "position": 921
        },
        "endLoc": {
          "line": 135,
          "column": 3,
          "position": 994
        }
      }
    },
    {
      "format": "javascript",
      "lines": 143,
      "fragment": "={`optimization-results bg-white border border-red-200 rounded-lg p-6 ${className}`}>\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">😔</div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Optimization Failed</h3>\n          <p className=\"text-gray-600 mb-4\">\n            Unable to find a suitable paint mixture for the target color.\n          </p>\n          <div className=\"space-y-2 text-sm text-gray-500\">\n            <div>Delta E achieved: {deltaE.toFixed(2)}</div>\n            <div>Time spent: {(performance.optimization_time_ms / 1000).toFixed(1)}s</div>\n            <div>Iterations: {performance.iterations_completed.toLocaleString()}</div>\n          </div>\n          <div className=\"mt-6 space-x-3\">\n            <button\n              onClick={onCreateNewMix}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n            >\n              Try Different Settings\n            </button>\n            {onAdjustTarget && (\n              <button\n                onClick={() => onAdjustTarget(targetColor)}\n                className=\"bg-gray-600 text-white px-4 py-2 rounded-md hover:bg-gray-700\"\n              >\n                Adjust Target\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`optimization-results bg-white border border-gray-200 rounded-lg ${className}`}>\n      {/* Header */}\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"text-2xl\">{accuracyBadge.icon}</div>\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900\">\n                Optimization Complete\n              </h3>\n              <div className=\"flex items-center space-x-2 mt-1\">\n                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${accuracyBadge.color}`}>\n                  {accuracyBadge.label}\n                </span>\n                <span className=\"text-sm text-gray-500\">ΔE = {deltaE.toFixed(2)}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            {/* Color comparison */}\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"text-center\">\n                <div\n                  className=\"w-12 h-12 rounded border-2 border-gray-200\"\n                  style={{ backgroundColor: targetHex }}\n                  title=\"Target Color\"\n                />\n                <div className=\"text-xs text-gray-500 mt-1\">Target</div>\n              </div>\n              <div className=\"text-gray-400\">→</div>\n              <div className=\"text-center\">\n                <div\n                  className=\"w-12 h-12 rounded border-2 border-gray-200\"\n                  style={{ backgroundColor: achievedHex }}\n                  title=\"Achieved Color\"\n                />\n                <div className=\"text-xs text-gray-500 mt-1\">Result</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex border-b border-gray-200\">\n        {[\n          { id: 'summary', label: 'Summary', icon: '📊' },\n          { id: 'paints', label: 'Paint Mix', icon: '🎨' },\n          { id: 'analysis', label: 'Analysis', icon: '🔍' },\n          { id: 'instructions', label: 'Instructions', icon: '📋' }\n        ].map((tab) => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveView(tab.id as any)}\n            className={`flex-1 px-4 py-3 text-sm font-medium border-b-2 ${\n              activeView === tab.id\n                ? 'border-blue-500 text-blue-600 bg-blue-50'\n                : 'border-transparent text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            <span className=\"mr-2\">{tab.icon}</span>\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* Summary View */}\n      {activeView === 'summary' && (\n        <div className=\"px-6 py-4 space-y-6\">\n          {/* Key Metrics */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{deltaE.toFixed(2)}</div>\n              <div className=\"text-sm text-gray-600\">Delta E</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{quality.color_accuracy_score.toFixed(0)}%</div>\n              <div className=\"text-sm text-gray-600\">Accuracy</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">{paintDetails.length}</div>\n              <div className=\"text-sm text-gray-600\">Paints Used</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-orange-600\">${metrics.totalCost.toFixed(2)}</div>\n              <div className=\"text-sm text-gray-600\">Total Cost</div>\n            </div>\n          </div>\n\n          {/* Performance Summary */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h4 className=\"font-medium text-gray-900 mb-3\">Performance</h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">Time:</span>\n                <span className=\"ml-2 font-medium\">{(performance.optimization_time_ms / 1000).toFixed(1)}s</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Algorithm:</span>\n                <span className=\"ml-2 font-medium capitalize\">{performance.algorithm_used.replace('_', ' ')}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Iterations:</span>\n                <span className=\"ml-2 font-medium\">{performance.iterations_completed.toLocaleString()}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Convergence:</span>\n                <span className={`ml-2 font-medium ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 165,
        "end": 307,
        "startLoc": {
          "line": 165,
          "column": 10,
          "position": 1443
        },
        "endLoc": {
          "line": 307,
          "column": 19,
          "position": 2825
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results.tsx",
        "start": 168,
        "end": 271,
        "startLoc": {
          "line": 168,
          "column": 10,
          "position": 1470
        },
        "endLoc": {
          "line": 271,
          "column": 7,
          "position": 2333
        }
      }
    },
    {
      "format": "tsx",
      "lines": 145,
      "fragment": ";\n\ninterface PaintVolume {\n  id: string;\n  name: string;\n  brand: string;\n  volume_ml: number;\n  percentage: number;\n  hex_color: string;\n  cost_per_ml: number;\n}\n\ninterface OptimizationSolution {\n  paint_volumes: Record<string, number>;\n  total_volume_ml: number;\n  predicted_color: LABColor;\n  confidence_score: number;\n}\n\ninterface PerformanceMetrics {\n  optimization_time_ms: number;\n  iterations_completed: number;\n  algorithm_used: string;\n  convergence_achieved: boolean;\n}\n\ninterface QualityMetrics {\n  color_accuracy_score: number;\n  meets_target: boolean;\n  cost_effectiveness: number;\n}\n\ninterface MixingInstruction {\n  step: number;\n  action: string;\n  description: string;\n  details: string;\n  paintId?: string;\n  volume?: number;\n  color?: string;\n}\n\ninterface OptimizationResultsProps {\n  targetColor: LABColor;\n  achievedColor?: LABColor;\n  deltaE: number;\n  solution?: OptimizationSolution;\n  paintDetails: PaintVolume[];\n  performance: PerformanceMetrics;\n  quality: QualityMetrics;\n  success: boolean;\n  onSaveToHistory?: () => void;\n  onCreateNewMix?: () => void;\n  onAdjustTarget?: (newTarget: LABColor) => void;\n  className?: string;\n  showDetailedAnalysis?: boolean;\n}\n\nexport default function OptimizationResults({\n  targetColor,\n  achievedColor,\n  deltaE,\n  solution,\n  paintDetails,\n  performance,\n  quality,\n  success,\n  onSaveToHistory,\n  onCreateNewMix,\n  onAdjustTarget,\n  className = '',\n  showDetailedAnalysis = true\n}: OptimizationResultsProps) {\n  const [activeView, setActiveView] = useState<'summary' | 'paints' | 'analysis' | 'instructions'>('summary');\n\n  const targetHex = rgbToHex(labToRgb(targetColor));\n  const achievedHex = achievedColor ? rgbToHex(labToRgb(achievedColor)) : '#000000';\n\n  // Calculate additional metrics\n  const metrics = useMemo(() => {\n    const totalCost = paintDetails.reduce((sum, paint) => sum + (paint.volume_ml * paint.cost_per_ml), 0);\n    const costPerMl = solution ? totalCost / solution.total_volume_ml : 0;\n    const dominantPaint = paintDetails.reduce((max, paint) =>\n      paint.percentage > max.percentage ? paint : max, paintDetails[0]\n    );\n\n    return {\n      totalCost,\n      costPerMl,\n      dominantPaint,\n      complexity: paintDetails.length,\n      efficiency: performance.optimization_time_ms > 0 ? (performance.iterations_completed / performance.optimization_time_ms) * 1000 : 0\n    };\n  }, [paintDetails, solution, performance]);\n\n  // Generate mixing instructions\n  const mixingInstructions = useMemo(() => {\n    if (!solution || paintDetails.length === 0) return [];\n\n    const sortedPaints = [...paintDetails].sort((a, b) => b.volume_ml - a.volume_ml);\n    const instructions: MixingInstruction[] = [];\n\n    instructions.push({\n      step: 1,\n      action: 'preparation',\n      description: 'Clean mixing container and ensure accurate measuring tools',\n      details: `Target volume: ${solution.total_volume_ml.toFixed(1)}ml`\n    });\n\n    sortedPaints.forEach((paint, index) => {\n      const stepNumber = index + 2;\n      const isBase = index === 0;\n\n      instructions.push({\n        step: stepNumber,\n        action: isBase ? 'base' : 'add',\n        description: `${isBase ? 'Start with base paint:' : 'Add paint:'} ${paint.name}`,\n        details: `Measure ${paint.volume_ml.toFixed(1)}ml (${paint.percentage.toFixed(1)}%) of ${paint.brand} ${paint.name}`,\n        paintId: paint.id,\n        volume: paint.volume_ml,\n        color: paint.hex_color\n      });\n\n      if (!isBase) {\n        instructions.push({\n          step: stepNumber + 0.5,\n          action: 'mix',\n          description: 'Mix thoroughly',\n          details: 'Stir for 30-60 seconds until uniform color is achieved'\n        });\n      }\n    });\n\n    instructions.push({\n      step: instructions.length + 1,\n      action: 'verify',\n      description: 'Color verification',\n      details: 'Compare mixed color with target under proper lighting conditions'\n    });\n\n    return instructions;\n  }, [solution, paintDetails]);\n\n  const getAccuracyBadge = () => {\n    if (deltaE <= 1.0) return { label: 'Excellent', color: 'bg-green-100 text-green-800', icon: '🎯'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 10,
        "end": 154,
        "startLoc": {
          "line": 10,
          "column": 22,
          "position": 53
        },
        "endLoc": {
          "line": 154,
          "column": 5,
          "position": 1270
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results.tsx",
        "start": 13,
        "end": 157,
        "startLoc": {
          "line": 13,
          "column": 27,
          "position": 80
        },
        "endLoc": {
          "line": 157,
          "column": 9,
          "position": 1297
        }
      }
    },
    {
      "format": "tsx",
      "lines": 89,
      "fragment": "};\n  };\n\n  const accuracyBadge = getAccuracyBadge();\n\n  if (!success) {\n    return (\n      <div className={`optimization-results bg-white border border-red-200 rounded-lg p-6 ${className}`}>\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">😔</div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Optimization Failed</h3>\n          <p className=\"text-gray-600 mb-4\">\n            Unable to find a suitable paint mixture for the target color.\n          </p>\n          <div className=\"space-y-2 text-sm text-gray-500\">\n            <div>Delta E achieved: {deltaE.toFixed(2)}</div>\n            <div>Time spent: {(performance.optimization_time_ms / 1000).toFixed(1)}s</div>\n            <div>Iterations: {performance.iterations_completed.toLocaleString()}</div>\n          </div>\n          <div className=\"mt-6 space-x-3\">\n            <button\n              onClick={onCreateNewMix}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n            >\n              Try Different Settings\n            </button>\n            {onAdjustTarget && (\n              <button\n                onClick={() => onAdjustTarget(targetColor)}\n                className=\"bg-gray-600 text-white px-4 py-2 rounded-md hover:bg-gray-700\"\n              >\n                Adjust Target\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`optimization-results bg-white border border-gray-200 rounded-lg ${className}`}>\n      {/* Header */}\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"text-2xl\">{accuracyBadge.icon}</div>\n            <div>\n              <h3 className=\"text-lg font-medium text-gray-900\">\n                Optimization Complete\n              </h3>\n              <div className=\"flex items-center space-x-2 mt-1\">\n                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${accuracyBadge.color}`}>\n                  {accuracyBadge.label}\n                </span>\n                <span className=\"text-sm text-gray-500\">ΔE = {deltaE.toFixed(2)}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            {/* Color comparison */}\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"text-center\">\n                <div\n                  className=\"w-12 h-12 rounded border-2 border-gray-200\"\n                  style={{ backgroundColor: targetHex }}\n                  title=\"Target Color\"\n                />\n                <div className=\"text-xs text-gray-500 mt-1\">Target</div>\n              </div>\n              <div className=\"text-gray-400\">→</div>\n              <div className=\"text-center\">\n                <div\n                  className=\"w-12 h-12 rounded border-2 border-gray-200\"\n                  style={{ backgroundColor: achievedHex }}\n                  title=\"Achieved Color\"\n                />\n                <div className=\"text-xs text-gray-500 mt-1\">Result</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex border-b border-gray-200\">\n        {[\n          { id: 'summary', label: 'Summary',",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 158,
        "end": 246,
        "startLoc": {
          "line": 158,
          "column": 2,
          "position": 1402
        },
        "endLoc": {
          "line": 246,
          "column": 2,
          "position": 2137
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results.tsx",
        "start": 161,
        "end": 249,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 1429
        },
        "endLoc": {
          "line": 249,
          "column": 2,
          "position": 2165
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "<div>\n            <h4 className=\"font-medium text-gray-900 mb-3\">Color Analysis</h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div className=\"space-y-2\">\n                <div className=\"font-medium\">Target (LAB)</div>\n                <div>L*: {targetColor.l.toFixed(2)}</div>\n                <div>a*: {targetColor.a.toFixed(2)}</div>\n                <div>b*: {targetColor.b.toFixed(2)}</div>\n              </div>\n              {achievedColor && (\n                <div className=\"space-y-2\">\n                  <div className=\"font-medium\">Achieved (LAB)</div>\n                  <div>L*: {achievedColor.l.toFixed(2)}</div>\n                  <div>a*: {achievedColor.a.toFixed(2)}</div>\n                  <div>b*: {achievedColor.b.toFixed(2)}</div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 395,
        "end": 415,
        "startLoc": {
          "line": 395,
          "column": 11,
          "position": 3594
        },
        "endLoc": {
          "line": 415,
          "column": 2,
          "position": 3852
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results.tsx",
        "start": 293,
        "end": 312,
        "startLoc": {
          "line": 293,
          "column": 11,
          "position": 2464
        },
        "endLoc": {
          "line": 312,
          "column": 3,
          "position": 2721
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "(\n    <div className=\"px-6 py-4 space-y-6\">\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">{deltaE.toFixed(2)}</div>\n          <div className=\"text-sm text-gray-600\">Delta E</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">{quality.color_accuracy_score.toFixed(0)}%</div>\n          <div className=\"text-sm text-gray-600\">Accuracy</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-purple-600\">{paintCount",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/ResultsSummaryView.tsx",
        "start": 42,
        "end": 55,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 202
        },
        "endLoc": {
          "line": 55,
          "column": 11,
          "position": 364
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 267,
        "end": 280,
        "startLoc": {
          "line": 267,
          "column": 2,
          "position": 2340
        },
        "endLoc": {
          "line": 280,
          "column": 13,
          "position": 2502
        }
      }
    },
    {
      "format": "tsx",
      "lines": 35,
      "fragment": "totalCost.toFixed(2)}</div>\n          <div className=\"text-sm text-gray-600\">Total Cost</div>\n        </div>\n      </div>\n\n      {/* Performance Summary */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <h4 className=\"font-medium text-gray-900 mb-3\">Performance</h4>\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div>\n            <span className=\"text-gray-600\">Time:</span>\n            <span className=\"ml-2 font-medium\">{(performance.optimization_time_ms / 1000).toFixed(1)}s</span>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">Algorithm:</span>\n            <span className=\"ml-2 font-medium capitalize\">{performance.algorithm_used.replace('_', ' ')}</span>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">Iterations:</span>\n            <span className=\"ml-2 font-medium\">{performance.iterations_completed.toLocaleString()}</span>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">Convergence:</span>\n            <span className={`ml-2 font-medium ${performance.convergence_achieved ? 'text-green-600' : 'text-yellow-600'}`}>\n              {performance.convergence_achieved ? 'Yes' : 'No'}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"flex space-x-3\">\n        {onSaveToHistory && (\n          <button\n            ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/ResultsSummaryView.tsx",
        "start": 59,
        "end": 93,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 415
        },
        "endLoc": {
          "line": 93,
          "column": 13,
          "position": 763
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 284,
        "end": 318,
        "startLoc": {
          "line": 284,
          "column": 2,
          "position": 2557
        },
        "endLoc": {
          "line": 318,
          "column": 17,
          "position": 2905
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "(\n    <div className=\"px-6 py-4\">\n      {solution && (\n        <div className=\"mb-4 text-center\">\n          <div className=\"text-lg font-medium\">Total Volume: {solution.total_volume_ml.toFixed(1)} ml</div>\n          <div className=\"text-sm text-gray-600\">Cost per ml: ${costPerMl",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/PaintMixView.tsx",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 153
        },
        "endLoc": {
          "line": 36,
          "column": 10,
          "position": 235
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 337,
        "end": 342,
        "startLoc": {
          "line": 337,
          "column": 2,
          "position": 3010
        },
        "endLoc": {
          "line": 342,
          "column": 8,
          "position": 3092
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "costPerMl.toFixed(3)}</div>\n        </div>\n      )}\n\n      <div className=\"space-y-3\">\n        {paintDetails.map((paint) => (\n          <div key={paint.id} className=\"flex items-center p-4 bg-gray-50 rounded-lg\">\n            <div className=\"flex items-center flex-1 space-x-4\">\n              <div className=\"flex-shrink-0\">\n                <div\n                  ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/PaintMixView.tsx",
        "start": 36,
        "end": 46,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 235
        },
        "endLoc": {
          "line": 46,
          "column": 19,
          "position": 325
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 342,
        "end": 352,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 3094
        },
        "endLoc": {
          "line": 352,
          "column": 23,
          "position": 3184
        }
      }
    },
    {
      "format": "tsx",
      "lines": 36,
      "fragment": "/>\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"font-medium text-gray-900\">{paint.name}</div>\n                <div className=\"text-sm text-gray-600\">{paint.brand}</div>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"font-medium\">{paint.volume_ml.toFixed(1)} ml</div>\n                <div className=\"text-sm text-gray-600\">{paint.percentage.toFixed(1)}%</div>\n              </div>\n              <div className=\"text-right text-sm text-gray-600\">\n                ${(paint.volume_ml * paint.cost_per_ml).toFixed(2)}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Visual Mix Representation */}\n      <div className=\"mt-6\">\n        <div className=\"text-sm font-medium text-gray-700 mb-2\">Proportional Mix</div>\n        <div className=\"flex rounded-lg overflow-hidden border border-gray-200\" style={{ height: '40px' }}>\n          {paintDetails.map((paint) => (\n            <div\n              key={paint.id}\n              style={{\n                backgroundColor: paint.hex_color,\n                width: `${paint.percentage}%`\n              }}\n              title={`${paint.name}: ${paint.percentage.toFixed(1)}%`}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/PaintMixView.tsx",
        "start": 48,
        "end": 83,
        "startLoc": {
          "line": 48,
          "column": 17,
          "position": 344
        },
        "endLoc": {
          "line": 83,
          "column": 2,
          "position": 694
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 354,
        "end": 389,
        "startLoc": {
          "line": 354,
          "column": 21,
          "position": 3203
        },
        "endLoc": {
          "line": 389,
          "column": 2,
          "position": 3553
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ".map((instruction, index) => (\n          <div key={index} className=\"flex items-start space-x-4 p-3 bg-gray-50 rounded-lg\">\n            <div className=\"flex-shrink-0 w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-medium\">\n              {Math.floor(instruction.step)}\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"font-medium text-gray-900\">{instruction.description}</div>\n              <div className=\"text-sm text-gray-600 mt-1\">{instruction.details}</div>\n              {instruction.paintId && (\n                <div\n                  ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/MixingInstructionsView.tsx",
        "start": 36,
        "end": 46,
        "startLoc": {
          "line": 36,
          "column": 13,
          "position": 232
        },
        "endLoc": {
          "line": 46,
          "column": 19,
          "position": 353
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 511,
        "end": 521,
        "startLoc": {
          "line": 511,
          "column": 19,
          "position": 4822
        },
        "endLoc": {
          "line": 521,
          "column": 23,
          "position": 4943
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "/>\n              )}\n            </div>\n            {instruction.volume && (\n              <div className=\"text-right\">\n                <div className=\"font-medium text-blue-600\">{instruction.volume.toFixed(1)} ml</div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"mt-6 p-4 bg-yellow-50 rounded-lg\">\n        <h5 className=\"font-medium text-yellow-900 mb-2\">Important",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/optimization/MixingInstructionsView.tsx",
        "start": 48,
        "end": 61,
        "startLoc": {
          "line": 48,
          "column": 17,
          "position": 372
        },
        "endLoc": {
          "line": 61,
          "column": 10,
          "position": 476
        }
      },
      "secondFile": {
        "name": "src/components/optimization/optimization-results-old.tsx",
        "start": 523,
        "end": 536,
        "startLoc": {
          "line": 523,
          "column": 21,
          "position": 4962
        },
        "endLoc": {
          "line": 536,
          "column": 3,
          "position": 5066
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`collection-manager bg-white rounded-lg shadow-lg ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Paint Collections",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/collection-manager.tsx",
        "start": 103,
        "end": 114,
        "startLoc": {
          "line": 103,
          "column": 12,
          "position": 794
        },
        "endLoc": {
          "line": 114,
          "column": 12,
          "position": 876
        }
      },
      "secondFile": {
        "name": "src/components/paint/paint-library.tsx",
        "start": 128,
        "end": 139,
        "startLoc": {
          "line": 128,
          "column": 7,
          "position": 1009
        },
        "endLoc": {
          "line": 139,
          "column": 8,
          "position": 1091
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "</div>\n\n            <div className=\"flex justify-end space-x-3 pt-4\">\n              <button\n                type=\"button\"\n                onClick={onCancel}\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                {editingCollection",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/CollectionFormModal.tsx",
        "start": 94,
        "end": 108,
        "startLoc": {
          "line": 94,
          "column": 13,
          "position": 748
        },
        "endLoc": {
          "line": 108,
          "column": 18,
          "position": 816
        }
      },
      "secondFile": {
        "name": "src/components/paint/PaintFormModal.tsx",
        "start": 147,
        "end": 161,
        "startLoc": {
          "line": 147,
          "column": 13,
          "position": 1075
        },
        "endLoc": {
          "line": 161,
          "column": 13,
          "position": 1143
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ">\n          <option value=\"sRGB\">sRGB</option>\n          <option value=\"Adobe_RGB\">Adobe RGB</option>\n          <option value=\"ProPhoto_RGB\">ProPhoto RGB</option>\n          <option value=\"Lab\">Lab</option>\n        </select>\n      </div>\n      <div>\n        <select",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/CollectionFilters.tsx",
        "start": 30,
        "end": 38,
        "startLoc": {
          "line": 30,
          "column": 7,
          "position": 214
        },
        "endLoc": {
          "line": 38,
          "column": 7,
          "position": 297
        }
      },
      "secondFile": {
        "name": "src/components/collection/CollectionFormModal.tsx",
        "start": 73,
        "end": 82,
        "startLoc": {
          "line": 73,
          "column": 15,
          "position": 536
        },
        "endLoc": {
          "line": 82,
          "column": 6,
          "position": 620
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/collection/CollectionCard.tsx",
        "start": 100,
        "end": 107,
        "startLoc": {
          "line": 100,
          "column": 103,
          "position": 748
        },
        "endLoc": {
          "line": 107,
          "column": 125,
          "position": 806
        }
      },
      "secondFile": {
        "name": "src/components/collection/CollectionCard.tsx",
        "start": 84,
        "end": 91,
        "startLoc": {
          "line": 84,
          "column": 106,
          "position": 641
        },
        "endLoc": {
          "line": 91,
          "column": 119,
          "position": 699
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "({ className = '' }: { className?: string }) {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSignOut = async () => {\n    setIsLoading(true)\n\n    try {\n      const { error } = await signOut()\n\n      if (!error) {\n        router.push('/auth/signin')\n        router.refresh()\n      }\n    } catch (err) {\n      console.error('Sign-out error:', err)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <button\n      onClick={handleSignOut}\n      disabled={isLoading}\n      data-testid=\"signout-menu-item",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/auth/SignOutButton.tsx",
        "start": 189,
        "end": 214,
        "startLoc": {
          "line": 189,
          "column": 16,
          "position": 1041
        },
        "endLoc": {
          "line": 214,
          "column": 18,
          "position": 1235
        }
      },
      "secondFile": {
        "name": "src/components/auth/SignOutButton.tsx",
        "start": 136,
        "end": 165,
        "startLoc": {
          "line": 136,
          "column": 18,
          "position": 763
        },
        "endLoc": {
          "line": 165,
          "column": 20,
          "position": 959
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ": undefined}\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg\n                     focus:ring-2 focus:ring-blue-500 focus:border-blue-500\n                     dark:bg-gray-700 dark:text-white\n                     disabled:opacity-50 disabled:cursor-not-allowed\n                     aria-[invalid=true]:border-red-500\"\n          {...register('password'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/auth/EmailSigninForm.tsx",
        "start": 208,
        "end": 214,
        "startLoc": {
          "line": 208,
          "column": 2,
          "position": 1438
        },
        "endLoc": {
          "line": 214,
          "column": 11,
          "position": 1552
        }
      },
      "secondFile": {
        "name": "src/components/auth/EmailSigninForm.tsx",
        "start": 178,
        "end": 184,
        "startLoc": {
          "line": 178,
          "column": 2,
          "position": 1159
        },
        "endLoc": {
          "line": 184,
          "column": 8,
          "position": 1273
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "...\n                    </>\n                  ) : (\n                    <>\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/history/page.tsx",
        "start": 239,
        "end": 244,
        "startLoc": {
          "line": 239,
          "column": 8,
          "position": 2097
        },
        "endLoc": {
          "line": 244,
          "column": 27,
          "position": 2169
        }
      },
      "secondFile": {
        "name": "src/components/session-manager/SaveForm.tsx",
        "start": 270,
        "end": 275,
        "startLoc": {
          "line": 270,
          "column": 7,
          "position": 2043
        },
        "endLoc": {
          "line": 275,
          "column": 92,
          "position": 2115
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      filters: {\n        search: '',\n        brands: [],\n        finish_types: [],\n        min_volume_ml: undefined,\n        max_volume_ml: undefined,\n        min_cost_per_ml: undefined,\n        max_cost_per_ml: undefined,\n        color_similar_to: undefined,\n        delta_e_threshold: undefined,\n        collection_id: collectionId,\n        archived: false\n      },\n      pagination",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/usePaintLibrary.ts",
        "start": 181,
        "end": 195,
        "startLoc": {
          "line": 181,
          "column": 5,
          "position": 1677
        },
        "endLoc": {
          "line": 195,
          "column": 11,
          "position": 1768
        }
      },
      "secondFile": {
        "name": "src/hooks/usePaintLibrary.ts",
        "start": 51,
        "end": 65,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 399
        },
        "endLoc": {
          "line": 65,
          "column": 15,
          "position": 490
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "= useCallback(async () => {\n    setState((prev) => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const params = new URLSearchParams({\n        page: state.pagination.page.toString(),\n        limit: state.pagination.limit.toString(),\n        sort_field: state.sortField,\n        sort_direction: state.sortDirection,",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useCollectionManager.ts",
        "start": 64,
        "end": 72,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 503
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 613
        }
      },
      "secondFile": {
        "name": "src/hooks/usePaintLibrary.ts",
        "start": 72,
        "end": 81,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 553
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "} catch (error) {\n      setState((prev) => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        loading: false\n      }));\n    }\n  }, [\n    state.pagination.page,\n    state.pagination.limit,\n    state.sortField,\n    state.sortDirection,\n    state.filters,",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useCollectionManager.ts",
        "start": 124,
        "end": 136,
        "startLoc": {
          "line": 124,
          "column": 5,
          "position": 1150
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1251
        }
      },
      "secondFile": {
        "name": "src/hooks/usePaintLibrary.ts",
        "start": 124,
        "end": 137,
        "startLoc": {
          "line": 124,
          "column": 5,
          "position": 1200
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1303
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", value: any) => {\n    setState((prev) => ({\n      ...prev,\n      filters: { ...prev.filters, [field]: value },\n      pagination: { ...prev.pagination, page: 1 }\n    }));\n  };\n\n  // Handle sorting",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useCollectionManager.ts",
        "start": 146,
        "end": 154,
        "startLoc": {
          "line": 146,
          "column": 4,
          "position": 1309
        },
        "endLoc": {
          "line": 154,
          "column": 18,
          "position": 1391
        }
      },
      "secondFile": {
        "name": "src/hooks/usePaintLibrary.ts",
        "start": 170,
        "end": 178,
        "startLoc": {
          "line": 170,
          "column": 18,
          "position": 1564
        },
        "endLoc": {
          "line": 178,
          "column": 21,
          "position": 1646
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "},\n      pagination: { ...prev.pagination, page: 1 }\n    }));\n  };\n\n  // Handle sorting\n  const handleSort = (field: string) => {\n    setState((prev) => ({\n      ...prev,\n      sortField: field,\n      sortDirection:\n        prev.sortField === field && prev.sortDirection === 'asc' ? 'desc' : 'asc',\n      pagination: { ...prev.pagination, page: 1 }\n    }));\n  };\n\n  // Handle page change\n  const handlePageChange = (page: number) => {\n    setState((prev) => ({\n      ...prev,\n      pagination: { ...prev.pagination, page }\n    }));\n  };\n\n  // Save collection (create or update)",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useCollectionManager.ts",
        "start": 149,
        "end": 173,
        "startLoc": {
          "line": 149,
          "column": 2,
          "position": 1357
        },
        "endLoc": {
          "line": 173,
          "column": 38,
          "position": 1563
        }
      },
      "secondFile": {
        "name": "src/hooks/usePaintLibrary.ts",
        "start": 194,
        "end": 218,
        "startLoc": {
          "line": 194,
          "column": 7,
          "position": 1764
        },
        "endLoc": {
          "line": 218,
          "column": 33,
          "position": 1970
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(request),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(errorData.message || 'Failed to calculate color match'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/use-color-matching.ts",
        "start": 53,
        "end": 63,
        "startLoc": {
          "line": 53,
          "column": 19,
          "position": 488
        },
        "endLoc": {
          "line": 63,
          "column": 34,
          "position": 573
        }
      },
      "secondFile": {
        "name": "src/hooks/use-image-processing.ts",
        "start": 75,
        "end": 85,
        "startLoc": {
          "line": 75,
          "column": 27,
          "position": 796
        },
        "endLoc": {
          "line": 85,
          "column": 37,
          "position": 881
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "!isLocked) return\n\n    const interval = setInterval(() => {\n      const email = getValues('email')\n      if (!email) return\n\n      const updatedLockout = checkLocalLockout(email)\n      setIsLocked(updatedLockout.isLocked)\n      setLockoutMinutes(updatedLockout.minutesRemaining)\n\n      if (!updatedLockout.isLocked) {\n        clearInterval(interval)\n      }\n    }, 60000) // Update every minute\n\n    return () => clearInterval(interval)\n  }, [isLocked",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 77,
        "end": 93,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 518
        },
        "endLoc": {
          "line": 93,
          "column": 9,
          "position": 642
        }
      },
      "secondFile": {
        "name": "src/components/auth/EmailSigninForm.tsx",
        "start": 61,
        "end": 77,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 384
        },
        "endLoc": {
          "line": 77,
          "column": 8,
          "position": 508
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": undefined}\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg\n                     bg-white dark:bg-gray-800 text-gray-900 dark:text-white\n                     focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\n                     disabled:opacity-50 disabled:cursor-not-allowed\n                     aria-[invalid=true]:border-red-500\"\n        />\n        {errors.password",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 220,
        "end": 227,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 1707
        },
        "endLoc": {
          "line": 227,
          "column": 9,
          "position": 1838
        }
      },
      "secondFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 187,
        "end": 194,
        "startLoc": {
          "line": 187,
          "column": 2,
          "position": 1405
        },
        "endLoc": {
          "line": 194,
          "column": 6,
          "position": 1536
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ": undefined\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg\n                       bg-white dark:bg-gray-800 text-gray-900 dark:text-white\n                       focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\n                       disabled:opacity-50 disabled:cursor-not-allowed\n                       aria-[invalid=true]:border-red-500\"\n          />\n          {errors.confirmPassword",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 257,
        "end": 265,
        "startLoc": {
          "line": 257,
          "column": 2,
          "position": 2029
        },
        "endLoc": {
          "line": 265,
          "column": 16,
          "position": 2162
        }
      },
      "secondFile": {
        "name": "src/components/EmailPasswordForm.tsx",
        "start": 187,
        "end": 194,
        "startLoc": {
          "line": 187,
          "column": 2,
          "position": 1405
        },
        "endLoc": {
          "line": 194,
          "column": 6,
          "position": 1536
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center gap-3\">\n              <div",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/page.tsx",
        "start": 194,
        "end": 201,
        "startLoc": {
          "line": 194,
          "column": 3,
          "position": 1746
        },
        "endLoc": {
          "line": 201,
          "column": 4,
          "position": 1812
        }
      },
      "secondFile": {
        "name": "src/app/history/page.tsx",
        "start": 130,
        "end": 137,
        "startLoc": {
          "line": 130,
          "column": 3,
          "position": 1205
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1271
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "{/* Error Display */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center gap-2\">\n              <svg className=\"w-5 h-5 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n              <p className=\"text-sm text-red-600\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Loading State */",
      "tokens": 0,
      "firstFile": {
        "name": "src/app/page.tsx",
        "start": 449,
        "end": 465,
        "startLoc": {
          "line": 449,
          "column": 9,
          "position": 3702
        },
        "endLoc": {
          "line": 465,
          "column": 20,
          "position": 3822
        }
      },
      "secondFile": {
        "name": "src/app/history/page.tsx",
        "start": 197,
        "end": 213,
        "startLoc": {
          "line": 197,
          "column": 9,
          "position": 1770
        },
        "endLoc": {
          "line": 213,
          "column": 20,
          "position": 1890
        }
      }
    }
  ]
}